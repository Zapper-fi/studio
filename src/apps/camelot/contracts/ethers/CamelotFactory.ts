/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from './common';

export interface CamelotFactoryInterface extends utils.Interface {
  functions: {
    'OWNER_FEE_SHARE_MAX()': FunctionFragment;
    'REFERER_FEE_SHARE_MAX()': FunctionFragment;
    'allPairs(uint256)': FunctionFragment;
    'allPairsLength()': FunctionFragment;
    'createPair(address,address)': FunctionFragment;
    'feeInfo()': FunctionFragment;
    'feePercentOwner()': FunctionFragment;
    'feeTo()': FunctionFragment;
    'getPair(address,address)': FunctionFragment;
    'owner()': FunctionFragment;
    'ownerFeeShare()': FunctionFragment;
    'referrersFeeShare(address)': FunctionFragment;
    'setFeePercentOwner(address)': FunctionFragment;
    'setFeeTo(address)': FunctionFragment;
    'setOwner(address)': FunctionFragment;
    'setOwnerFeeShare(uint256)': FunctionFragment;
    'setReferrerFeeShare(address,uint256)': FunctionFragment;
    'setSetStableOwner(address)': FunctionFragment;
    'setStableOwner()': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'OWNER_FEE_SHARE_MAX'
      | 'REFERER_FEE_SHARE_MAX'
      | 'allPairs'
      | 'allPairsLength'
      | 'createPair'
      | 'feeInfo'
      | 'feePercentOwner'
      | 'feeTo'
      | 'getPair'
      | 'owner'
      | 'ownerFeeShare'
      | 'referrersFeeShare'
      | 'setFeePercentOwner'
      | 'setFeeTo'
      | 'setOwner'
      | 'setOwnerFeeShare'
      | 'setReferrerFeeShare'
      | 'setSetStableOwner'
      | 'setStableOwner',
  ): FunctionFragment;

  encodeFunctionData(functionFragment: 'OWNER_FEE_SHARE_MAX', values?: undefined): string;
  encodeFunctionData(functionFragment: 'REFERER_FEE_SHARE_MAX', values?: undefined): string;
  encodeFunctionData(functionFragment: 'allPairs', values: [PromiseOrValue<BigNumberish>]): string;
  encodeFunctionData(functionFragment: 'allPairsLength', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createPair', values: [PromiseOrValue<string>, PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'feeInfo', values?: undefined): string;
  encodeFunctionData(functionFragment: 'feePercentOwner', values?: undefined): string;
  encodeFunctionData(functionFragment: 'feeTo', values?: undefined): string;
  encodeFunctionData(functionFragment: 'getPair', values: [PromiseOrValue<string>, PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
  encodeFunctionData(functionFragment: 'ownerFeeShare', values?: undefined): string;
  encodeFunctionData(functionFragment: 'referrersFeeShare', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'setFeePercentOwner', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'setFeeTo', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'setOwner', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'setOwnerFeeShare', values: [PromiseOrValue<BigNumberish>]): string;
  encodeFunctionData(
    functionFragment: 'setReferrerFeeShare',
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>],
  ): string;
  encodeFunctionData(functionFragment: 'setSetStableOwner', values: [PromiseOrValue<string>]): string;
  encodeFunctionData(functionFragment: 'setStableOwner', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'OWNER_FEE_SHARE_MAX', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'REFERER_FEE_SHARE_MAX', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'allPairs', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'allPairsLength', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createPair', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'feeInfo', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'feePercentOwner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'feeTo', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getPair', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'ownerFeeShare', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'referrersFeeShare', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setFeePercentOwner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setFeeTo', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setOwner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setOwnerFeeShare', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setReferrerFeeShare', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setSetStableOwner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setStableOwner', data: BytesLike): Result;

  events: {
    'FeePercentOwnershipTransferred(address,address)': EventFragment;
    'FeeToTransferred(address,address)': EventFragment;
    'OwnerFeeShareUpdated(uint256,uint256)': EventFragment;
    'OwnershipTransferred(address,address)': EventFragment;
    'PairCreated(address,address,address,uint256)': EventFragment;
    'ReferrerFeeShareUpdated(address,uint256,uint256)': EventFragment;
    'SetStableOwnershipTransferred(address,address)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'FeePercentOwnershipTransferred'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'FeeToTransferred'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OwnerFeeShareUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PairCreated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReferrerFeeShareUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'SetStableOwnershipTransferred'): EventFragment;
}

export interface FeePercentOwnershipTransferredEventObject {
  prevOwner: string;
  newOwner: string;
}
export type FeePercentOwnershipTransferredEvent = TypedEvent<
  [string, string],
  FeePercentOwnershipTransferredEventObject
>;

export type FeePercentOwnershipTransferredEventFilter = TypedEventFilter<FeePercentOwnershipTransferredEvent>;

export interface FeeToTransferredEventObject {
  prevFeeTo: string;
  newFeeTo: string;
}
export type FeeToTransferredEvent = TypedEvent<[string, string], FeeToTransferredEventObject>;

export type FeeToTransferredEventFilter = TypedEventFilter<FeeToTransferredEvent>;

export interface OwnerFeeShareUpdatedEventObject {
  prevOwnerFeeShare: BigNumber;
  ownerFeeShare: BigNumber;
}
export type OwnerFeeShareUpdatedEvent = TypedEvent<[BigNumber, BigNumber], OwnerFeeShareUpdatedEventObject>;

export type OwnerFeeShareUpdatedEventFilter = TypedEventFilter<OwnerFeeShareUpdatedEvent>;

export interface OwnershipTransferredEventObject {
  prevOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>;

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>;

export interface PairCreatedEventObject {
  token0: string;
  token1: string;
  pair: string;
  length: BigNumber;
}
export type PairCreatedEvent = TypedEvent<[string, string, string, BigNumber], PairCreatedEventObject>;

export type PairCreatedEventFilter = TypedEventFilter<PairCreatedEvent>;

export interface ReferrerFeeShareUpdatedEventObject {
  referrer: string;
  prevReferrerFeeShare: BigNumber;
  referrerFeeShare: BigNumber;
}
export type ReferrerFeeShareUpdatedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  ReferrerFeeShareUpdatedEventObject
>;

export type ReferrerFeeShareUpdatedEventFilter = TypedEventFilter<ReferrerFeeShareUpdatedEvent>;

export interface SetStableOwnershipTransferredEventObject {
  prevOwner: string;
  newOwner: string;
}
export type SetStableOwnershipTransferredEvent = TypedEvent<[string, string], SetStableOwnershipTransferredEventObject>;

export type SetStableOwnershipTransferredEventFilter = TypedEventFilter<SetStableOwnershipTransferredEvent>;

export interface CamelotFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CamelotFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    OWNER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<[BigNumber]>;

    REFERER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<[BigNumber]>;

    allPairs(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<[string]>;

    allPairsLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    createPair(
      tokenA: PromiseOrValue<string>,
      tokenB: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    feeInfo(overrides?: CallOverrides): Promise<[BigNumber, string] & { _ownerFeeShare: BigNumber; _feeTo: string }>;

    feePercentOwner(overrides?: CallOverrides): Promise<[string]>;

    feeTo(overrides?: CallOverrides): Promise<[string]>;

    getPair(arg0: PromiseOrValue<string>, arg1: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    ownerFeeShare(overrides?: CallOverrides): Promise<[BigNumber]>;

    referrersFeeShare(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[BigNumber]>;

    setFeePercentOwner(
      _feePercentOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    setFeeTo(
      _feeTo: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    setOwner(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    setOwnerFeeShare(
      newOwnerFeeShare: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    setReferrerFeeShare(
      referrer: PromiseOrValue<string>,
      referrerFeeShare: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    setSetStableOwner(
      _setStableOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    setStableOwner(overrides?: CallOverrides): Promise<[string]>;
  };

  OWNER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<BigNumber>;

  REFERER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<BigNumber>;

  allPairs(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<string>;

  allPairsLength(overrides?: CallOverrides): Promise<BigNumber>;

  createPair(
    tokenA: PromiseOrValue<string>,
    tokenB: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  feeInfo(overrides?: CallOverrides): Promise<[BigNumber, string] & { _ownerFeeShare: BigNumber; _feeTo: string }>;

  feePercentOwner(overrides?: CallOverrides): Promise<string>;

  feeTo(overrides?: CallOverrides): Promise<string>;

  getPair(arg0: PromiseOrValue<string>, arg1: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  ownerFeeShare(overrides?: CallOverrides): Promise<BigNumber>;

  referrersFeeShare(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

  setFeePercentOwner(
    _feePercentOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  setFeeTo(
    _feeTo: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  setOwner(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  setOwnerFeeShare(
    newOwnerFeeShare: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  setReferrerFeeShare(
    referrer: PromiseOrValue<string>,
    referrerFeeShare: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  setSetStableOwner(
    _setStableOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  setStableOwner(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    OWNER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<BigNumber>;

    REFERER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<BigNumber>;

    allPairs(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<string>;

    allPairsLength(overrides?: CallOverrides): Promise<BigNumber>;

    createPair(
      tokenA: PromiseOrValue<string>,
      tokenB: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<string>;

    feeInfo(overrides?: CallOverrides): Promise<[BigNumber, string] & { _ownerFeeShare: BigNumber; _feeTo: string }>;

    feePercentOwner(overrides?: CallOverrides): Promise<string>;

    feeTo(overrides?: CallOverrides): Promise<string>;

    getPair(arg0: PromiseOrValue<string>, arg1: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    ownerFeeShare(overrides?: CallOverrides): Promise<BigNumber>;

    referrersFeeShare(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    setFeePercentOwner(_feePercentOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;

    setFeeTo(_feeTo: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;

    setOwner(_owner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;

    setOwnerFeeShare(newOwnerFeeShare: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<void>;

    setReferrerFeeShare(
      referrer: PromiseOrValue<string>,
      referrerFeeShare: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<void>;

    setSetStableOwner(_setStableOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;

    setStableOwner(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    'FeePercentOwnershipTransferred(address,address)'(
      prevOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): FeePercentOwnershipTransferredEventFilter;
    FeePercentOwnershipTransferred(
      prevOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): FeePercentOwnershipTransferredEventFilter;

    'FeeToTransferred(address,address)'(
      prevFeeTo?: PromiseOrValue<string> | null,
      newFeeTo?: PromiseOrValue<string> | null,
    ): FeeToTransferredEventFilter;
    FeeToTransferred(
      prevFeeTo?: PromiseOrValue<string> | null,
      newFeeTo?: PromiseOrValue<string> | null,
    ): FeeToTransferredEventFilter;

    'OwnerFeeShareUpdated(uint256,uint256)'(
      prevOwnerFeeShare?: null,
      ownerFeeShare?: null,
    ): OwnerFeeShareUpdatedEventFilter;
    OwnerFeeShareUpdated(prevOwnerFeeShare?: null, ownerFeeShare?: null): OwnerFeeShareUpdatedEventFilter;

    'OwnershipTransferred(address,address)'(
      prevOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      prevOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): OwnershipTransferredEventFilter;

    'PairCreated(address,address,address,uint256)'(
      token0?: PromiseOrValue<string> | null,
      token1?: PromiseOrValue<string> | null,
      pair?: null,
      length?: null,
    ): PairCreatedEventFilter;
    PairCreated(
      token0?: PromiseOrValue<string> | null,
      token1?: PromiseOrValue<string> | null,
      pair?: null,
      length?: null,
    ): PairCreatedEventFilter;

    'ReferrerFeeShareUpdated(address,uint256,uint256)'(
      referrer?: null,
      prevReferrerFeeShare?: null,
      referrerFeeShare?: null,
    ): ReferrerFeeShareUpdatedEventFilter;
    ReferrerFeeShareUpdated(
      referrer?: null,
      prevReferrerFeeShare?: null,
      referrerFeeShare?: null,
    ): ReferrerFeeShareUpdatedEventFilter;

    'SetStableOwnershipTransferred(address,address)'(
      prevOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): SetStableOwnershipTransferredEventFilter;
    SetStableOwnershipTransferred(
      prevOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): SetStableOwnershipTransferredEventFilter;
  };

  estimateGas: {
    OWNER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<BigNumber>;

    REFERER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<BigNumber>;

    allPairs(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<BigNumber>;

    allPairsLength(overrides?: CallOverrides): Promise<BigNumber>;

    createPair(
      tokenA: PromiseOrValue<string>,
      tokenB: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    feeInfo(overrides?: CallOverrides): Promise<BigNumber>;

    feePercentOwner(overrides?: CallOverrides): Promise<BigNumber>;

    feeTo(overrides?: CallOverrides): Promise<BigNumber>;

    getPair(arg0: PromiseOrValue<string>, arg1: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    ownerFeeShare(overrides?: CallOverrides): Promise<BigNumber>;

    referrersFeeShare(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    setFeePercentOwner(
      _feePercentOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    setFeeTo(
      _feeTo: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    setOwner(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    setOwnerFeeShare(
      newOwnerFeeShare: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    setReferrerFeeShare(
      referrer: PromiseOrValue<string>,
      referrerFeeShare: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    setSetStableOwner(
      _setStableOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    setStableOwner(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    OWNER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    REFERER_FEE_SHARE_MAX(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    allPairs(arg0: PromiseOrValue<BigNumberish>, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    allPairsLength(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    createPair(
      tokenA: PromiseOrValue<string>,
      tokenB: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    feeInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    feePercentOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    feeTo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPair(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerFeeShare(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    referrersFeeShare(arg0: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setFeePercentOwner(
      _feePercentOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    setFeeTo(
      _feeTo: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    setOwner(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    setOwnerFeeShare(
      newOwnerFeeShare: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    setReferrerFeeShare(
      referrer: PromiseOrValue<string>,
      referrerFeeShare: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    setSetStableOwner(
      _setStableOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    setStableOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
