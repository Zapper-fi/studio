/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { AtlendisPositionManager, AtlendisPositionManagerInterface } from '../AtlendisPositionManager';

const _abi = [
  {
    inputs: [],
    name: 'POS_MGMT_ONLY_OWNER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'POS_NOT_ALLOWED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'POS_POOL_DEFAULTED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'POS_POSITION_DOES_NOT_EXIST',
    type: 'error',
  },
  {
    inputs: [],
    name: 'POS_POSITION_ONLY_IN_BONDS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'POS_TIMELOCK',
    type: 'error',
  },
  {
    inputs: [],
    name: 'POS_ZERO_ADDRESS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'POS_ZERO_AMOUNT',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'amount',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'rate',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'poolHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'bondsIssuanceIndex',
        type: 'uint128',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'positionDescriptor',
        type: 'address',
      },
    ],
    name: 'SetPositionDescriptor',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'amount',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'rate',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'poolHash',
        type: 'bytes32',
      },
    ],
    name: 'UpdateRate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'amount',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'remainingBonds',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'rate',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'poolHash',
        type: 'bytes32',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    name: '_positions',
    outputs: [
      {
        internalType: 'uint128',
        name: 'adjustedBalance',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'rate',
        type: 'uint128',
      },
      {
        internalType: 'bytes32',
        name: 'poolHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'underlyingToken',
        type: 'address',
      },
      {
        internalType: 'uint128',
        name: 'bondsIssuanceIndex',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'remainingBonds',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'bondsMaturity',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'creationTimestamp',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint128',
        name: 'amount',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'rate',
        type: 'uint128',
      },
      {
        internalType: 'bytes32',
        name: 'poolHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'underlyingToken',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
    ],
    name: 'getPositionRepartition',
    outputs: [
      {
        internalType: 'uint128',
        name: 'bondsQuantity',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'normalizedDepositedAmount',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'contract IBorrowerPools',
        name: '_pools',
        type: 'address',
      },
      {
        internalType: 'contract IPositionDescriptor',
        name: '_positionDescriptor',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pools',
    outputs: [
      {
        internalType: 'contract IBorrowerPools',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
    ],
    name: 'position',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'poolHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint128',
        name: 'adjustedBalance',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'rate',
        type: 'uint128',
      },
      {
        internalType: 'address',
        name: 'underlyingToken',
        type: 'address',
      },
      {
        internalType: 'uint128',
        name: 'remainingBonds',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'bondsMaturity',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'bondsIssuanceIndex',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'positionDescriptor',
    outputs: [
      {
        internalType: 'contract IPositionDescriptor',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_positionDescriptor',
        type: 'address',
      },
    ],
    name: 'setPositionDescriptor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'newRate',
        type: 'uint128',
      },
    ],
    name: 'updateRate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'tokenId',
        type: 'uint128',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class AtlendisPositionManager__factory {
  static readonly abi = _abi;
  static createInterface(): AtlendisPositionManagerInterface {
    return new utils.Interface(_abi) as AtlendisPositionManagerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AtlendisPositionManager {
    return new Contract(address, _abi, signerOrProvider) as AtlendisPositionManager;
  }
}
