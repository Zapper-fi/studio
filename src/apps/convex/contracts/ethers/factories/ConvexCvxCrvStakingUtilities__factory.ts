/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  ConvexCvxCrvStakingUtilities,
  ConvexCvxCrvStakingUtilitiesInterface,
} from '../ConvexCvxCrvStakingUtilities';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stkcvxcrv',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'accountExtraRewardRates',
    outputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'rates',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'groups',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'accountRewardRates',
    outputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'rates',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'groups',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_rate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_priceOfReward',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_priceOfDeposit',
        type: 'uint256',
      },
    ],
    name: 'apr',
    outputs: [
      {
        internalType: 'uint256',
        name: '_apr',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'convexProxy',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'crv',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cvx',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cvxCrvStaking',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cvxMining',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'externalRewardContracts',
    outputs: [
      {
        internalType: 'address[]',
        name: 'rewardContracts',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'extraRewardRates',
    outputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'rates',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'groups',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mainRewardRates',
    outputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'rates',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'groups',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rewardContract',
        type: 'address',
      },
    ],
    name: 'singleRewardRate',
    outputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'rate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stkcvxcrv',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class ConvexCvxCrvStakingUtilities__factory {
  static readonly abi = _abi;
  static createInterface(): ConvexCvxCrvStakingUtilitiesInterface {
    return new utils.Interface(_abi) as ConvexCvxCrvStakingUtilitiesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ConvexCvxCrvStakingUtilities {
    return new Contract(address, _abi, signerOrProvider) as ConvexCvxCrvStakingUtilities;
  }
}
