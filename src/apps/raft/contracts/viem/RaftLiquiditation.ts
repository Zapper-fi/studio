/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { getContract, GetContractReturnType, PublicClient } from 'viem';

export const raftLiquiditationAbi = [
  {
    inputs: [],
    name: 'LOW_TOTAL_DEBT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MCR',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'totalCollateral',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'totalDebt',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isRedistribution',
        type: 'bool',
      },
    ],
    name: 'split',
    outputs: [
      {
        internalType: 'uint256',
        name: 'collateralToSendToProtocol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'collateralToSentToLiquidator',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

export type RaftLiquiditation = typeof raftLiquiditationAbi;
export type RaftLiquiditationContract = GetContractReturnType<RaftLiquiditation, PublicClient>;

export class RaftLiquiditation__factory {
  static connect(address: string, client: PublicClient) {
    return getContract({ address, abi: raftLiquiditationAbi, publicClient: client });
  }
}
