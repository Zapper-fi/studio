/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { CurveGauge, CurveGaugeInterface } from '../CurveGauge';

const _abi = [
  {
    name: 'Deposit',
    inputs: [
      {
        type: 'address',
        name: 'provider',
        indexed: true,
      },
      {
        type: 'uint256',
        name: 'value',
        indexed: false,
      },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    name: 'Withdraw',
    inputs: [
      {
        type: 'address',
        name: 'provider',
        indexed: true,
      },
      {
        type: 'uint256',
        name: 'value',
        indexed: false,
      },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    name: 'UpdateLiquidityLimit',
    inputs: [
      {
        type: 'address',
        name: 'user',
        indexed: false,
      },
      {
        type: 'uint256',
        name: 'original_balance',
        indexed: false,
      },
      {
        type: 'uint256',
        name: 'original_supply',
        indexed: false,
      },
      {
        type: 'uint256',
        name: 'working_balance',
        indexed: false,
      },
      {
        type: 'uint256',
        name: 'working_supply',
        indexed: false,
      },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    outputs: [],
    inputs: [
      {
        type: 'address',
        name: 'lp_addr',
      },
      {
        type: 'address',
        name: '_minter',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    name: 'user_checkpoint',
    outputs: [
      {
        type: 'bool',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'addr',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    name: 'claimable_tokens',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'addr',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'kick',
    outputs: [],
    inputs: [
      {
        type: 'address',
        name: 'addr',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    name: 'set_approve_deposit',
    outputs: [],
    inputs: [
      {
        type: 'address',
        name: 'addr',
      },
      {
        type: 'bool',
        name: 'can_deposit',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    name: 'deposit',
    outputs: [],
    inputs: [
      {
        type: 'uint256',
        name: '_value',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    name: 'deposit',
    outputs: [],
    inputs: [
      {
        type: 'uint256',
        name: '_value',
      },
      {
        type: 'address',
        name: 'addr',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    name: 'withdraw',
    outputs: [],
    inputs: [
      {
        type: 'uint256',
        name: '_value',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    name: 'integrate_checkpoint',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'minter',
    outputs: [
      {
        type: 'address',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'crv_token',
    outputs: [
      {
        type: 'address',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'lp_token',
    outputs: [
      {
        type: 'address',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'controller',
    outputs: [
      {
        type: 'address',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'voting_escrow',
    outputs: [
      {
        type: 'address',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'balanceOf',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'arg0',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'totalSupply',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'future_epoch_time',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'approved_to_deposit',
    outputs: [
      {
        type: 'bool',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'arg0',
      },
      {
        type: 'address',
        name: 'arg1',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'working_balances',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'arg0',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'working_supply',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'period',
    outputs: [
      {
        type: 'int128',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'period_timestamp',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'uint256',
        name: 'arg0',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'integrate_inv_supply',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'uint256',
        name: 'arg0',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'integrate_inv_supply_of',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'arg0',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'integrate_checkpoint_of',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'arg0',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'integrate_fraction',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [
      {
        type: 'address',
        name: 'arg0',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    name: 'inflation_rate',
    outputs: [
      {
        type: 'uint256',
        name: '',
      },
    ],
    inputs: [],
    stateMutability: 'view',
    type: 'function',
  },
];

export class CurveGauge__factory {
  static readonly abi = _abi;
  static createInterface(): CurveGaugeInterface {
    return new utils.Interface(_abi) as CurveGaugeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CurveGauge {
    return new Contract(address, _abi, signerOrProvider) as CurveGauge;
  }
}
