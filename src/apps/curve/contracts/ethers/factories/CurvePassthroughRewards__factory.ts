/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { CurvePassthroughRewards, CurvePassthroughRewardsInterface } from '../CurvePassthroughRewards';

const _abi = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: '_owner',
        type: 'address',
      },
      {
        name: '_reward_receiver',
        type: 'address',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'get_reward',
    inputs: [],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'set_reward_data',
    inputs: [
      {
        name: '_idx',
        type: 'uint256',
      },
      {
        name: '_claim',
        type: 'address',
      },
      {
        name: '_reward',
        type: 'address',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'commit_transfer_ownership',
    inputs: [
      {
        name: '_owner',
        type: 'address',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'accept_transfer_ownership',
    inputs: [],
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'future_owner',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'reward_receiver',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'reward_data',
    inputs: [
      {
        name: 'arg0',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: 'claim',
        type: 'address',
      },
      {
        name: 'reward',
        type: 'address',
      },
    ],
  },
];

export class CurvePassthroughRewards__factory {
  static readonly abi = _abi;
  static createInterface(): CurvePassthroughRewardsInterface {
    return new utils.Interface(_abi) as CurvePassthroughRewardsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CurvePassthroughRewards {
    return new Contract(address, _abi, signerOrProvider) as CurvePassthroughRewards;
  }
}
