/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { Y2KFinanceRewardsFactory, Y2KFinanceRewardsFactoryInterface } from '../Y2KFinanceRewardsFactory';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_govToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_factory',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'EpochDoesNotExist',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'marketId',
        type: 'uint256',
      },
    ],
    name: 'MarketDoesNotExist',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'marketEpochId',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'mIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'hedgeFarm',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'riskFarm',
        type: 'address',
      },
    ],
    name: 'CreatedStakingReward',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_marketIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_epochEnd',
        type: 'uint256',
      },
    ],
    name: 'createStakingRewards',
    outputs: [
      {
        internalType: 'address',
        name: 'insr',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'risk',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'govToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class Y2KFinanceRewardsFactory__factory {
  static readonly abi = _abi;
  static createInterface(): Y2KFinanceRewardsFactoryInterface {
    return new utils.Interface(_abi) as Y2KFinanceRewardsFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Y2KFinanceRewardsFactory {
    return new Contract(address, _abi, signerOrProvider) as Y2KFinanceRewardsFactory;
  }
}
