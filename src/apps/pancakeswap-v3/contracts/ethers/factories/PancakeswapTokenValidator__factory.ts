/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { PancakeswapTokenValidator, PancakeswapTokenValidatorInterface } from '../PancakeswapTokenValidator';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_factoryV2',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_positionManager',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'address[]',
        name: 'baseTokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256',
        name: 'amountToBorrow',
        type: 'uint256',
      },
    ],
    name: 'batchValidate',
    outputs: [
      {
        internalType: 'enum ITokenValidator.Status[]',
        name: 'isFotResults',
        type: 'uint8[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factoryV2',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'positionManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount0',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'uniswapV2Call',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'baseTokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256',
        name: 'amountToBorrow',
        type: 'uint256',
      },
    ],
    name: 'validate',
    outputs: [
      {
        internalType: 'enum ITokenValidator.Status',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class PancakeswapTokenValidator__factory {
  static readonly abi = _abi;
  static createInterface(): PancakeswapTokenValidatorInterface {
    return new utils.Interface(_abi) as PancakeswapTokenValidatorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PancakeswapTokenValidator {
    return new Contract(address, _abi, signerOrProvider) as PancakeswapTokenValidator;
  }
}
