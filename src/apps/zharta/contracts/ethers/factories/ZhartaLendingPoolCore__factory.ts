/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { ZhartaLendingPoolCore, ZhartaLendingPoolCoreInterface } from '../ZhartaLendingPoolCore';

const _abi = [
  {
    name: 'OwnerProposed',
    inputs: [
      {
        name: 'ownerIndexed',
        type: 'address',
        indexed: true,
      },
      {
        name: 'proposedOwnerIndexed',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        type: 'address',
        indexed: false,
      },
      {
        name: 'proposedOwner',
        type: 'address',
        indexed: false,
      },
      {
        name: 'erc20TokenContract',
        type: 'address',
        indexed: false,
      },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'ownerIndexed',
        type: 'address',
        indexed: true,
      },
      {
        name: 'proposedOwnerIndexed',
        type: 'address',
        indexed: true,
      },
      {
        name: 'owner',
        type: 'address',
        indexed: false,
      },
      {
        name: 'proposedOwner',
        type: 'address',
        indexed: false,
      },
      {
        name: 'erc20TokenContract',
        type: 'address',
        indexed: false,
      },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    name: 'LendingPoolPeripheralAddressSet',
    inputs: [
      {
        name: 'erc20TokenContractIndexed',
        type: 'address',
        indexed: true,
      },
      {
        name: 'currentValue',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newValue',
        type: 'address',
        indexed: false,
      },
      {
        name: 'erc20TokenContract',
        type: 'address',
        indexed: false,
      },
    ],
    anonymous: false,
    type: 'event',
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'lendersArray',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address[]',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'computeWithdrawableAmount',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'fundsInPool',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'currentAmountDeposited',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'totalAmountDeposited',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'totalAmountWithdrawn',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'sharesBasisPoints',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'activeForRewards',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      {
        name: '_erc20TokenContract',
        type: 'address',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'migrateLender',
    inputs: [
      {
        name: '_wallet',
        type: 'address',
      },
      {
        name: '_currentAmountDeposited',
        type: 'uint256',
      },
      {
        name: '_totalAmountDeposited',
        type: 'uint256',
      },
      {
        name: '_totalAmountWithdrawn',
        type: 'uint256',
      },
      {
        name: '_sharesBasisPoints',
        type: 'uint256',
      },
      {
        name: '_activeForRewards',
        type: 'bool',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'migrate',
    inputs: [
      {
        name: '_from',
        type: 'address',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'proposeOwner',
    inputs: [
      {
        name: '_address',
        type: 'address',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'claimOwnership',
    inputs: [],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'setLendingPoolPeripheralAddress',
    inputs: [
      {
        name: '_address',
        type: 'address',
      },
    ],
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'deposit',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
      {
        name: '_payer',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'withdraw',
    inputs: [
      {
        name: '_lender',
        type: 'address',
      },
      {
        name: '_wallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'sendFunds',
    inputs: [
      {
        name: '_to',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'receiveFunds',
    inputs: [
      {
        name: '_borrower',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
      {
        name: '_rewardsAmount',
        type: 'uint256',
      },
      {
        name: '_investedAmount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    name: 'transferProtocolFees',
    inputs: [
      {
        name: '_borrower',
        type: 'address',
      },
      {
        name: '_protocolWallet',
        type: 'address',
      },
      {
        name: '_amount',
        type: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'proposedOwner',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'lendingPoolPeripheral',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'erc20TokenContract',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'funds',
    inputs: [
      {
        name: 'arg0',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        components: [
          {
            name: 'currentAmountDeposited',
            type: 'uint256',
          },
          {
            name: 'totalAmountDeposited',
            type: 'uint256',
          },
          {
            name: 'totalAmountWithdrawn',
            type: 'uint256',
          },
          {
            name: 'sharesBasisPoints',
            type: 'uint256',
          },
          {
            name: 'activeForRewards',
            type: 'bool',
          },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'knownLenders',
    inputs: [
      {
        name: 'arg0',
        type: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'activeLenders',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'fundsAvailable',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'fundsInvested',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'totalFundsInvested',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'totalRewards',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'totalSharesBasisPoints',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    name: 'migrationDone',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bool',
      },
    ],
  },
];

export class ZhartaLendingPoolCore__factory {
  static readonly abi = _abi;
  static createInterface(): ZhartaLendingPoolCoreInterface {
    return new utils.Interface(_abi) as ZhartaLendingPoolCoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZhartaLendingPoolCore {
    return new Contract(address, _abi, signerOrProvider) as ZhartaLendingPoolCore;
  }
}
