/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { IStakingV2, IStakingV2Interface } from '../IStakingV2';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'sig',
        type: 'bytes4',
      },
    ],
    name: '_isPaused',
    outputs: [
      {
        internalType: 'bool',
        name: 'isPaused',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: '_setProposalVals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_totalSupplyPerToken',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addAltRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newOOKI',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'newStableCoin',
        type: 'uint256',
      },
    ],
    name: 'addRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOfByAsset',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOfByAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: 'bzrxBalance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'iOOKIBalance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vBZRXBalance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'LPTokenBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOfStored',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vestedBalance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vestingBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGuardian',
        type: 'address',
      },
    ],
    name: 'changeGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'restake',
        type: 'bool',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimAltRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimSushi',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sushiRewardsEarned',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'earned',
    outputs: [
      {
        internalType: 'uint256',
        name: 'bzrxRewardsEarned',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stableCoinRewardsEarned',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'bzrxRewardsVesting',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stableCoinRewardsVesting',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'sushiRewardsEarned',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'exit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'exitSushi',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getGuardian',
    outputs: [
      {
        internalType: 'address',
        name: 'guardian',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVariableWeights',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vBZRXWeight',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'iOOKIWeight',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'LPTokenWeight',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'pendingCrvRewards',
    outputs: [
      {
        internalType: 'uint256',
        name: 'bzrxRewardsEarned',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stableCoinRewardsEarned',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'bzrxRewardsVesting',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stableCoinRewardsVesting',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'sushiRewardsEarned',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'setApprovals',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
    ],
    name: 'setGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakingGovernance',
        type: 'address',
      },
    ],
    name: 'setVoteDelegator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'stake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'sig',
        type: 'bytes4',
      },
    ],
    name: 'toggleFunctionPause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'sig',
        type: 'bytes4',
      },
    ],
    name: 'toggleFunctionUnPause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'totalSupplyByAsset',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupplyStored',
    outputs: [
      {
        internalType: 'uint256',
        name: 'supply',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'unstake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'settingsTarget',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'callData',
        type: 'bytes',
      },
    ],
    name: 'updateSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenBalance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'lastUpdate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vestingEndTime',
        type: 'uint256',
      },
    ],
    name: 'vestedBalanceForAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vested',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'vestingLastSync',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'proposalId',
        type: 'uint256',
      },
    ],
    name: 'votingBalanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: 'totalVotes',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'votingBalanceOfNow',
    outputs: [
      {
        internalType: 'uint256',
        name: 'totalVotes',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'votingFromStakedBalanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: 'totalVotes',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class IStakingV2__factory {
  static readonly abi = _abi;
  static createInterface(): IStakingV2Interface {
    return new utils.Interface(_abi) as IStakingV2Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IStakingV2 {
    return new Contract(address, _abi, signerOrProvider) as IStakingV2;
  }
}
