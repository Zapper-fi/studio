{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "bZxContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "getTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "internalType": "struct TokenRegistry.TokenMetadata[]",
          "name": "metadata",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "161": "interfaces/IBZx.sol",
    "7": "contracts/adapters/TokenRegistry.sol"
  },
  "ast": {
    "absolutePath": "contracts/adapters/TokenRegistry.sol",
    "exportedSymbols": {
      "TokenRegistry": [85]
    },
    "id": 86,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "0.5", ".17"],
        "nodeType": "PragmaDirective",
        "src": "114:23:7"
      },
      {
        "id": 2,
        "literals": ["experimental", "ABIEncoderV2"],
        "nodeType": "PragmaDirective",
        "src": "138:33:7"
      },
      {
        "absolutePath": "interfaces/IBZx.sol",
        "file": "../../interfaces/IBZx.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 46620,
        "src": "173:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 85,
        "linearizedBaseContracts": [85],
        "name": "TokenRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 6,
            "name": "bZxContract",
            "nodeType": "VariableDeclaration",
            "scope": 85,
            "src": "240:80:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307844384565363936353245346534383338663235333137333261343664316637463538344630623766",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "278:42:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xD8Ee69652E4e4838f2531732a46d1f7F584F0b7f"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TokenRegistry.TokenMetadata",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 8,
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "957:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "957:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "asset",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "990:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "990:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TokenMetadata",
            "nodeType": "StructDefinition",
            "scope": 85,
            "src": "926:104:7",
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "1171:401:7",
              "statements": [
                {
                  "assignments": [24],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24,
                      "name": "loanPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1181:25:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 22,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1181:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1181:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 25,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1181:25:7"
                },
                {
                  "assignments": [27],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27,
                      "name": "theProtocol",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1216:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBZx_$46619",
                        "typeString": "contract IBZx"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 26,
                        "name": "IBZx",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46619,
                        "src": "1216:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBZx_$46619",
                          "typeString": "contract IBZx"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 31,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "bZxContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1240:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28,
                      "name": "IBZx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46619,
                      "src": "1235:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IBZx_$46619_$",
                        "typeString": "type(contract IBZx)"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBZx_$46619",
                      "typeString": "contract IBZx"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1216:36:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "loanPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1262:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 35,
                          "name": "_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1302:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "_count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1310:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "theProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1273:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBZx_$46619",
                            "typeString": "contract IBZx"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getLoanPoolsList",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45943,
                        "src": "1273:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,uint256) view external returns (address[] memory)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1273:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1262:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:55:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1328:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_memory_$dyn_memory_ptr",
                        "typeString": "struct TokenRegistry.TokenMetadata memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 44,
                            "name": "loanPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1359:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1359:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1339:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenMetadata_$11_memory_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (struct TokenRegistry.TokenMetadata memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 41,
                            "name": "TokenMetadata",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 11,
                            "src": "1343:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenMetadata_$11_storage_ptr",
                              "typeString": "struct TokenRegistry.TokenMetadata"
                            }
                          },
                          "id": 42,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1343:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_storage_$dyn_storage_ptr",
                            "typeString": "struct TokenRegistry.TokenMetadata[]"
                          }
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1339:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_memory_$dyn_memory",
                        "typeString": "struct TokenRegistry.TokenMetadata memory[] memory"
                      }
                    },
                    "src": "1328:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_memory_$dyn_memory_ptr",
                      "typeString": "struct TokenRegistry.TokenMetadata memory[] memory"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:47:7"
                },
                {
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "1431:135:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 60,
                                "name": "metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "1445:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_memory_$dyn_memory_ptr",
                                  "typeString": "struct TokenRegistry.TokenMetadata memory[] memory"
                                }
                              },
                              "id": 62,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 61,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "1454:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1445:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenMetadata_$11_memory",
                                "typeString": "struct TokenRegistry.TokenMetadata memory"
                              }
                            },
                            "id": 63,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "1445:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 64,
                              "name": "loanPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1465:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 66,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 65,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1474:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1465:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1445:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "1445:31:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 69,
                                "name": "metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "1490:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_memory_$dyn_memory_ptr",
                                  "typeString": "struct TokenRegistry.TokenMetadata memory[] memory"
                                }
                              },
                              "id": 71,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 70,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "1499:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1490:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenMetadata_$11_memory",
                                "typeString": "struct TokenRegistry.TokenMetadata memory"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "asset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "1490:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 75,
                                  "name": "loanPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "1543:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 77,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 76,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50,
                                  "src": "1552:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1543:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 73,
                                "name": "theProtocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "1510:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBZx_$46619",
                                  "typeString": "contract IBZx"
                                }
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "loanPoolToUnderlying",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45904,
                              "src": "1510:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1510:45:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1490:65:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1490:65:7"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 53,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1405:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "loanPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1409:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1409:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1405:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82,
                  "initializationExpression": {
                    "assignments": [50],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 50,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "1390:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1390:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 52,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1402:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1390:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1426:3:7",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1426:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59,
                    "nodeType": "ExpressionStatement",
                    "src": "1426:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "1385:181:7"
                }
              ]
            },
            "documentation": null,
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "name": "_start",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1055:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "_count",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1071:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1054:32:7"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1134:31:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_memory_$dyn_memory_ptr",
                    "typeString": "struct TokenRegistry.TokenMetadata[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 17,
                      "name": "TokenMetadata",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 11,
                      "src": "1134:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMetadata_$11_storage_ptr",
                        "typeString": "struct TokenRegistry.TokenMetadata"
                      }
                    },
                    "id": 18,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1134:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenMetadata_$11_storage_$dyn_storage_ptr",
                      "typeString": "struct TokenRegistry.TokenMetadata[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1133:33:7"
            },
            "scope": 85,
            "src": "1036:536:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 86,
        "src": "210:1364:7"
      }
    ],
    "src": "114:1461:7"
  },
  "bytecode": "608060405234801561001057600080fd5b50610584806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063494cfc6c1461003b578063995363d314610064575b600080fd5b61004e610049366004610388565b610079565b60405161005b919061047f565b60405180910390f35b61006c610263565b60405161005b9190610471565b60405163402946b960e01b8152606090819073d8ee69652e4e4838f2531732a46d1f7f584f0b7f90819063402946b9906100b99088908890600401610497565b60006040518083038186803b1580156100d157600080fd5b505afa1580156100e5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261010d9190810190610353565b9150815160405190808252806020026020018201604052801561014a57816020015b61013761027b565b81526020019060019003908161012f5790505b50925060005b825181101561025a5782818151811061016557fe5b602002602001015184828151811061017957fe5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050816001600160a01b0316638dc48ba58483815181106101b857fe5b60200260200101516040518263ffffffff1660e01b81526004016101dc9190610471565b60206040518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061022c919081019061032d565b84828151811061023857fe5b6020908102919091018101516001600160a01b03909216910152600101610150565b50505092915050565b73d8ee69652e4e4838f2531732a46d1f7f584f0b7f81565b604080518082019091526000808252602082015290565b805161029d81610521565b92915050565b600082601f8301126102b457600080fd5b81516102c76102c2826104d9565b6104b2565b915081818352602084019350602081019050838560208402820111156102ec57600080fd5b60005b8381101561031857816103028882610292565b84525060209283019291909101906001016102ef565b5050505092915050565b803561029d81610538565b60006020828403121561033f57600080fd5b600061034b8484610292565b949350505050565b60006020828403121561036557600080fd5b815167ffffffffffffffff81111561037c57600080fd5b61034b848285016102a3565b6000806040838503121561039b57600080fd5b60006103a78585610322565b92505060206103b885828601610322565b9150509250929050565b60006103ce838361043e565b505060400190565b6103df8161050d565b82525050565b60006103f082610500565b6103fa8185610504565b9350610405836104fa565b8060005b8381101561043357815161041d88826103c2565b9750610428836104fa565b925050600101610409565b509495945050505050565b8051604083019061044f84826103d6565b50602082015161046260208501826103d6565b50505050565b6103df8161051e565b6020810161029d82846103d6565b6020808252810161049081846103e5565b9392505050565b604081016104a58285610468565b6104906020830184610468565b60405181810167ffffffffffffffff811182821017156104d157600080fd5b604052919050565b600067ffffffffffffffff8211156104f057600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b60006001600160a01b03821661029d565b90565b61052a8161050d565b811461053557600080fd5b50565b61052a8161051e56fea365627a7a723158203260bcfc77e5180e08a775831e585a36b277ffe8841390ee264eb73756e59bfb6c6578706572696d656e74616cf564736f6c63430005110040",
  "bytecodeSha1": "76cd50f5c66e2308357d0f4167f98b6c8a53e4dc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "TokenRegistry",
  "coverageMap": {
    "branches": {
      "161": {},
      "7": {}
    },
    "statements": {
      "161": {},
      "7": {
        "TokenRegistry.getTokens": {
          "0": [1262, 1317],
          "1": [1328, 1375],
          "2": [1445, 1476],
          "3": [1490, 1555],
          "4": [1426, 1429]
        }
      }
    }
  },
  "dependencies": ["IBZx"],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063494cfc6c1461003b578063995363d314610064575b600080fd5b61004e610049366004610388565b610079565b60405161005b919061047f565b60405180910390f35b61006c610263565b60405161005b9190610471565b60405163402946b960e01b8152606090819073d8ee69652e4e4838f2531732a46d1f7f584f0b7f90819063402946b9906100b99088908890600401610497565b60006040518083038186803b1580156100d157600080fd5b505afa1580156100e5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261010d9190810190610353565b9150815160405190808252806020026020018201604052801561014a57816020015b61013761027b565b81526020019060019003908161012f5790505b50925060005b825181101561025a5782818151811061016557fe5b602002602001015184828151811061017957fe5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050816001600160a01b0316638dc48ba58483815181106101b857fe5b60200260200101516040518263ffffffff1660e01b81526004016101dc9190610471565b60206040518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061022c919081019061032d565b84828151811061023857fe5b6020908102919091018101516001600160a01b03909216910152600101610150565b50505092915050565b73d8ee69652e4e4838f2531732a46d1f7f584f0b7f81565b604080518082019091526000808252602082015290565b805161029d81610521565b92915050565b600082601f8301126102b457600080fd5b81516102c76102c2826104d9565b6104b2565b915081818352602084019350602081019050838560208402820111156102ec57600080fd5b60005b8381101561031857816103028882610292565b84525060209283019291909101906001016102ef565b5050505092915050565b803561029d81610538565b60006020828403121561033f57600080fd5b600061034b8484610292565b949350505050565b60006020828403121561036557600080fd5b815167ffffffffffffffff81111561037c57600080fd5b61034b848285016102a3565b6000806040838503121561039b57600080fd5b60006103a78585610322565b92505060206103b885828601610322565b9150509250929050565b60006103ce838361043e565b505060400190565b6103df8161050d565b82525050565b60006103f082610500565b6103fa8185610504565b9350610405836104fa565b8060005b8381101561043357815161041d88826103c2565b9750610428836104fa565b925050600101610409565b509495945050505050565b8051604083019061044f84826103d6565b50602082015161046260208501826103d6565b50505050565b6103df8161051e565b6020810161029d82846103d6565b6020808252810161049081846103e5565b9392505050565b604081016104a58285610468565b6104906020830184610468565b60405181810167ffffffffffffffff811182821017156104d157600080fd5b604052919050565b600067ffffffffffffffff8211156104f057600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b60006001600160a01b03821661029d565b90565b61052a8161050d565b811461053557600080fd5b50565b61052a8161051e56fea365627a7a723158203260bcfc77e5180e08a775831e585a36b277ffe8841390ee264eb73756e59bfb6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedSourceMap": "210:1364:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;210:1364:7;;;;;;;;;;;;;;;;;;;;;;;;1036:536;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;240:80;;;:::i;:::-;;;;;;;;1036:536;1273:44;;-1:-1:-1;;;1273:44:7;;1134:31;;;;278:42;;;;1273:28;;:44;;1302:6;;1310;;1273:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:44:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1273:44:7;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1273:44:7;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;1273:44:7;;;;;;;;;1262:55;;1359:8;:15;1339:36;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1328:47:7;-1:-1:-1;1390:9:7;1385:181;1409:8;:15;1405:1;:19;1385:181;;;1465:8;1474:1;1465:11;;;;;;;;;;;;;;1445:8;1454:1;1445:11;;;;;;;;;;;;;;:17;;:31;-1:-1:-1;;;;;1445:31:7;;;-1:-1:-1;;;;;1445:31:7;;;;;1510:11;-1:-1:-1;;;;;1510:32:7;;1543:8;1552:1;1543:11;;;;;;;;;;;;;;1510:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1510:45:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1510:45:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1510:45:7;;;;;;;;;1490:8;1499:1;1490:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1490:65:7;;;:17;;:65;1426:3;;1385:181;;;;1036:536;;;;;;:::o;240:80::-;278:42;240:80;:::o;210:1364::-;;;;;;;;;;-1:-1:-1;210:1364:7;;;;;;;;:::o;5:134:-1:-;83:13;;101:33;83:13;101:33;;;68:71;;;;;164:722;;292:3;285:4;277:6;273:17;269:27;259:2;;310:1;307;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;;;362:80;;;353:89;;459:5;484:6;477:5;470:21;514:4;506:6;502:17;492:27;;536:4;531:3;527:14;520:21;;589:6;636:3;628:4;620:6;616:17;611:3;607:27;604:36;601:2;;;653:1;650;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;746:3;768:48;812:3;800:10;768:48;;;756:61;;-1:-1;840:4;831:14;;;;859;;;;;710:1;703:9;663:217;;;667:14;252:634;;;;;;;;894:130;961:20;;986:33;961:20;986:33;;1031:263;;1146:2;1134:9;1125:7;1121:23;1117:32;1114:2;;;1162:1;1159;1152:12;1114:2;1197:1;1214:64;1270:7;1250:9;1214:64;;;1204:74;1108:186;-1:-1;;;;1108:186;1301:392;;1441:2;1429:9;1420:7;1416:23;1412:32;1409:2;;;1457:1;1454;1447:12;1409:2;1492:24;;1536:18;1525:30;;1522:2;;;1568:1;1565;1558:12;1522:2;1588:89;1669:7;1660:6;1649:9;1645:22;1588:89;;1700:366;;;1821:2;1809:9;1800:7;1796:23;1792:32;1789:2;;;1837:1;1834;1827:12;1789:2;1872:1;1889:53;1934:7;1914:9;1889:53;;;1879:63;;1851:97;1979:2;1997:53;2042:7;2033:6;2022:9;2018:22;1997:53;;;1987:63;;1958:98;1783:283;;;;;;2074:277;;2211:100;2307:3;2299:6;2211:100;;;-1:-1;;2340:4;2331:14;;2204:147;2359:103;2432:24;2450:5;2432:24;;;2427:3;2420:37;2414:48;;;2674:890;;2869:79;2942:5;2869:79;;;2961:111;3065:6;3060:3;2961:111;;;2954:118;;3093:81;3168:5;3093:81;;;3194:7;3222:1;3207:335;3232:6;3229:1;3226:13;3207:335;;;3299:6;3293:13;3320:113;3429:3;3414:13;3320:113;;;3313:120;;3450:85;3528:6;3450:85;;;3440:95;-1:-1;;3254:1;3247:9;3207:335;;;-1:-1;3555:3;;2848:716;-1:-1;;;;;2848:716;3651:472;3855:23;;3788:4;3779:14;;;3884:63;3783:3;3855:23;3884:63;;;3808:145;4027:4;4020:5;4016:16;4010:23;4039:63;4096:4;4091:3;4087:14;4073:12;4039:63;;;3963:145;3761:362;;;;4130:113;4213:24;4231:5;4213:24;;4250:213;4368:2;4353:18;;4382:71;4357:9;4426:6;4382:71;;4470:461;4688:2;4702:47;;;4673:18;;4763:158;4673:18;4907:6;4763:158;;;4755:166;4659:272;-1:-1;;;4659:272;4938:324;5084:2;5069:18;;5098:71;5073:9;5142:6;5098:71;;;5180:72;5248:2;5237:9;5233:18;5224:6;5180:72;;5269:256;5331:2;5325:9;5357:17;;;5432:18;5417:34;;5453:22;;;5414:62;5411:2;;;5489:1;5486;5479:12;5411:2;5505;5498:22;5309:216;;-1:-1;5309:216;5532:304;;5691:18;5683:6;5680:30;5677:2;;;5723:1;5720;5713:12;5677:2;-1:-1;5758:4;5746:17;;;5811:15;;5614:222;5843:176;5992:4;5983:14;;5940:79;6026:162;6154:12;;6125:63;6336:203;6479:19;;;6528:4;6519:14;;6472:67;6547:91;;-1:-1;;;;;6707:54;;6609:24;6690:76;6773:72;6835:5;6818:27;6852:117;6921:24;6939:5;6921:24;;;6914:5;6911:35;6901:2;;6960:1;6957;6950:12;6901:2;6895:74;;6976:117;7045:24;7063:5;7045:24;",
  "language": "Solidity",
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"bZxContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"getTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct TokenRegistry.TokenMetadata[]\",\"name\":\"metadata\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/TokenRegistry.sol\":\"TokenRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@celer=./node_modules/celer\",\":@openzeppelin-2.5.0=./node_modules/openzeppelin-2.5.0\",\":@openzeppelin-3.4.0=./node_modules/openzeppelin-3.4.0\",\":@openzeppelin-4.3.2=./node_modules/openzeppelin-4.3.2\",\":@uniswap=./node_modules/@uniswap\",\":OpenZeppelin=/home/eujik/.brownie/packages/OpenZeppelin\",\":paulrberg=/home/eujik/.brownie/packages/paulrberg\",\":prb-math=./node_modules/prb-math\",\":smartcontractkit=/home/eujik/.brownie/packages/smartcontractkit\"]},\"sources\":{\"contracts/adapters/TokenRegistry.sol\":{\"keccak256\":\"0x52815fb0dc07aef72e6fd98a24a0edbcb783f5b29376ae52f2784acf32ca066c\",\"urls\":[\"bzz-raw://850ee85d65e535033c7676a873de5f1e6cf74fc39b582d940d2c026495ddd250\",\"dweb:/ipfs/QmQUdQd28tSwc1qg2K6bGpv2UVrb8pbyoxxr415oCw8YZU\"]},\"interfaces/IBZx.sol\":{\"keccak256\":\"0x8ca2a3144e0497eff230dcea4d97979baf6d61a8a326c82cc87527990264181a\",\"urls\":[\"bzz-raw://a81f472bf13e8329cc3694c3b31aaec19c72adf5a6572c2ee89421cad7517e7d\",\"dweb:/ipfs/QmTQoZ7a813hWyFoJiWiEfBvfbomn8yHwQjwGS4z7mc3CP\"]}},\"version\":1}",
  "natspec": {
    "methods": {}
  },
  "offset": [210, 1574],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x494CFC6C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x995363D3 EQ PUSH2 0x64 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x402946B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH20 0xD8EE69652E4E4838F2531732A46D1F7F584F0B7F SWAP1 DUP2 SWAP1 PUSH4 0x402946B9 SWAP1 PUSH2 0xB9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x497 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x353 JUMP JUMPDEST SWAP2 POP DUP2 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x137 PUSH2 0x27B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12F JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x25A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x165 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x179 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DC48BA5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x22C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x32D JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x238 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xD8EE69652E4E4838F2531732A46D1F7F584F0B7F DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x29D DUP2 PUSH2 0x521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C7 PUSH2 0x2C2 DUP3 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x318 JUMPI DUP2 PUSH2 0x302 DUP9 DUP3 PUSH2 0x292 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2EF JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x29D DUP2 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP5 DUP5 PUSH2 0x292 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP5 DUP3 DUP6 ADD PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A7 DUP6 DUP6 PUSH2 0x322 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B8 DUP6 DUP3 DUP7 ADD PUSH2 0x322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP4 DUP4 PUSH2 0x43E JUMP JUMPDEST POP POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3DF DUP2 PUSH2 0x50D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F0 DUP3 PUSH2 0x500 JUMP JUMPDEST PUSH2 0x3FA DUP2 DUP6 PUSH2 0x504 JUMP JUMPDEST SWAP4 POP PUSH2 0x405 DUP4 PUSH2 0x4FA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x433 JUMPI DUP2 MLOAD PUSH2 0x41D DUP9 DUP3 PUSH2 0x3C2 JUMP JUMPDEST SWAP8 POP PUSH2 0x428 DUP4 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x409 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x44F DUP5 DUP3 PUSH2 0x3D6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x462 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3D6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3DF DUP2 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x29D DUP3 DUP5 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x490 DUP2 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x4A5 DUP3 DUP6 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x490 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52A DUP2 PUSH2 0x50D JUMP JUMPDEST DUP2 EQ PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x52A DUP2 PUSH2 0x51E JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 ORIGIN PUSH1 0xBC 0xFC PUSH24 0xE5180E08A775831E585A36B277FFE8841390EE264EB73756 0xE5 SWAP12 0xFB PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
  "pcMap": {
    "0": {
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [210, 1574],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [210, 1574],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [210, 1574],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [210, 1574],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [210, 1574],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [210, 1574],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [210, 1574],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [210, 1574],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [210, 1574],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [210, 1574],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH4",
      "path": "7",
      "value": "0x494CFC6C"
    },
    "38": {
      "fn": null,
      "offset": [210, 1574],
      "op": "EQ",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [210, 1574],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [210, 1574],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH4",
      "path": "7",
      "value": "0x995363D3"
    },
    "49": {
      "fn": null,
      "offset": [210, 1574],
      "op": "EQ",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH2",
      "path": "7",
      "value": "0x64"
    },
    "53": {
      "fn": null,
      "offset": [210, 1574],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [210, 1574],
      "op": "JUMPDEST",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [210, 1574],
      "op": "DUP1",
      "path": "7"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [210, 1574],
      "op": "REVERT",
      "path": "7"
    },
    "59": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "JUMPDEST",
      "path": "7"
    },
    "60": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4E"
    },
    "63": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49"
    },
    "66": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "67": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "69": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH2",
      "path": "7",
      "value": "0x388"
    },
    "72": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "JUMP",
      "path": "7"
    },
    "73": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "JUMPDEST",
      "path": "7"
    },
    "74": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79"
    },
    "77": {
      "fn": "TokenRegistry.getTokens",
      "jump": "i",
      "offset": [1036, 1572],
      "op": "JUMP",
      "path": "7"
    },
    "78": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "JUMPDEST",
      "path": "7"
    },
    "79": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "81": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "MLOAD",
      "path": "7"
    },
    "82": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B"
    },
    "85": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "SWAP2",
      "path": "7"
    },
    "86": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "SWAP1",
      "path": "7"
    },
    "87": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH2",
      "path": "7",
      "value": "0x47F"
    },
    "90": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "JUMP",
      "path": "7"
    },
    "91": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "JUMPDEST",
      "path": "7"
    },
    "92": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "94": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "MLOAD",
      "path": "7"
    },
    "95": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "DUP1",
      "path": "7"
    },
    "96": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "SWAP2",
      "path": "7"
    },
    "97": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "SUB",
      "path": "7"
    },
    "98": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "SWAP1",
      "path": "7"
    },
    "99": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "RETURN",
      "path": "7"
    },
    "100": {
      "offset": [240, 320],
      "op": "JUMPDEST",
      "path": "7"
    },
    "101": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6C"
    },
    "104": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "PUSH2",
      "path": "7",
      "value": "0x263"
    },
    "107": {
      "fn": "TokenRegistry.getTokens",
      "jump": "i",
      "offset": [240, 320],
      "op": "JUMP",
      "path": "7"
    },
    "108": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "JUMPDEST",
      "path": "7"
    },
    "109": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "111": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "MLOAD",
      "path": "7"
    },
    "112": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B"
    },
    "115": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "SWAP2",
      "path": "7"
    },
    "116": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "SWAP1",
      "path": "7"
    },
    "117": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "PUSH2",
      "path": "7",
      "value": "0x471"
    },
    "120": {
      "fn": "TokenRegistry.getTokens",
      "offset": [240, 320],
      "op": "JUMP",
      "path": "7"
    },
    "121": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "JUMPDEST",
      "path": "7"
    },
    "122": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x40"
    },
    "124": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "MLOAD",
      "path": "7"
    },
    "125": {
      "op": "PUSH4",
      "value": "0x402946B9"
    },
    "130": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "132": {
      "op": "SHL"
    },
    "133": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "DUP2",
      "path": "7"
    },
    "134": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "MSTORE",
      "path": "7"
    },
    "135": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1134, 1165],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "137": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1134, 1165],
      "op": "SWAP1",
      "path": "7"
    },
    "138": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1134, 1165],
      "op": "DUP2",
      "path": "7"
    },
    "139": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1134, 1165],
      "op": "SWAP1",
      "path": "7"
    },
    "140": {
      "offset": [278, 320],
      "op": "PUSH20",
      "path": "7",
      "value": "0xD8EE69652E4E4838F2531732A46D1F7F584F0B7F"
    },
    "161": {
      "fn": "TokenRegistry.getTokens",
      "offset": [278, 320],
      "op": "SWAP1",
      "path": "7"
    },
    "162": {
      "fn": "TokenRegistry.getTokens",
      "offset": [278, 320],
      "op": "DUP2",
      "path": "7"
    },
    "163": {
      "fn": "TokenRegistry.getTokens",
      "offset": [278, 320],
      "op": "SWAP1",
      "path": "7"
    },
    "164": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1301],
      "op": "PUSH4",
      "path": "7",
      "value": "0x402946B9"
    },
    "169": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1301],
      "op": "SWAP1",
      "path": "7"
    },
    "170": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB9"
    },
    "173": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "SWAP1",
      "path": "7"
    },
    "174": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1302, 1308],
      "op": "DUP9",
      "path": "7"
    },
    "175": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1302, 1308],
      "op": "SWAP1",
      "path": "7"
    },
    "176": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1310, 1316],
      "op": "DUP9",
      "path": "7"
    },
    "177": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1310, 1316],
      "op": "SWAP1",
      "path": "7"
    },
    "178": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "180": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "ADD",
      "path": "7"
    },
    "181": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH2",
      "path": "7",
      "value": "0x497"
    },
    "184": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "JUMP",
      "path": "7"
    },
    "185": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "JUMPDEST",
      "path": "7"
    },
    "186": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "188": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "190": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "MLOAD",
      "path": "7"
    },
    "191": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "DUP1",
      "path": "7"
    },
    "192": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "DUP4",
      "path": "7"
    },
    "193": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "SUB",
      "path": "7"
    },
    "194": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "DUP2",
      "path": "7"
    },
    "195": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "DUP7",
      "path": "7"
    },
    "196": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "198": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "ISZERO",
      "path": "7"
    },
    "199": {
      "op": "DUP1"
    },
    "200": {
      "op": "ISZERO"
    },
    "201": {
      "op": "PUSH2",
      "value": "0xD1"
    },
    "204": {
      "op": "JUMPI"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "207": {
      "op": "DUP1"
    },
    "208": {
      "op": "REVERT"
    },
    "209": {
      "op": "JUMPDEST"
    },
    "210": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "POP",
      "path": "7"
    },
    "211": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "GAS",
      "path": "7"
    },
    "212": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "STATICCALL",
      "path": "7"
    },
    "213": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "ISZERO",
      "path": "7"
    },
    "214": {
      "op": "DUP1"
    },
    "215": {
      "op": "ISZERO"
    },
    "216": {
      "op": "PUSH2",
      "value": "0xE5"
    },
    "219": {
      "op": "JUMPI"
    },
    "220": {
      "op": "RETURNDATASIZE"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "223": {
      "op": "DUP1"
    },
    "224": {
      "op": "RETURNDATACOPY"
    },
    "225": {
      "op": "RETURNDATASIZE"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "228": {
      "op": "REVERT"
    },
    "229": {
      "op": "JUMPDEST"
    },
    "230": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "POP",
      "path": "7"
    },
    "231": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "POP",
      "path": "7"
    },
    "232": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "POP",
      "path": "7"
    },
    "233": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "POP",
      "path": "7"
    },
    "234": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "236": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "MLOAD",
      "path": "7"
    },
    "237": {
      "op": "RETURNDATASIZE"
    },
    "238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "240": {
      "op": "DUP3"
    },
    "241": {
      "op": "RETURNDATACOPY"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "244": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "245": {
      "op": "SWAP1"
    },
    "246": {
      "op": "DUP2"
    },
    "247": {
      "op": "ADD"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "250": {
      "op": "NOT"
    },
    "251": {
      "op": "AND"
    },
    "252": {
      "op": "DUP3"
    },
    "253": {
      "op": "ADD"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D"
    },
    "260": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "SWAP2",
      "path": "7"
    },
    "261": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "SWAP1",
      "path": "7"
    },
    "262": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "DUP2",
      "path": "7"
    },
    "263": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "ADD",
      "path": "7"
    },
    "264": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "SWAP1",
      "path": "7"
    },
    "265": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "PUSH2",
      "path": "7",
      "value": "0x353"
    },
    "268": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "JUMP",
      "path": "7"
    },
    "269": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1273, 1317],
      "op": "JUMPDEST",
      "path": "7"
    },
    "270": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1262, 1317],
      "op": "SWAP2",
      "path": "7"
    },
    "271": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1262, 1317],
      "op": "POP",
      "path": "7"
    },
    "272": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1359, 1367],
      "op": "DUP2",
      "path": "7",
      "statement": 1
    },
    "273": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1359, 1374],
      "op": "MLOAD",
      "path": "7"
    },
    "274": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "276": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "MLOAD",
      "path": "7"
    },
    "277": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "SWAP1",
      "path": "7"
    },
    "278": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP1",
      "path": "7"
    },
    "279": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP3",
      "path": "7"
    },
    "280": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "MSTORE",
      "path": "7"
    },
    "281": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP1",
      "path": "7"
    },
    "282": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "284": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "MUL",
      "path": "7"
    },
    "285": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "287": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "ADD",
      "path": "7"
    },
    "288": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP3",
      "path": "7"
    },
    "289": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "ADD",
      "path": "7"
    },
    "290": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "292": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "MSTORE",
      "path": "7"
    },
    "293": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP1",
      "path": "7"
    },
    "294": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "ISZERO",
      "path": "7"
    },
    "295": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14A"
    },
    "298": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "JUMPI",
      "path": "7"
    },
    "299": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP2",
      "path": "7"
    },
    "300": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "302": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "ADD",
      "path": "7"
    },
    "303": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "JUMPDEST",
      "path": "7"
    },
    "304": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH2",
      "path": "7",
      "value": "0x137"
    },
    "307": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27B"
    },
    "310": {
      "fn": "TokenRegistry.getTokens",
      "jump": "i",
      "offset": [1339, 1375],
      "op": "JUMP",
      "path": "7"
    },
    "311": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "JUMPDEST",
      "path": "7"
    },
    "312": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP2",
      "path": "7"
    },
    "313": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "MSTORE",
      "path": "7"
    },
    "314": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "316": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "ADD",
      "path": "7"
    },
    "317": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "SWAP1",
      "path": "7"
    },
    "318": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "320": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "SWAP1",
      "path": "7"
    },
    "321": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "SUB",
      "path": "7"
    },
    "322": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "SWAP1",
      "path": "7"
    },
    "323": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "DUP2",
      "path": "7"
    },
    "324": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F"
    },
    "327": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "JUMPI",
      "path": "7"
    },
    "328": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "SWAP1",
      "path": "7"
    },
    "329": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "POP",
      "path": "7"
    },
    "330": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1339, 1375],
      "op": "JUMPDEST",
      "path": "7"
    },
    "331": {
      "op": "POP"
    },
    "332": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1328, 1375],
      "op": "SWAP3",
      "path": "7"
    },
    "333": {
      "op": "POP"
    },
    "334": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1390, 1399],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "336": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "JUMPDEST",
      "path": "7"
    },
    "337": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1409, 1417],
      "op": "DUP3",
      "path": "7"
    },
    "338": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1409, 1424],
      "op": "MLOAD",
      "path": "7"
    },
    "339": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1405, 1406],
      "op": "DUP2",
      "path": "7"
    },
    "340": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1405, 1424],
      "op": "LT",
      "path": "7"
    },
    "341": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "ISZERO",
      "path": "7"
    },
    "342": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25A"
    },
    "345": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "JUMPI",
      "path": "7"
    },
    "346": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1473],
      "op": "DUP3",
      "path": "7",
      "statement": 2
    },
    "347": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1474, 1475],
      "op": "DUP2",
      "path": "7"
    },
    "348": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "DUP2",
      "path": "7"
    },
    "349": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "MLOAD",
      "path": "7"
    },
    "350": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "DUP2",
      "path": "7"
    },
    "351": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "LT",
      "path": "7"
    },
    "352": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "355": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "JUMPI",
      "path": "7"
    },
    "356": {
      "dev": "Index out of range",
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "INVALID",
      "path": "7"
    },
    "357": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "JUMPDEST",
      "path": "7"
    },
    "358": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "360": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "MUL",
      "path": "7"
    },
    "361": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "363": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "ADD",
      "path": "7"
    },
    "364": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "ADD",
      "path": "7"
    },
    "365": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1465, 1476],
      "op": "MLOAD",
      "path": "7"
    },
    "366": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1453],
      "op": "DUP5",
      "path": "7"
    },
    "367": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1454, 1455],
      "op": "DUP3",
      "path": "7"
    },
    "368": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "DUP2",
      "path": "7"
    },
    "369": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "MLOAD",
      "path": "7"
    },
    "370": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "DUP2",
      "path": "7"
    },
    "371": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "LT",
      "path": "7"
    },
    "372": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "PUSH2",
      "path": "7",
      "value": "0x179"
    },
    "375": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "JUMPI",
      "path": "7"
    },
    "376": {
      "dev": "Index out of range",
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "INVALID",
      "path": "7"
    },
    "377": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "JUMPDEST",
      "path": "7"
    },
    "378": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "380": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "MUL",
      "path": "7"
    },
    "381": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "383": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "ADD",
      "path": "7"
    },
    "384": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "ADD",
      "path": "7"
    },
    "385": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1456],
      "op": "MLOAD",
      "path": "7"
    },
    "386": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1462],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "388": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1462],
      "op": "ADD",
      "path": "7"
    },
    "389": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "SWAP1",
      "path": "7"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "396": {
      "op": "SHL"
    },
    "397": {
      "op": "SUB"
    },
    "398": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "AND",
      "path": "7"
    },
    "399": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "SWAP1",
      "path": "7"
    },
    "400": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "DUP2",
      "path": "7"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "op": "SUB"
    },
    "409": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "AND",
      "path": "7"
    },
    "410": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "DUP2",
      "path": "7"
    },
    "411": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "MSTORE",
      "path": "7"
    },
    "412": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "POP",
      "path": "7"
    },
    "413": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1445, 1476],
      "op": "POP",
      "path": "7"
    },
    "414": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1521],
      "op": "DUP2",
      "path": "7",
      "statement": 3
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "421": {
      "op": "SHL"
    },
    "422": {
      "op": "SUB"
    },
    "423": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1542],
      "op": "AND",
      "path": "7"
    },
    "424": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1542],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DC48BA5"
    },
    "429": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1551],
      "op": "DUP5",
      "path": "7"
    },
    "430": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1552, 1553],
      "op": "DUP4",
      "path": "7"
    },
    "431": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "DUP2",
      "path": "7"
    },
    "432": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "MLOAD",
      "path": "7"
    },
    "433": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "DUP2",
      "path": "7"
    },
    "434": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "LT",
      "path": "7"
    },
    "435": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B8"
    },
    "438": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "JUMPI",
      "path": "7"
    },
    "439": {
      "dev": "Index out of range",
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "INVALID",
      "path": "7"
    },
    "440": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "JUMPDEST",
      "path": "7"
    },
    "441": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "443": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "MUL",
      "path": "7"
    },
    "444": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "446": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "ADD",
      "path": "7"
    },
    "447": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "ADD",
      "path": "7"
    },
    "448": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1543, 1554],
      "op": "MLOAD",
      "path": "7"
    },
    "449": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "451": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "MLOAD",
      "path": "7"
    },
    "452": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP3",
      "path": "7"
    },
    "453": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "458": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "AND",
      "path": "7"
    },
    "459": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "461": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "SHL",
      "path": "7"
    },
    "462": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP2",
      "path": "7"
    },
    "463": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "MSTORE",
      "path": "7"
    },
    "464": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "466": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "ADD",
      "path": "7"
    },
    "467": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DC"
    },
    "470": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "SWAP2",
      "path": "7"
    },
    "471": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "SWAP1",
      "path": "7"
    },
    "472": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH2",
      "path": "7",
      "value": "0x471"
    },
    "475": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "JUMP",
      "path": "7"
    },
    "476": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "JUMPDEST",
      "path": "7"
    },
    "477": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "479": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "481": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "MLOAD",
      "path": "7"
    },
    "482": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP1",
      "path": "7"
    },
    "483": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP4",
      "path": "7"
    },
    "484": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "SUB",
      "path": "7"
    },
    "485": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP2",
      "path": "7"
    },
    "486": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP7",
      "path": "7"
    },
    "487": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP1",
      "path": "7"
    },
    "488": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "489": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "ISZERO",
      "path": "7"
    },
    "490": {
      "op": "DUP1"
    },
    "491": {
      "op": "ISZERO"
    },
    "492": {
      "op": "PUSH2",
      "value": "0x1F4"
    },
    "495": {
      "op": "JUMPI"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "498": {
      "op": "DUP1"
    },
    "499": {
      "op": "REVERT"
    },
    "500": {
      "op": "JUMPDEST"
    },
    "501": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "POP",
      "path": "7"
    },
    "502": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "GAS",
      "path": "7"
    },
    "503": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "STATICCALL",
      "path": "7"
    },
    "504": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "ISZERO",
      "path": "7"
    },
    "505": {
      "op": "DUP1"
    },
    "506": {
      "op": "ISZERO"
    },
    "507": {
      "op": "PUSH2",
      "value": "0x208"
    },
    "510": {
      "op": "JUMPI"
    },
    "511": {
      "op": "RETURNDATASIZE"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "514": {
      "op": "DUP1"
    },
    "515": {
      "op": "RETURNDATACOPY"
    },
    "516": {
      "op": "RETURNDATASIZE"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "519": {
      "op": "REVERT"
    },
    "520": {
      "op": "JUMPDEST"
    },
    "521": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "POP",
      "path": "7"
    },
    "522": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "POP",
      "path": "7"
    },
    "523": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "POP",
      "path": "7"
    },
    "524": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "POP",
      "path": "7"
    },
    "525": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "527": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "MLOAD",
      "path": "7"
    },
    "528": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "531": {
      "op": "NOT"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "534": {
      "op": "DUP3"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "op": "AND"
    },
    "537": {
      "op": "DUP3"
    },
    "538": {
      "op": "ADD"
    },
    "539": {
      "op": "DUP1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "542": {
      "op": "MSTORE"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "547": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "SWAP2",
      "path": "7"
    },
    "548": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "SWAP1",
      "path": "7"
    },
    "549": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "DUP2",
      "path": "7"
    },
    "550": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "ADD",
      "path": "7"
    },
    "551": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "SWAP1",
      "path": "7"
    },
    "552": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "555": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "JUMP",
      "path": "7"
    },
    "556": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1510, 1555],
      "op": "JUMPDEST",
      "path": "7"
    },
    "557": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1498],
      "op": "DUP5",
      "path": "7"
    },
    "558": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1499, 1500],
      "op": "DUP3",
      "path": "7"
    },
    "559": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "DUP2",
      "path": "7"
    },
    "560": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "MLOAD",
      "path": "7"
    },
    "561": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "DUP2",
      "path": "7"
    },
    "562": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "LT",
      "path": "7"
    },
    "563": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "566": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "JUMPI",
      "path": "7"
    },
    "567": {
      "dev": "Index out of range",
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "INVALID",
      "path": "7"
    },
    "568": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "JUMPDEST",
      "path": "7"
    },
    "569": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "571": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "SWAP1",
      "path": "7"
    },
    "572": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "DUP2",
      "path": "7"
    },
    "573": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "MUL",
      "path": "7"
    },
    "574": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "SWAP2",
      "path": "7"
    },
    "575": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "SWAP1",
      "path": "7"
    },
    "576": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "SWAP2",
      "path": "7"
    },
    "577": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "ADD",
      "path": "7"
    },
    "578": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "DUP2",
      "path": "7"
    },
    "579": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "ADD",
      "path": "7"
    },
    "580": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1501],
      "op": "MLOAD",
      "path": "7"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1555],
      "op": "SWAP1",
      "path": "7"
    },
    "590": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1555],
      "op": "SWAP3",
      "path": "7"
    },
    "591": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1555],
      "op": "AND",
      "path": "7"
    },
    "592": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1507],
      "op": "SWAP2",
      "path": "7"
    },
    "593": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1507],
      "op": "ADD",
      "path": "7"
    },
    "594": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1490, 1555],
      "op": "MSTORE",
      "path": "7"
    },
    "595": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1426, 1429],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x1"
    },
    "597": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1426, 1429],
      "op": "ADD",
      "path": "7"
    },
    "598": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x150"
    },
    "601": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "JUMP",
      "path": "7"
    },
    "602": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "JUMPDEST",
      "path": "7"
    },
    "603": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1385, 1566],
      "op": "POP",
      "path": "7"
    },
    "604": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "POP",
      "path": "7"
    },
    "605": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "POP",
      "path": "7"
    },
    "606": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "SWAP3",
      "path": "7"
    },
    "607": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "SWAP2",
      "path": "7"
    },
    "608": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "POP",
      "path": "7"
    },
    "609": {
      "fn": "TokenRegistry.getTokens",
      "offset": [1036, 1572],
      "op": "POP",
      "path": "7"
    },
    "610": {
      "fn": "TokenRegistry.getTokens",
      "jump": "o",
      "offset": [1036, 1572],
      "op": "JUMP",
      "path": "7"
    },
    "611": {
      "offset": [240, 320],
      "op": "JUMPDEST",
      "path": "7"
    },
    "612": {
      "offset": [278, 320],
      "op": "PUSH20",
      "path": "7",
      "value": "0xD8EE69652E4E4838F2531732A46D1F7F584F0B7F"
    },
    "633": {
      "offset": [240, 320],
      "op": "DUP2",
      "path": "7"
    },
    "634": {
      "fn": "TokenRegistry.getTokens",
      "jump": "o",
      "offset": [240, 320],
      "op": "JUMP",
      "path": "7"
    },
    "635": {
      "offset": [210, 1574],
      "op": "JUMPDEST",
      "path": "7"
    },
    "636": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "638": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "DUP1",
      "path": "7"
    },
    "639": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "MLOAD",
      "path": "7"
    },
    "640": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "DUP1",
      "path": "7"
    },
    "641": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "DUP3",
      "path": "7"
    },
    "642": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "ADD",
      "path": "7"
    },
    "643": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "SWAP1",
      "path": "7"
    },
    "644": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "SWAP2",
      "path": "7"
    },
    "645": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "MSTORE",
      "path": "7"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "648": {
      "offset": [210, 1574],
      "op": "DUP1",
      "path": "7"
    },
    "649": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "DUP3",
      "path": "7"
    },
    "650": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "MSTORE",
      "path": "7"
    },
    "651": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "653": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "DUP3",
      "path": "7"
    },
    "654": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "ADD",
      "path": "7"
    },
    "655": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "MSTORE",
      "path": "7"
    },
    "656": {
      "fn": "TokenRegistry.getTokens",
      "offset": [210, 1574],
      "op": "SWAP1",
      "path": "7"
    },
    "657": {
      "fn": "TokenRegistry.getTokens",
      "jump": "o",
      "offset": [210, 1574],
      "op": "JUMP",
      "path": "7"
    },
    "658": {
      "op": "JUMPDEST"
    },
    "659": {
      "op": "DUP1"
    },
    "660": {
      "op": "MLOAD"
    },
    "661": {
      "op": "PUSH2",
      "value": "0x29D"
    },
    "664": {
      "op": "DUP2"
    },
    "665": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "668": {
      "op": "JUMP"
    },
    "669": {
      "op": "JUMPDEST"
    },
    "670": {
      "op": "SWAP3"
    },
    "671": {
      "op": "SWAP2"
    },
    "672": {
      "op": "POP"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "op": "JUMP"
    },
    "675": {
      "op": "JUMPDEST"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "678": {
      "op": "DUP3"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "681": {
      "op": "DUP4"
    },
    "682": {
      "op": "ADD"
    },
    "683": {
      "op": "SLT"
    },
    "684": {
      "op": "PUSH2",
      "value": "0x2B4"
    },
    "687": {
      "op": "JUMPI"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "690": {
      "op": "DUP1"
    },
    "691": {
      "op": "REVERT"
    },
    "692": {
      "op": "JUMPDEST"
    },
    "693": {
      "op": "DUP2"
    },
    "694": {
      "op": "MLOAD"
    },
    "695": {
      "op": "PUSH2",
      "value": "0x2C7"
    },
    "698": {
      "op": "PUSH2",
      "value": "0x2C2"
    },
    "701": {
      "op": "DUP3"
    },
    "702": {
      "op": "PUSH2",
      "value": "0x4D9"
    },
    "705": {
      "op": "JUMP"
    },
    "706": {
      "op": "JUMPDEST"
    },
    "707": {
      "op": "PUSH2",
      "value": "0x4B2"
    },
    "710": {
      "op": "JUMP"
    },
    "711": {
      "op": "JUMPDEST"
    },
    "712": {
      "op": "SWAP2"
    },
    "713": {
      "op": "POP"
    },
    "714": {
      "op": "DUP2"
    },
    "715": {
      "op": "DUP2"
    },
    "716": {
      "op": "DUP4"
    },
    "717": {
      "op": "MSTORE"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "720": {
      "op": "DUP5"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "op": "SWAP4"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "726": {
      "op": "DUP2"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "op": "SWAP1"
    },
    "729": {
      "op": "POP"
    },
    "730": {
      "op": "DUP4"
    },
    "731": {
      "op": "DUP6"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "734": {
      "op": "DUP5"
    },
    "735": {
      "op": "MUL"
    },
    "736": {
      "op": "DUP3"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "op": "GT"
    },
    "739": {
      "op": "ISZERO"
    },
    "740": {
      "op": "PUSH2",
      "value": "0x2EC"
    },
    "743": {
      "op": "JUMPI"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "746": {
      "op": "DUP1"
    },
    "747": {
      "op": "REVERT"
    },
    "748": {
      "op": "JUMPDEST"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "751": {
      "op": "JUMPDEST"
    },
    "752": {
      "op": "DUP4"
    },
    "753": {
      "op": "DUP2"
    },
    "754": {
      "op": "LT"
    },
    "755": {
      "op": "ISZERO"
    },
    "756": {
      "op": "PUSH2",
      "value": "0x318"
    },
    "759": {
      "op": "JUMPI"
    },
    "760": {
      "op": "DUP2"
    },
    "761": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "764": {
      "op": "DUP9"
    },
    "765": {
      "op": "DUP3"
    },
    "766": {
      "op": "PUSH2",
      "value": "0x292"
    },
    "769": {
      "op": "JUMP"
    },
    "770": {
      "op": "JUMPDEST"
    },
    "771": {
      "op": "DUP5"
    },
    "772": {
      "op": "MSTORE"
    },
    "773": {
      "op": "POP"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "776": {
      "op": "SWAP3"
    },
    "777": {
      "op": "DUP4"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "op": "SWAP3"
    },
    "780": {
      "op": "SWAP2"
    },
    "781": {
      "op": "SWAP1"
    },
    "782": {
      "op": "SWAP2"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "op": "SWAP1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "ADD"
    },
    "788": {
      "op": "PUSH2",
      "value": "0x2EF"
    },
    "791": {
      "op": "JUMP"
    },
    "792": {
      "op": "JUMPDEST"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "op": "SWAP3"
    },
    "798": {
      "op": "SWAP2"
    },
    "799": {
      "op": "POP"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "op": "JUMP"
    },
    "802": {
      "op": "JUMPDEST"
    },
    "803": {
      "op": "DUP1"
    },
    "804": {
      "op": "CALLDATALOAD"
    },
    "805": {
      "op": "PUSH2",
      "value": "0x29D"
    },
    "808": {
      "op": "DUP2"
    },
    "809": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "812": {
      "op": "JUMP"
    },
    "813": {
      "op": "JUMPDEST"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "DUP5"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "op": "SLT"
    },
    "822": {
      "op": "ISZERO"
    },
    "823": {
      "op": "PUSH2",
      "value": "0x33F"
    },
    "826": {
      "op": "JUMPI"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "829": {
      "op": "DUP1"
    },
    "830": {
      "op": "REVERT"
    },
    "831": {
      "op": "JUMPDEST"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "834": {
      "op": "PUSH2",
      "value": "0x34B"
    },
    "837": {
      "op": "DUP5"
    },
    "838": {
      "op": "DUP5"
    },
    "839": {
      "op": "PUSH2",
      "value": "0x292"
    },
    "842": {
      "op": "JUMP"
    },
    "843": {
      "op": "JUMPDEST"
    },
    "844": {
      "op": "SWAP5"
    },
    "845": {
      "op": "SWAP4"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "op": "JUMP"
    },
    "851": {
      "op": "JUMPDEST"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "DUP5"
    },
    "858": {
      "op": "SUB"
    },
    "859": {
      "op": "SLT"
    },
    "860": {
      "op": "ISZERO"
    },
    "861": {
      "op": "PUSH2",
      "value": "0x365"
    },
    "864": {
      "op": "JUMPI"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "867": {
      "op": "DUP1"
    },
    "868": {
      "op": "REVERT"
    },
    "869": {
      "op": "JUMPDEST"
    },
    "870": {
      "op": "DUP2"
    },
    "871": {
      "op": "MLOAD"
    },
    "872": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "881": {
      "op": "DUP2"
    },
    "882": {
      "op": "GT"
    },
    "883": {
      "op": "ISZERO"
    },
    "884": {
      "op": "PUSH2",
      "value": "0x37C"
    },
    "887": {
      "op": "JUMPI"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "890": {
      "op": "DUP1"
    },
    "891": {
      "op": "REVERT"
    },
    "892": {
      "op": "JUMPDEST"
    },
    "893": {
      "op": "PUSH2",
      "value": "0x34B"
    },
    "896": {
      "op": "DUP5"
    },
    "897": {
      "op": "DUP3"
    },
    "898": {
      "op": "DUP6"
    },
    "899": {
      "op": "ADD"
    },
    "900": {
      "op": "PUSH2",
      "value": "0x2A3"
    },
    "903": {
      "op": "JUMP"
    },
    "904": {
      "op": "JUMPDEST"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "907": {
      "op": "DUP1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "910": {
      "op": "DUP4"
    },
    "911": {
      "op": "DUP6"
    },
    "912": {
      "op": "SUB"
    },
    "913": {
      "op": "SLT"
    },
    "914": {
      "op": "ISZERO"
    },
    "915": {
      "op": "PUSH2",
      "value": "0x39B"
    },
    "918": {
      "op": "JUMPI"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "921": {
      "op": "DUP1"
    },
    "922": {
      "op": "REVERT"
    },
    "923": {
      "op": "JUMPDEST"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "926": {
      "op": "PUSH2",
      "value": "0x3A7"
    },
    "929": {
      "op": "DUP6"
    },
    "930": {
      "op": "DUP6"
    },
    "931": {
      "op": "PUSH2",
      "value": "0x322"
    },
    "934": {
      "op": "JUMP"
    },
    "935": {
      "op": "JUMPDEST"
    },
    "936": {
      "op": "SWAP3"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "941": {
      "op": "PUSH2",
      "value": "0x3B8"
    },
    "944": {
      "op": "DUP6"
    },
    "945": {
      "op": "DUP3"
    },
    "946": {
      "op": "DUP7"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x322"
    },
    "951": {
      "op": "JUMP"
    },
    "952": {
      "op": "JUMPDEST"
    },
    "953": {
      "op": "SWAP2"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "op": "SWAP3"
    },
    "957": {
      "op": "POP"
    },
    "958": {
      "op": "SWAP3"
    },
    "959": {
      "op": "SWAP1"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "op": "JUMP"
    },
    "962": {
      "op": "JUMPDEST"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "965": {
      "op": "PUSH2",
      "value": "0x3CE"
    },
    "968": {
      "op": "DUP4"
    },
    "969": {
      "op": "DUP4"
    },
    "970": {
      "op": "PUSH2",
      "value": "0x43E"
    },
    "973": {
      "op": "JUMP"
    },
    "974": {
      "op": "JUMPDEST"
    },
    "975": {
      "op": "POP"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "SWAP1"
    },
    "981": {
      "op": "JUMP"
    },
    "982": {
      "op": "JUMPDEST"
    },
    "983": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "986": {
      "op": "DUP2"
    },
    "987": {
      "op": "PUSH2",
      "value": "0x50D"
    },
    "990": {
      "op": "JUMP"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "MSTORE"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "op": "JUMP"
    },
    "997": {
      "op": "JUMPDEST"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1000": {
      "op": "PUSH2",
      "value": "0x3F0"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "PUSH2",
      "value": "0x500"
    },
    "1007": {
      "op": "JUMP"
    },
    "1008": {
      "op": "JUMPDEST"
    },
    "1009": {
      "op": "PUSH2",
      "value": "0x3FA"
    },
    "1012": {
      "op": "DUP2"
    },
    "1013": {
      "op": "DUP6"
    },
    "1014": {
      "op": "PUSH2",
      "value": "0x504"
    },
    "1017": {
      "op": "JUMP"
    },
    "1018": {
      "op": "JUMPDEST"
    },
    "1019": {
      "op": "SWAP4"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "op": "PUSH2",
      "value": "0x405"
    },
    "1024": {
      "op": "DUP4"
    },
    "1025": {
      "op": "PUSH2",
      "value": "0x4FA"
    },
    "1028": {
      "op": "JUMP"
    },
    "1029": {
      "op": "JUMPDEST"
    },
    "1030": {
      "op": "DUP1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1033": {
      "op": "JUMPDEST"
    },
    "1034": {
      "op": "DUP4"
    },
    "1035": {
      "op": "DUP2"
    },
    "1036": {
      "op": "LT"
    },
    "1037": {
      "op": "ISZERO"
    },
    "1038": {
      "op": "PUSH2",
      "value": "0x433"
    },
    "1041": {
      "op": "JUMPI"
    },
    "1042": {
      "op": "DUP2"
    },
    "1043": {
      "op": "MLOAD"
    },
    "1044": {
      "op": "PUSH2",
      "value": "0x41D"
    },
    "1047": {
      "op": "DUP9"
    },
    "1048": {
      "op": "DUP3"
    },
    "1049": {
      "op": "PUSH2",
      "value": "0x3C2"
    },
    "1052": {
      "op": "JUMP"
    },
    "1053": {
      "op": "JUMPDEST"
    },
    "1054": {
      "op": "SWAP8"
    },
    "1055": {
      "op": "POP"
    },
    "1056": {
      "op": "PUSH2",
      "value": "0x428"
    },
    "1059": {
      "op": "DUP4"
    },
    "1060": {
      "op": "PUSH2",
      "value": "0x4FA"
    },
    "1063": {
      "op": "JUMP"
    },
    "1064": {
      "op": "JUMPDEST"
    },
    "1065": {
      "op": "SWAP3"
    },
    "1066": {
      "op": "POP"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "PUSH2",
      "value": "0x409"
    },
    "1074": {
      "op": "JUMP"
    },
    "1075": {
      "op": "JUMPDEST"
    },
    "1076": {
      "op": "POP"
    },
    "1077": {
      "op": "SWAP5"
    },
    "1078": {
      "op": "SWAP6"
    },
    "1079": {
      "op": "SWAP5"
    },
    "1080": {
      "op": "POP"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "op": "JUMP"
    },
    "1086": {
      "op": "JUMPDEST"
    },
    "1087": {
      "op": "DUP1"
    },
    "1088": {
      "op": "MLOAD"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1091": {
      "op": "DUP4"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "SWAP1"
    },
    "1094": {
      "op": "PUSH2",
      "value": "0x44F"
    },
    "1097": {
      "op": "DUP5"
    },
    "1098": {
      "op": "DUP3"
    },
    "1099": {
      "op": "PUSH2",
      "value": "0x3D6"
    },
    "1102": {
      "op": "JUMP"
    },
    "1103": {
      "op": "JUMPDEST"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1107": {
      "op": "DUP3"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "MLOAD"
    },
    "1110": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1115": {
      "op": "DUP6"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "op": "DUP3"
    },
    "1118": {
      "op": "PUSH2",
      "value": "0x3D6"
    },
    "1121": {
      "op": "JUMP"
    },
    "1122": {
      "op": "JUMPDEST"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "op": "JUMP"
    },
    "1128": {
      "op": "JUMPDEST"
    },
    "1129": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "1132": {
      "op": "DUP2"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "1136": {
      "op": "JUMP"
    },
    "1137": {
      "op": "JUMPDEST"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1140": {
      "op": "DUP2"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "op": "PUSH2",
      "value": "0x29D"
    },
    "1145": {
      "op": "DUP3"
    },
    "1146": {
      "op": "DUP5"
    },
    "1147": {
      "op": "PUSH2",
      "value": "0x3D6"
    },
    "1150": {
      "op": "JUMP"
    },
    "1151": {
      "op": "JUMPDEST"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1154": {
      "op": "DUP1"
    },
    "1155": {
      "op": "DUP3"
    },
    "1156": {
      "op": "MSTORE"
    },
    "1157": {
      "op": "DUP2"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "op": "PUSH2",
      "value": "0x490"
    },
    "1162": {
      "op": "DUP2"
    },
    "1163": {
      "op": "DUP5"
    },
    "1164": {
      "op": "PUSH2",
      "value": "0x3E5"
    },
    "1167": {
      "op": "JUMP"
    },
    "1168": {
      "op": "JUMPDEST"
    },
    "1169": {
      "op": "SWAP4"
    },
    "1170": {
      "op": "SWAP3"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "JUMP"
    },
    "1175": {
      "op": "JUMPDEST"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1178": {
      "op": "DUP2"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "PUSH2",
      "value": "0x4A5"
    },
    "1183": {
      "op": "DUP3"
    },
    "1184": {
      "op": "DUP6"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1188": {
      "op": "JUMP"
    },
    "1189": {
      "op": "JUMPDEST"
    },
    "1190": {
      "op": "PUSH2",
      "value": "0x490"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1195": {
      "op": "DUP4"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "op": "DUP5"
    },
    "1198": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1201": {
      "op": "JUMP"
    },
    "1202": {
      "op": "JUMPDEST"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1205": {
      "op": "MLOAD"
    },
    "1206": {
      "op": "DUP2"
    },
    "1207": {
      "op": "DUP2"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1218": {
      "op": "DUP2"
    },
    "1219": {
      "op": "GT"
    },
    "1220": {
      "op": "DUP3"
    },
    "1221": {
      "op": "DUP3"
    },
    "1222": {
      "op": "LT"
    },
    "1223": {
      "op": "OR"
    },
    "1224": {
      "op": "ISZERO"
    },
    "1225": {
      "op": "PUSH2",
      "value": "0x4D1"
    },
    "1228": {
      "op": "JUMPI"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1231": {
      "op": "DUP1"
    },
    "1232": {
      "op": "REVERT"
    },
    "1233": {
      "op": "JUMPDEST"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "SWAP2"
    },
    "1238": {
      "op": "SWAP1"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "JUMP"
    },
    "1241": {
      "op": "JUMPDEST"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1244": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1253": {
      "op": "DUP3"
    },
    "1254": {
      "op": "GT"
    },
    "1255": {
      "op": "ISZERO"
    },
    "1256": {
      "op": "PUSH2",
      "value": "0x4F0"
    },
    "1259": {
      "op": "JUMPI"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1262": {
      "op": "DUP1"
    },
    "1263": {
      "op": "REVERT"
    },
    "1264": {
      "op": "JUMPDEST"
    },
    "1265": {
      "op": "POP"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1268": {
      "op": "SWAP1"
    },
    "1269": {
      "op": "DUP2"
    },
    "1270": {
      "op": "MUL"
    },
    "1271": {
      "op": "ADD"
    },
    "1272": {
      "op": "SWAP1"
    },
    "1273": {
      "op": "JUMP"
    },
    "1274": {
      "op": "JUMPDEST"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "SWAP1"
    },
    "1279": {
      "op": "JUMP"
    },
    "1280": {
      "op": "JUMPDEST"
    },
    "1281": {
      "op": "MLOAD"
    },
    "1282": {
      "op": "SWAP1"
    },
    "1283": {
      "op": "JUMP"
    },
    "1284": {
      "op": "JUMPDEST"
    },
    "1285": {
      "op": "SWAP1"
    },
    "1286": {
      "op": "DUP2"
    },
    "1287": {
      "op": "MSTORE"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1290": {
      "op": "ADD"
    },
    "1291": {
      "op": "SWAP1"
    },
    "1292": {
      "op": "JUMP"
    },
    "1293": {
      "op": "JUMPDEST"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "AND"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x29D"
    },
    "1309": {
      "op": "JUMP"
    },
    "1310": {
      "op": "JUMPDEST"
    },
    "1311": {
      "op": "SWAP1"
    },
    "1312": {
      "op": "JUMP"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1317": {
      "op": "DUP2"
    },
    "1318": {
      "op": "PUSH2",
      "value": "0x50D"
    },
    "1321": {
      "op": "JUMP"
    },
    "1322": {
      "op": "JUMPDEST"
    },
    "1323": {
      "op": "DUP2"
    },
    "1324": {
      "op": "EQ"
    },
    "1325": {
      "op": "PUSH2",
      "value": "0x535"
    },
    "1328": {
      "op": "JUMPI"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1331": {
      "op": "DUP1"
    },
    "1332": {
      "op": "REVERT"
    },
    "1333": {
      "op": "JUMPDEST"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "op": "JUMP"
    },
    "1336": {
      "op": "JUMPDEST"
    },
    "1337": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1340": {
      "op": "DUP2"
    },
    "1341": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "1344": {
      "op": "JUMP"
    }
  },
  "sha1": "a960476fa0711b326a56c2ac7fcbc1c7c3319d03",
  "source": "/**\n * Copyright 2017-2022, OokiDao. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0.\n */\n\npragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport \"../../interfaces/IBZx.sol\";\n\ncontract TokenRegistry {\n\n    address public constant bZxContract = 0xD8Ee69652E4e4838f2531732a46d1f7F584F0b7f; // mainnet\n    //address public constant bZxContract = 0x5cfba2639a3db0D9Cc264Aa27B2E6d134EeA486a; // kovan\n    //address public constant bZxContract = 0xD154eE4982b83a87b0649E5a7DDA1514812aFE1f; // bsc\n    //address public constant bZxContract = 0x059D60a9CEfBc70b9Ea9FFBb9a041581B1dFA6a8; // polygon\n    //address public constant bZxContract = 0x37407F3178ffE07a6cF5C847F8f680FEcf319FAB; // arbitrum\n    //address public constant bZxContract = 0xf2FBaD7E59f0DeeE0ec2E724d2b6827Ea1cCf35f; // evmos\n    //address public constant bZxContract = 0xAcedbFd5Bc1fb0dDC948579d4195616c05E74Fd1; // optimism\n\n    struct TokenMetadata {\n        address token; // iToken\n        address asset; // underlying asset\n    }\n\n    function getTokens(uint256 _start, uint256 _count)\n        external\n        view\n        returns (TokenMetadata[] memory metadata)\n    {\n        address[] memory loanPool;\n        IBZx theProtocol = IBZx(bZxContract);\n        loanPool = theProtocol.getLoanPoolsList(_start, _count);\n\n        metadata = new TokenMetadata[](loanPool.length);\n        for (uint256 i = 0; i < loanPool.length; i++) {\n            metadata[i].token = loanPool[i];\n            metadata[i].asset = theProtocol.loanPoolToUnderlying(loanPool[i]);\n        }\n    }\n}\n",
  "sourceMap": "210:1364:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;210:1364:7;;;;;;;",
  "sourcePath": "contracts/adapters/TokenRegistry.sol",
  "type": "contract"
}
