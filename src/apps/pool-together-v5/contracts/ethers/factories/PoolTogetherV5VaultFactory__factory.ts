/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { PoolTogetherV5VaultFactory, PoolTogetherV5VaultFactoryInterface } from '../PoolTogetherV5VaultFactory';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract Vault',
        name: 'vault',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'contract VaultFactory',
        name: 'vaultFactory',
        type: 'address',
      },
    ],
    name: 'NewFactoryVault',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'allVaults',
    outputs: [
      {
        internalType: 'contract Vault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_asset',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'contract IERC4626',
        name: '_yieldVault',
        type: 'address',
      },
      {
        internalType: 'contract PrizePool',
        name: '_prizePool',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_claimer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_yieldFeeRecipient',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_yieldFeePercentage',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'deployVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Vault',
        name: '',
        type: 'address',
      },
    ],
    name: 'deployedVaults',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'deployerNonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalVaults',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class PoolTogetherV5VaultFactory__factory {
  static readonly abi = _abi;
  static createInterface(): PoolTogetherV5VaultFactoryInterface {
    return new utils.Interface(_abi) as PoolTogetherV5VaultFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PoolTogetherV5VaultFactory {
    return new Contract(address, _abi, signerOrProvider) as PoolTogetherV5VaultFactory;
  }
}
