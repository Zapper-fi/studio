/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { getContract, GetContractReturnType, PublicClient } from 'viem';

export const spoolLensAbi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'smartVault',
        type: 'address',
      },
    ],
    name: 'getSVTTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'strategies',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'riskProvider',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'allocationProvider',
        type: 'address',
      },
    ],
    name: 'getSmartVaultAllocations',
    outputs: [
      {
        internalType: 'uint256[][]',
        name: 'allocations',
        type: 'uint256[][]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'smartVault',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'doFlush',
        type: 'bool',
      },
    ],
    name: 'getSmartVaultAssetBalances',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'balances',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'smartVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'nftIds',
        type: 'uint256[]',
      },
    ],
    name: 'getUserSVTBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'smartVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'nftIds',
        type: 'uint256[]',
      },
    ],
    name: 'getUserSVTsfromNFTs',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'nftSvts',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export type SpoolLens = typeof spoolLensAbi;
export type SpoolLensContract = GetContractReturnType<SpoolLens, PublicClient>;

export class SpoolLens__factory {
  static connect(address: string, client: PublicClient) {
    return getContract({ address, abi: spoolLensAbi, publicClient: client });
  }
}
