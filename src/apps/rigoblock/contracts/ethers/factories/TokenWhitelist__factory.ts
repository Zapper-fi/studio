/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { TokenWhitelist, TokenWhitelistInterface } from '../TokenWhitelist';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newAuthority',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'isWhitelisted',
        type: 'bool',
      },
    ],
    name: 'Whitelisted',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'bool[]',
        name: 'whitelisted',
        type: 'bool[]',
      },
    ],
    name: 'batchUpdateTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAuthority',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'isWhitelistedToken',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'removeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'whitelistToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class TokenWhitelist__factory {
  static readonly abi = _abi;
  static createInterface(): TokenWhitelistInterface {
    return new utils.Interface(_abi) as TokenWhitelistInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TokenWhitelist {
    return new Contract(address, _abi, signerOrProvider) as TokenWhitelist;
  }
}
