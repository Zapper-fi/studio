[
  { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "address", "name": "proposer", "type": "address" },
      { "indexed": false, "internalType": "uint256", "name": "proposalId", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "target", "type": "address" },
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          { "internalType": "uint256", "name": "value", "type": "uint256" }
        ],
        "indexed": false,
        "internalType": "struct IGovernanceVoting.ProposedAction[]",
        "name": "actions",
        "type": "tuple[]"
      },
      { "indexed": false, "internalType": "uint256", "name": "startBlockOrTime", "type": "uint256" },
      { "indexed": false, "internalType": "uint256", "name": "endBlockOrTime", "type": "uint256" },
      { "indexed": false, "internalType": "string", "name": "description", "type": "string" }
    ],
    "name": "ProposalCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": false, "internalType": "uint256", "name": "proposalId", "type": "uint256" }],
    "name": "ProposalExecuted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": false, "internalType": "address", "name": "newStrategy", "type": "address" }],
    "name": "StrategyUpgraded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "uint256", "name": "proposalThreshold", "type": "uint256" },
      { "indexed": false, "internalType": "uint256", "name": "quorumThreshold", "type": "uint256" }
    ],
    "name": "ThresholdsUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": true, "internalType": "address", "name": "newImplementation", "type": "address" }],
    "name": "Upgraded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "address", "name": "voter", "type": "address" },
      { "indexed": false, "internalType": "uint256", "name": "proposalId", "type": "uint256" },
      { "indexed": false, "internalType": "enum IGovernanceVoting.VoteType", "name": "voteType", "type": "uint8" },
      { "indexed": false, "internalType": "uint256", "name": "votingPower", "type": "uint256" }
    ],
    "name": "VoteCast",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "proposalId", "type": "uint256" },
      { "internalType": "enum IGovernanceVoting.VoteType", "name": "voteType", "type": "uint8" }
    ],
    "name": "castVote",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "proposalId", "type": "uint256" },
      { "internalType": "enum IGovernanceVoting.VoteType", "name": "voteType", "type": "uint8" },
      { "internalType": "uint8", "name": "v", "type": "uint8" },
      { "internalType": "bytes32", "name": "r", "type": "bytes32" },
      { "internalType": "bytes32", "name": "s", "type": "bytes32" }
    ],
    "name": "castVoteBySignature",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "proposalId", "type": "uint256" }],
    "name": "execute",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "proposalId", "type": "uint256" }],
    "name": "getActions",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "target", "type": "address" },
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          { "internalType": "uint256", "name": "value", "type": "uint256" }
        ],
        "internalType": "struct IGovernanceVoting.ProposedAction[]",
        "name": "proposedActions",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "proposalId", "type": "uint256" }],
    "name": "getProposalById",
    "outputs": [
      {
        "components": [
          {
            "components": [
              { "internalType": "uint256", "name": "actionsLength", "type": "uint256" },
              { "internalType": "uint256", "name": "startBlockOrTime", "type": "uint256" },
              { "internalType": "uint256", "name": "endBlockOrTime", "type": "uint256" },
              { "internalType": "uint256", "name": "votesFor", "type": "uint256" },
              { "internalType": "uint256", "name": "votesAgainst", "type": "uint256" },
              { "internalType": "uint256", "name": "votesAbstain", "type": "uint256" },
              { "internalType": "bool", "name": "executed", "type": "bool" }
            ],
            "internalType": "struct IGovernanceState.Proposal",
            "name": "proposal",
            "type": "tuple"
          },
          {
            "components": [
              { "internalType": "address", "name": "target", "type": "address" },
              { "internalType": "bytes", "name": "data", "type": "bytes" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "internalType": "struct IGovernanceVoting.ProposedAction[]",
            "name": "proposedAction",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IGovernanceState.ProposalWrapper",
        "name": "proposalWrapper",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "proposalId", "type": "uint256" }],
    "name": "getProposalState",
    "outputs": [{ "internalType": "enum IGovernanceState.ProposalState", "name": "", "type": "uint8" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "proposalId", "type": "uint256" },
      { "internalType": "address", "name": "voter", "type": "address" }
    ],
    "name": "getReceipt",
    "outputs": [
      {
        "components": [
          { "internalType": "bool", "name": "hasVoted", "type": "bool" },
          { "internalType": "uint96", "name": "votes", "type": "uint96" },
          { "internalType": "enum IGovernanceVoting.VoteType", "name": "voteType", "type": "uint8" }
        ],
        "internalType": "struct IGovernanceState.Receipt",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
    "name": "getVotingPower",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "governanceParameters",
    "outputs": [
      {
        "components": [
          {
            "components": [
              { "internalType": "address", "name": "strategy", "type": "address" },
              { "internalType": "uint256", "name": "proposalThreshold", "type": "uint256" },
              { "internalType": "uint256", "name": "quorumThreshold", "type": "uint256" },
              { "internalType": "enum IGovernanceState.TimeType", "name": "timeType", "type": "uint8" }
            ],
            "internalType": "struct IGovernanceState.GovernanceParameters",
            "name": "params",
            "type": "tuple"
          },
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "string", "name": "version", "type": "string" }
        ],
        "internalType": "struct IGovernanceState.EnhancedParams",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  { "inputs": [], "name": "initializeGovernance", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
  {
    "inputs": [],
    "name": "name",
    "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "proposalCount",
    "outputs": [{ "internalType": "uint256", "name": "count", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "proposals",
    "outputs": [
      {
        "components": [
          {
            "components": [
              { "internalType": "uint256", "name": "actionsLength", "type": "uint256" },
              { "internalType": "uint256", "name": "startBlockOrTime", "type": "uint256" },
              { "internalType": "uint256", "name": "endBlockOrTime", "type": "uint256" },
              { "internalType": "uint256", "name": "votesFor", "type": "uint256" },
              { "internalType": "uint256", "name": "votesAgainst", "type": "uint256" },
              { "internalType": "uint256", "name": "votesAbstain", "type": "uint256" },
              { "internalType": "bool", "name": "executed", "type": "bool" }
            ],
            "internalType": "struct IGovernanceState.Proposal",
            "name": "proposal",
            "type": "tuple"
          },
          {
            "components": [
              { "internalType": "address", "name": "target", "type": "address" },
              { "internalType": "bytes", "name": "data", "type": "bytes" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "internalType": "struct IGovernanceVoting.ProposedAction[]",
            "name": "proposedAction",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IGovernanceState.ProposalWrapper[]",
        "name": "proposalWrapper",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "target", "type": "address" },
          { "internalType": "bytes", "name": "data", "type": "bytes" },
          { "internalType": "uint256", "name": "value", "type": "uint256" }
        ],
        "internalType": "struct IGovernanceVoting.ProposedAction[]",
        "name": "actions",
        "type": "tuple[]"
      },
      { "internalType": "string", "name": "description", "type": "string" }
    ],
    "name": "propose",
    "outputs": [{ "internalType": "uint256", "name": "proposalId", "type": "uint256" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "newProposalThreshold", "type": "uint256" },
      { "internalType": "uint256", "name": "newQuorumThreshold", "type": "uint256" }
    ],
    "name": "updateThresholds",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "newImplementation", "type": "address" }],
    "name": "upgradeImplementation",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "newStrategy", "type": "address" }],
    "name": "upgradeStrategy",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "votingPeriod",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  }
]
