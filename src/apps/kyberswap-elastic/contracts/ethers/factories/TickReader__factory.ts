/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { TickReader, TickReaderInterface } from '../TickReader';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IPoolStorage',
        name: 'pool',
        type: 'address',
      },
    ],
    name: 'getAllTicks',
    outputs: [
      {
        internalType: 'int24[]',
        name: 'allTicks',
        type: 'int24[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IPoolStorage',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: 'tick',
        type: 'int24',
      },
    ],
    name: 'getNearestInitializedTicks',
    outputs: [
      {
        internalType: 'int24',
        name: 'previous',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'next',
        type: 'int24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IPoolStorage',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: 'startTick',
        type: 'int24',
      },
      {
        internalType: 'uint32',
        name: 'length',
        type: 'uint32',
      },
    ],
    name: 'getTicksInRange',
    outputs: [
      {
        internalType: 'int24[]',
        name: 'allTicks',
        type: 'int24[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IBasePositionManager',
        name: 'posManager',
        type: 'address',
      },
      {
        internalType: 'contract IPoolStorage',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getTotalFeesOwedToPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: 'token0Owed',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'token1Owed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IBasePositionManager',
        name: 'posManager',
        type: 'address',
      },
      {
        internalType: 'contract IPoolStorage',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getTotalRTokensOwedToPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: 'rTokenOwed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class TickReader__factory {
  static readonly abi = _abi;
  static createInterface(): TickReaderInterface {
    return new utils.Interface(_abi) as TickReaderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TickReader {
    return new Contract(address, _abi, signerOrProvider) as TickReader;
  }
}
