/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { MakerProxyRegistry, MakerProxyRegistryInterface } from '../MakerProxyRegistry';

const _abi = [
  {
    constant: false,
    inputs: [],
    name: 'build',
    outputs: [
      {
        name: 'proxy',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {
        name: '',
        type: 'address',
      },
    ],
    name: 'proxies',
    outputs: [
      {
        name: '',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'build',
    outputs: [
      {
        name: 'proxy',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        name: 'factory_',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
];

export class MakerProxyRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): MakerProxyRegistryInterface {
    return new utils.Interface(_abi) as MakerProxyRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MakerProxyRegistry {
    return new Contract(address, _abi, signerOrProvider) as MakerProxyRegistry;
  }
}
