/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  BalancerAaveLinearPoolFactory,
  BalancerAaveLinearPoolFactoryInterface,
} from '../BalancerAaveLinearPoolFactory';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IVault',
        name: 'vault',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
    ],
    name: 'PoolCreated',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'contract IERC20',
        name: 'mainToken',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'wrappedToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'upperTarget',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'swapFeePercentage',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'create',
    outputs: [
      {
        internalType: 'contract LinearPool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCreationCode',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCreationCodeContracts',
    outputs: [
      {
        internalType: 'address',
        name: 'contractA',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'contractB',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPauseConfiguration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'pauseWindowDuration',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'bufferPeriodDuration',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVault',
    outputs: [
      {
        internalType: 'contract IVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
    ],
    name: 'isPoolFromFactory',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class BalancerAaveLinearPoolFactory__factory {
  static readonly abi = _abi;
  static createInterface(): BalancerAaveLinearPoolFactoryInterface {
    return new utils.Interface(_abi) as BalancerAaveLinearPoolFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BalancerAaveLinearPoolFactory {
    return new Contract(address, _abi, signerOrProvider) as BalancerAaveLinearPoolFactory;
  }
}
