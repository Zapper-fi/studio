{
  "address": "0x32848E2d3aeCFA7364595609FB050A301050A6B4",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdmAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "BuyUSDM",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "averagePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entryFundingRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        }
      ],
      "name": "ClosePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeUsd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeTokens",
          "type": "uint256"
        }
      ],
      "name": "CollectMarginFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeUsd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeTokens",
          "type": "uint256"
        }
      ],
      "name": "CollectSwapFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseGuaranteedUsd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreasePoolAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "DecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseReservedAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseUsdmAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DirectPoolDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseGuaranteedUsd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreasePoolAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "IncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseReservedAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseUsdmAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "markPrice",
          "type": "uint256"
        }
      ],
      "name": "LiquidatePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdmAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "SellUSDM",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutAfterFees",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundingRate",
          "type": "uint256"
        }
      ],
      "name": "UpdateFundingRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "hasProfit",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delta",
          "type": "uint256"
        }
      ],
      "name": "UpdatePnl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "averagePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entryFundingRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "markPrice",
          "type": "uint256"
        }
      ],
      "name": "UpdatePosition",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUNDING_RATE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FEE_BASIS_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FUNDING_RATE_FACTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_LIQUIDATION_FEE_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_FUNDING_RATE_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_LEVERAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDM_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "addRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenDiv",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenMul",
          "type": "address"
        }
      ],
      "name": "adjustForDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allWhitelistedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allWhitelistedTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedRouters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bufferAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "buyUSDM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "clearTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cumulativeFundingRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "decreasePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "directPoolDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "errorController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "errors",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feeReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingRateFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_averagePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_lastIncreasedTime",
          "type": "uint256"
        }
      ],
      "name": "getDelta",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getEntryFundingRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdmDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_increment",
          "type": "bool"
        }
      ],
      "name": "getFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_entryFundingRate",
          "type": "uint256"
        }
      ],
      "name": "getFundingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getGlobalShortDelta",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getMaxPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getMinPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_averagePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_nextPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lastIncreasedTime",
          "type": "uint256"
        }
      ],
      "name": "getNextAveragePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getNextFundingRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nextPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        }
      ],
      "name": "getNextGlobalShortAveragePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPositionDelta",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        }
      ],
      "name": "getPositionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPositionKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPositionLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdmAmount",
          "type": "uint256"
        }
      ],
      "name": "getRedemptionAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getRedemptionCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getRedemptionCollateralUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTargetUsdmAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUtilisation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "globalShortAveragePrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "globalShortSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "guaranteedUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasDynamicFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inManagerMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inPrivateLiquidationMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "includeAmmPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "increasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdm",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFeeUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fundingRateFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableFundingRateFactor",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLeverageEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLiquidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSwapEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastFundingTimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "liquidatePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationFeeUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marginFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxGlobalShortSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxUsdmAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minProfitBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minProfitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintBurnFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "averagePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "entryFundingRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "lastIncreasedTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "removeRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reservedAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "sellUSDM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setBufferAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_errorCode",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_error",
          "type": "string"
        }
      ],
      "name": "setError",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_errorController",
          "type": "address"
        }
      ],
      "name": "setErrorController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableTaxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintBurnFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableSwapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFeeUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasDynamicFees",
          "type": "bool"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fundingRateFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableFundingRateFactor",
          "type": "uint256"
        }
      ],
      "name": "setFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_inManagerMode",
          "type": "bool"
        }
      ],
      "name": "setInManagerMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_inPrivateLiquidationMode",
          "type": "bool"
        }
      ],
      "name": "setInPrivateLiquidationMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isSwapEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setLiquidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMaxGasPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMaxGlobalShortSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxLeverage",
          "type": "uint256"
        }
      ],
      "name": "setMaxLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenDecimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitBps",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUsdmAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isShortable",
          "type": "bool"
        }
      ],
      "name": "setTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setUsdmAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IVaultUtils",
          "name": "_vaultUtils",
          "type": "address"
        }
      ],
      "name": "setVaultUtils",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shortableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableFundingRateFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableSwapFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableTaxBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "tokenToUsdMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokenWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        }
      ],
      "name": "updateCumulativeFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "upgradeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "usdToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "usdToTokenMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "usdToTokenMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdm",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usdmAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useSwapPricing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_raise",
          "type": "bool"
        }
      ],
      "name": "validateLiquidation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultUtils",
      "outputs": [
        {
          "internalType": "contract IVaultUtils",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistedTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd8694bade2cc50fec8851618fd1bf5bc963fef15e8af79eaa80e88ba094c3d49",
  "receipt": {
    "to": null,
    "from": "0xf9D6D1Bff8A32e908768AfD1489E9546dEbdBB35",
    "contractAddress": "0x32848E2d3aeCFA7364595609FB050A301050A6B4",
    "transactionIndex": 27,
    "gasUsed": "5618122",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000008000000000000000000000000000000080000000000000000000000000800000000000000000000108000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000800000000000080000200000000000000000000000000000000000000000000000000000000000004000000000000000000001000000000000000000000000000000100000000000000000000000000001000000000000000000000000000000000000000000100000",
    "blockHash": "0xdff6d0ec61cb6b64fbc5e4a2b90371f677d94f6b8d65657606e17d094ec49780",
    "transactionHash": "0xd8694bade2cc50fec8851618fd1bf5bc963fef15e8af79eaa80e88ba094c3d49",
    "logs": [
      {
        "transactionIndex": 27,
        "blockNumber": 29023940,
        "transactionHash": "0xd8694bade2cc50fec8851618fd1bf5bc963fef15e8af79eaa80e88ba094c3d49",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000f9d6d1bff8a32e908768afd1489e9546debdbb35",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000485a7d37dad277400000000000000000000000000000000000000000000000132f4df1506dddeac00000000000000000000000000000000000000000000028a77efdc0d4cafad490000000000000000000000000000000000000000000000012e6f37418930b73800000000000000000000000000000000000000000000028a7c7583e0ca5cd4bd",
        "logIndex": 95,
        "blockHash": "0xdff6d0ec61cb6b64fbc5e4a2b90371f677d94f6b8d65657606e17d094ec49780"
      }
    ],
    "blockNumber": 29023940,
    "cumulativeGasUsed": "11741842",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e209661f29d00618346afafa2997b989",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdmAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"BuyUSDM\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"}],\"name\":\"ClosePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeUsd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeTokens\",\"type\":\"uint256\"}],\"name\":\"CollectMarginFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeUsd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeTokens\",\"type\":\"uint256\"}],\"name\":\"CollectSwapFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseGuaranteedUsd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreasePoolAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"DecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseReservedAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseUsdmAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DirectPoolDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseGuaranteedUsd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreasePoolAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"IncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseReservedAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseUsdmAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"markPrice\",\"type\":\"uint256\"}],\"name\":\"LiquidatePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdmAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"SellUSDM\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutAfterFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundingRate\",\"type\":\"uint256\"}],\"name\":\"UpdateFundingRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProfit\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delta\",\"type\":\"uint256\"}],\"name\":\"UpdatePnl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"markPrice\",\"type\":\"uint256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FUNDING_RATE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUNDING_RATE_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LIQUIDATION_FEE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_FUNDING_RATE_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LEVERAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDM_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"addRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenDiv\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenMul\",\"type\":\"address\"}],\"name\":\"adjustForDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allWhitelistedTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedRouters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bufferAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"buyUSDM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"clearTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeFundingRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"decreasePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"directPoolDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"errorController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"errors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingRateFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastIncreasedTime\",\"type\":\"uint256\"}],\"name\":\"getDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getEntryFundingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdmDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_increment\",\"type\":\"bool\"}],\"name\":\"getFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_entryFundingRate\",\"type\":\"uint256\"}],\"name\":\"getFundingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getGlobalShortDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMaxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMinPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_nextPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastIncreasedTime\",\"type\":\"uint256\"}],\"name\":\"getNextAveragePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getNextFundingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nextPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"}],\"name\":\"getNextGlobalShortAveragePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"}],\"name\":\"getPositionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdmAmount\",\"type\":\"uint256\"}],\"name\":\"getRedemptionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRedemptionCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRedemptionCollateralUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTargetUsdmAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUtilisation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"globalShortAveragePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"globalShortSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guaranteedUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDynamicFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inManagerMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inPrivateLiquidationMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"includeAmmPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFeeUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingRateFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableFundingRateFactor\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLeverageEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSwapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastFundingTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"liquidatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationFeeUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marginFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxGlobalShortSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxUsdmAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minProfitBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minProfitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintBurnFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastIncreasedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"removeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reservedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"sellUSDM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setBufferAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_errorCode\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_error\",\"type\":\"string\"}],\"name\":\"setError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_errorController\",\"type\":\"address\"}],\"name\":\"setErrorController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableTaxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintBurnFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableSwapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFeeUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasDynamicFees\",\"type\":\"bool\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingRateFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableFundingRateFactor\",\"type\":\"uint256\"}],\"name\":\"setFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_inManagerMode\",\"type\":\"bool\"}],\"name\":\"setInManagerMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_inPrivateLiquidationMode\",\"type\":\"bool\"}],\"name\":\"setInPrivateLiquidationMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isSwapEnabled\",\"type\":\"bool\"}],\"name\":\"setIsSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setLiquidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isManager\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMaxGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMaxGlobalShortSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxLeverage\",\"type\":\"uint256\"}],\"name\":\"setMaxLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUsdmAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isShortable\",\"type\":\"bool\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setUsdmAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVaultUtils\",\"name\":\"_vaultUtils\",\"type\":\"address\"}],\"name\":\"setVaultUtils\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shortableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableFundingRateFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableSwapFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableTaxBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"tokenToUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokenWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"}],\"name\":\"updateCumulativeFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"upgradeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"usdToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"usdToTokenMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"usdToTokenMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdm\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usdmAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useSwapPricing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_raise\",\"type\":\"bool\"}],\"name\":\"validateLiquidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultUtils\",\"outputs\":[{\"internalType\":\"contract IVaultUtils\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistedTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\nimport \\\"../libraries/token/IERC20.sol\\\";\\nimport \\\"../libraries/token/SafeERC20.sol\\\";\\nimport \\\"../libraries/utils/ReentrancyGuard.sol\\\";\\n\\nimport \\\"../tokens/interfaces/IUSDM.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IVaultUtils.sol\\\";\\nimport \\\"./interfaces/IVaultPriceFeed.sol\\\";\\n\\ncontract Vault is ReentrancyGuard, IVault {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    struct Position {\\n        uint256 size;\\n        uint256 collateral;\\n        uint256 averagePrice;\\n        uint256 entryFundingRate;\\n        uint256 reserveAmount;\\n        int256 realisedPnl;\\n        uint256 lastIncreasedTime;\\n    }\\n\\n    uint256 public constant BASIS_POINTS_DIVISOR = 10000;\\n    uint256 public constant FUNDING_RATE_PRECISION = 1000000;\\n    uint256 public constant PRICE_PRECISION = 10**30;\\n    uint256 public constant MIN_LEVERAGE = 10000; // 1x\\n    uint256 public constant USDM_DECIMALS = 18;\\n    uint256 public constant MAX_FEE_BASIS_POINTS = 500; // 5%\\n    uint256 public constant MAX_LIQUIDATION_FEE_USD = 100 * PRICE_PRECISION; // 100 USD\\n    uint256 public constant MIN_FUNDING_RATE_INTERVAL = 1 hours;\\n    uint256 public constant MAX_FUNDING_RATE_FACTOR = 10000; // 1%\\n\\n    bool public override isInitialized;\\n    bool public override isSwapEnabled = true;\\n    bool public override isLeverageEnabled = true;\\n\\n    IVaultUtils public vaultUtils;\\n\\n    address public errorController;\\n\\n    address public override router;\\n    address public override priceFeed;\\n\\n    address public override usdm;\\n    address public override gov;\\n\\n    uint256 public override whitelistedTokenCount;\\n\\n    uint256 public override maxLeverage = 50 * 10000; // 50x\\n\\n    uint256 public override liquidationFeeUsd;\\n    uint256 public override taxBasisPoints = 50; // 0.5%\\n    uint256 public override stableTaxBasisPoints = 20; // 0.2%\\n    uint256 public override mintBurnFeeBasisPoints = 30; // 0.3%\\n    uint256 public override swapFeeBasisPoints = 30; // 0.3%\\n    uint256 public override stableSwapFeeBasisPoints = 4; // 0.04%\\n    uint256 public override marginFeeBasisPoints = 10; // 0.1%\\n\\n    uint256 public override minProfitTime;\\n    bool public override hasDynamicFees = false;\\n\\n    uint256 public override fundingInterval = 8 hours;\\n    uint256 public override fundingRateFactor;\\n    uint256 public override stableFundingRateFactor;\\n    uint256 public override totalTokenWeights;\\n\\n    bool public includeAmmPrice = true;\\n    bool public useSwapPricing = false;\\n\\n    bool public override inManagerMode = false;\\n    bool public override inPrivateLiquidationMode = false;\\n\\n    uint256 public override maxGasPrice;\\n\\n    mapping(address => mapping(address => bool)) public override approvedRouters;\\n    mapping(address => bool) public override isLiquidator;\\n    mapping(address => bool) public override isManager;\\n\\n    address[] public override allWhitelistedTokens;\\n\\n    mapping(address => bool) public override whitelistedTokens;\\n    mapping(address => uint256) public override tokenDecimals;\\n    mapping(address => uint256) public override minProfitBasisPoints;\\n    mapping(address => bool) public override stableTokens;\\n    mapping(address => bool) public override shortableTokens;\\n\\n    // tokenBalances is used only to determine _transferIn values\\n    mapping(address => uint256) public override tokenBalances;\\n\\n    // tokenWeights allows customisation of index composition\\n    mapping(address => uint256) public override tokenWeights;\\n\\n    // usdmAmounts tracks the amount of USDM debt for each whitelisted token\\n    mapping(address => uint256) public override usdmAmounts;\\n\\n    // maxUsdmAmounts allows setting a max amount of USDM debt for a token\\n    mapping(address => uint256) public override maxUsdmAmounts;\\n\\n    // poolAmounts tracks the number of received tokens that can be used for leverage\\n    // this is tracked separately from tokenBalances to exclude funds that are deposited as margin collateral\\n    mapping(address => uint256) public override poolAmounts;\\n\\n    // reservedAmounts tracks the number of tokens reserved for open leverage positions\\n    mapping(address => uint256) public override reservedAmounts;\\n\\n    // bufferAmounts allows specification of an amount to exclude from swaps\\n    // this can be used to ensure a certain amount of liquidity is available for leverage positions\\n    mapping(address => uint256) public override bufferAmounts;\\n\\n    // guaranteedUsd tracks the amount of USD that is \\\"guaranteed\\\" by opened leverage positions\\n    // this value is used to calculate the redemption values for selling of USDM\\n    // this is an estimated amount, it is possible for the actual guaranteed value to be lower\\n    // in the case of sudden price decreases, the guaranteed value should be corrected\\n    // after liquidations are carried out\\n    mapping(address => uint256) public override guaranteedUsd;\\n\\n    // cumulativeFundingRates tracks the funding rates based on utilization\\n    mapping(address => uint256) public override cumulativeFundingRates;\\n    // lastFundingTimes tracks the last time funding was updated for a token\\n    mapping(address => uint256) public override lastFundingTimes;\\n\\n    // positions tracks all open positions\\n    mapping(bytes32 => Position) public positions;\\n\\n    // feeReserves tracks the amount of fees per token\\n    mapping(address => uint256) public override feeReserves;\\n\\n    mapping(address => uint256) public override globalShortSizes;\\n    mapping(address => uint256) public override globalShortAveragePrices;\\n    mapping(address => uint256) public override maxGlobalShortSizes;\\n\\n    mapping(uint256 => string) public errors;\\n\\n    event BuyUSDM(address account, address token, uint256 tokenAmount, uint256 usdmAmount, uint256 feeBasisPoints);\\n    event SellUSDM(address account, address token, uint256 usdmAmount, uint256 tokenAmount, uint256 feeBasisPoints);\\n    event Swap(address account, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut, uint256 amountOutAfterFees, uint256 feeBasisPoints);\\n\\n    event IncreasePosition(\\n        bytes32 key,\\n        address account,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 price,\\n        uint256 fee\\n    );\\n    event DecreasePosition(\\n        bytes32 key,\\n        address account,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 price,\\n        uint256 fee\\n    );\\n    event LiquidatePosition(\\n        bytes32 key,\\n        address account,\\n        address collateralToken,\\n        address indexToken,\\n        bool isLong,\\n        uint256 size,\\n        uint256 collateral,\\n        uint256 reserveAmount,\\n        int256 realisedPnl,\\n        uint256 markPrice\\n    );\\n    event UpdatePosition(\\n        bytes32 key,\\n        uint256 size,\\n        uint256 collateral,\\n        uint256 averagePrice,\\n        uint256 entryFundingRate,\\n        uint256 reserveAmount,\\n        int256 realisedPnl,\\n        uint256 markPrice\\n    );\\n    event ClosePosition(bytes32 key, uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl);\\n\\n    event UpdateFundingRate(address token, uint256 fundingRate);\\n    event UpdatePnl(bytes32 key, bool hasProfit, uint256 delta);\\n\\n    event CollectSwapFees(address token, uint256 feeUsd, uint256 feeTokens);\\n    event CollectMarginFees(address token, uint256 feeUsd, uint256 feeTokens);\\n\\n    event DirectPoolDeposit(address token, uint256 amount);\\n    event IncreasePoolAmount(address token, uint256 amount);\\n    event DecreasePoolAmount(address token, uint256 amount);\\n    event IncreaseUsdmAmount(address token, uint256 amount);\\n    event DecreaseUsdmAmount(address token, uint256 amount);\\n    event IncreaseReservedAmount(address token, uint256 amount);\\n    event DecreaseReservedAmount(address token, uint256 amount);\\n    event IncreaseGuaranteedUsd(address token, uint256 amount);\\n    event DecreaseGuaranteedUsd(address token, uint256 amount);\\n\\n    // once the parameters are verified to be working correctly,\\n    // gov should be set to a timelock contract or a governance contract\\n    constructor() public {\\n        gov = msg.sender;\\n    }\\n\\n    function initialize(\\n        address _router,\\n        address _usdm,\\n        address _priceFeed,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _fundingRateFactor,\\n        uint256 _stableFundingRateFactor\\n    ) external {\\n        _onlyGov();\\n        _validate(!isInitialized, 1);\\n        isInitialized = true;\\n\\n        router = _router;\\n        usdm = _usdm;\\n        priceFeed = _priceFeed;\\n        liquidationFeeUsd = _liquidationFeeUsd;\\n        fundingRateFactor = _fundingRateFactor;\\n        stableFundingRateFactor = _stableFundingRateFactor;\\n    }\\n\\n    function setVaultUtils(IVaultUtils _vaultUtils) external override {\\n        _onlyGov();\\n        vaultUtils = _vaultUtils;\\n    }\\n\\n    function setErrorController(address _errorController) external {\\n        _onlyGov();\\n        errorController = _errorController;\\n    }\\n\\n    function setError(uint256 _errorCode, string calldata _error) external override {\\n        require(msg.sender == errorController, \\\"Vault: invalid errorController\\\");\\n        errors[_errorCode] = _error;\\n    }\\n\\n    function allWhitelistedTokensLength() external view override returns (uint256) {\\n        return allWhitelistedTokens.length;\\n    }\\n\\n    function setInManagerMode(bool _inManagerMode) external override {\\n        _onlyGov();\\n        inManagerMode = _inManagerMode;\\n    }\\n\\n    function setManager(address _manager, bool _isManager) external override {\\n        _onlyGov();\\n        isManager[_manager] = _isManager;\\n    }\\n\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external override {\\n        _onlyGov();\\n        inPrivateLiquidationMode = _inPrivateLiquidationMode;\\n    }\\n\\n    function setLiquidator(address _liquidator, bool _isActive) external override {\\n        _onlyGov();\\n        isLiquidator[_liquidator] = _isActive;\\n    }\\n\\n    function setIsSwapEnabled(bool _isSwapEnabled) external override {\\n        _onlyGov();\\n        isSwapEnabled = _isSwapEnabled;\\n    }\\n\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external override {\\n        _onlyGov();\\n        isLeverageEnabled = _isLeverageEnabled;\\n    }\\n\\n    function setMaxGasPrice(uint256 _maxGasPrice) external override {\\n        _onlyGov();\\n        maxGasPrice = _maxGasPrice;\\n    }\\n\\n    function setGov(address _gov) external {\\n        _onlyGov();\\n        gov = _gov;\\n    }\\n\\n    function setPriceFeed(address _priceFeed) external override {\\n        _onlyGov();\\n        priceFeed = _priceFeed;\\n    }\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external override {\\n        _onlyGov();\\n        _validate(_maxLeverage > MIN_LEVERAGE, 2);\\n        maxLeverage = _maxLeverage;\\n    }\\n\\n    function setBufferAmount(address _token, uint256 _amount) external override {\\n        _onlyGov();\\n        bufferAmounts[_token] = _amount;\\n    }\\n\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external override {\\n        _onlyGov();\\n        maxGlobalShortSizes[_token] = _amount;\\n    }\\n\\n    function setFees(\\n        uint256 _taxBasisPoints,\\n        uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _minProfitTime,\\n        bool _hasDynamicFees\\n    ) external override {\\n        _onlyGov();\\n        _validate(_taxBasisPoints <= MAX_FEE_BASIS_POINTS, 3);\\n        _validate(_stableTaxBasisPoints <= MAX_FEE_BASIS_POINTS, 4);\\n        _validate(_mintBurnFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 5);\\n        _validate(_swapFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 6);\\n        _validate(_stableSwapFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 7);\\n        _validate(_marginFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 8);\\n        _validate(_liquidationFeeUsd <= MAX_LIQUIDATION_FEE_USD, 9);\\n        taxBasisPoints = _taxBasisPoints;\\n        stableTaxBasisPoints = _stableTaxBasisPoints;\\n        mintBurnFeeBasisPoints = _mintBurnFeeBasisPoints;\\n        swapFeeBasisPoints = _swapFeeBasisPoints;\\n        stableSwapFeeBasisPoints = _stableSwapFeeBasisPoints;\\n        marginFeeBasisPoints = _marginFeeBasisPoints;\\n        liquidationFeeUsd = _liquidationFeeUsd;\\n        minProfitTime = _minProfitTime;\\n        hasDynamicFees = _hasDynamicFees;\\n    }\\n\\n    function setFundingRate(\\n        uint256 _fundingInterval,\\n        uint256 _fundingRateFactor,\\n        uint256 _stableFundingRateFactor\\n    ) external override {\\n        _onlyGov();\\n        _validate(_fundingInterval >= MIN_FUNDING_RATE_INTERVAL, 10);\\n        _validate(_fundingRateFactor <= MAX_FUNDING_RATE_FACTOR, 11);\\n        _validate(_stableFundingRateFactor <= MAX_FUNDING_RATE_FACTOR, 12);\\n        fundingInterval = _fundingInterval;\\n        fundingRateFactor = _fundingRateFactor;\\n        stableFundingRateFactor = _stableFundingRateFactor;\\n    }\\n\\n    function setTokenConfig(\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _tokenWeight,\\n        uint256 _minProfitBps,\\n        uint256 _maxUsdmAmount,\\n        bool _isStable,\\n        bool _isShortable\\n    ) external override {\\n        _onlyGov();\\n        // increment token count for the first time\\n        if (!whitelistedTokens[_token]) {\\n            whitelistedTokenCount = whitelistedTokenCount.add(1);\\n            allWhitelistedTokens.push(_token);\\n        }\\n\\n        uint256 _totalTokenWeights = totalTokenWeights;\\n        _totalTokenWeights = _totalTokenWeights.sub(tokenWeights[_token]);\\n\\n        whitelistedTokens[_token] = true;\\n        tokenDecimals[_token] = _tokenDecimals;\\n        tokenWeights[_token] = _tokenWeight;\\n        minProfitBasisPoints[_token] = _minProfitBps;\\n        maxUsdmAmounts[_token] = _maxUsdmAmount;\\n        stableTokens[_token] = _isStable;\\n        shortableTokens[_token] = _isShortable;\\n\\n        totalTokenWeights = _totalTokenWeights.add(_tokenWeight);\\n\\n        // validate price feed\\n        getMaxPrice(_token);\\n    }\\n\\n    function clearTokenConfig(address _token) external {\\n        _onlyGov();\\n        _validate(whitelistedTokens[_token], 13);\\n        totalTokenWeights = totalTokenWeights.sub(tokenWeights[_token]);\\n        delete whitelistedTokens[_token];\\n        delete tokenDecimals[_token];\\n        delete tokenWeights[_token];\\n        delete minProfitBasisPoints[_token];\\n        delete maxUsdmAmounts[_token];\\n        delete stableTokens[_token];\\n        delete shortableTokens[_token];\\n        whitelistedTokenCount = whitelistedTokenCount.sub(1);\\n    }\\n\\n    function withdrawFees(address _token, address _receiver) external override returns (uint256) {\\n        _onlyGov();\\n        uint256 amount = feeReserves[_token];\\n        if (amount == 0) {\\n            return 0;\\n        }\\n        feeReserves[_token] = 0;\\n        _transferOut(_token, amount, _receiver);\\n        return amount;\\n    }\\n\\n    function addRouter(address _router) external {\\n        approvedRouters[msg.sender][_router] = true;\\n    }\\n\\n    function removeRouter(address _router) external {\\n        approvedRouters[msg.sender][_router] = false;\\n    }\\n\\n    function setUsdmAmount(address _token, uint256 _amount) external override {\\n        _onlyGov();\\n\\n        uint256 usdmAmount = usdmAmounts[_token];\\n        if (_amount > usdmAmount) {\\n            _increaseUsdmAmount(_token, _amount.sub(usdmAmount));\\n            return;\\n        }\\n\\n        _decreaseUsdmAmount(_token, usdmAmount.sub(_amount));\\n    }\\n\\n    // the governance controlling this function should have a timelock\\n    function upgradeVault(\\n        address _newVault,\\n        address _token,\\n        uint256 _amount\\n    ) external {\\n        _onlyGov();\\n        IERC20(_token).safeTransfer(_newVault, _amount);\\n    }\\n\\n    // deposit into the pool without minting USDM tokens\\n    // useful in allowing the pool to become over-collaterised\\n    function directPoolDeposit(address _token) external override nonReentrant {\\n        _validate(whitelistedTokens[_token], 14);\\n        uint256 tokenAmount = _transferIn(_token);\\n        _validate(tokenAmount > 0, 15);\\n        _increasePoolAmount(_token, tokenAmount);\\n        emit DirectPoolDeposit(_token, tokenAmount);\\n    }\\n\\n    function buyUSDM(address _token, address _receiver) external override nonReentrant returns (uint256) {\\n        _validateManager();\\n        _validate(whitelistedTokens[_token], 16);\\n        useSwapPricing = true;\\n\\n        uint256 tokenAmount = _transferIn(_token);\\n        _validate(tokenAmount > 0, 17);\\n\\n        updateCumulativeFundingRate(_token, _token);\\n\\n        uint256 price = getMinPrice(_token);\\n\\n        uint256 usdmAmount = tokenAmount.mul(price).div(PRICE_PRECISION);\\n        usdmAmount = adjustForDecimals(usdmAmount, _token, usdm);\\n        _validate(usdmAmount > 0, 18);\\n\\n        uint256 feeBasisPoints = vaultUtils.getBuyUsdmFeeBasisPoints(_token, usdmAmount);\\n        uint256 amountAfterFees = _collectSwapFees(_token, tokenAmount, feeBasisPoints);\\n        uint256 mintAmount = amountAfterFees.mul(price).div(PRICE_PRECISION);\\n        mintAmount = adjustForDecimals(mintAmount, _token, usdm);\\n\\n        _increaseUsdmAmount(_token, mintAmount);\\n        _increasePoolAmount(_token, amountAfterFees);\\n\\n        IUSDM(usdm).mint(_receiver, mintAmount);\\n\\n        emit BuyUSDM(_receiver, _token, tokenAmount, mintAmount, feeBasisPoints);\\n\\n        useSwapPricing = false;\\n        return mintAmount;\\n    }\\n\\n    function sellUSDM(address _token, address _receiver) external override nonReentrant returns (uint256) {\\n        _validateManager();\\n        _validate(whitelistedTokens[_token], 19);\\n        useSwapPricing = true;\\n\\n        uint256 usdmAmount = _transferIn(usdm);\\n        _validate(usdmAmount > 0, 20);\\n\\n        updateCumulativeFundingRate(_token, _token);\\n\\n        uint256 redemptionAmount = getRedemptionAmount(_token, usdmAmount);\\n        _validate(redemptionAmount > 0, 21);\\n\\n        _decreaseUsdmAmount(_token, usdmAmount);\\n        _decreasePoolAmount(_token, redemptionAmount);\\n\\n        IUSDM(usdm).burn(address(this), usdmAmount);\\n\\n        // the _transferIn call increased the value of tokenBalances[usdm]\\n        // usually decreases in token balances are synced by calling _transferOut\\n        // however, for usdm, the tokens are burnt, so _updateTokenBalance should\\n        // be manually called to record the decrease in tokens\\n        _updateTokenBalance(usdm);\\n\\n        uint256 feeBasisPoints = vaultUtils.getSellUsdmFeeBasisPoints(_token, usdmAmount);\\n        uint256 amountOut = _collectSwapFees(_token, redemptionAmount, feeBasisPoints);\\n        _validate(amountOut > 0, 22);\\n\\n        _transferOut(_token, amountOut, _receiver);\\n\\n        emit SellUSDM(_receiver, _token, usdmAmount, amountOut, feeBasisPoints);\\n\\n        useSwapPricing = false;\\n        return amountOut;\\n    }\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _receiver\\n    ) external override nonReentrant returns (uint256) {\\n        _validate(isSwapEnabled, 23);\\n        _validate(whitelistedTokens[_tokenIn], 24);\\n        _validate(whitelistedTokens[_tokenOut], 25);\\n        _validate(_tokenIn != _tokenOut, 26);\\n\\n        useSwapPricing = true;\\n\\n        updateCumulativeFundingRate(_tokenIn, _tokenIn);\\n        updateCumulativeFundingRate(_tokenOut, _tokenOut);\\n\\n        uint256 amountIn = _transferIn(_tokenIn);\\n        _validate(amountIn > 0, 27);\\n\\n        uint256 priceIn = getMinPrice(_tokenIn);\\n        uint256 priceOut = getMaxPrice(_tokenOut);\\n\\n        uint256 amountOut = amountIn.mul(priceIn).div(priceOut);\\n        amountOut = adjustForDecimals(amountOut, _tokenIn, _tokenOut);\\n\\n        // adjust usdmAmounts by the same usdmAmount as debt is shifted between the assets\\n        uint256 usdmAmount = amountIn.mul(priceIn).div(PRICE_PRECISION);\\n        usdmAmount = adjustForDecimals(usdmAmount, _tokenIn, usdm);\\n\\n        uint256 feeBasisPoints = vaultUtils.getSwapFeeBasisPoints(_tokenIn, _tokenOut, usdmAmount);\\n        uint256 amountOutAfterFees = _collectSwapFees(_tokenOut, amountOut, feeBasisPoints);\\n\\n        _increaseUsdmAmount(_tokenIn, usdmAmount);\\n        _decreaseUsdmAmount(_tokenOut, usdmAmount);\\n\\n        _increasePoolAmount(_tokenIn, amountIn);\\n        _decreasePoolAmount(_tokenOut, amountOut);\\n\\n        _validateBufferAmount(_tokenOut);\\n\\n        _transferOut(_tokenOut, amountOutAfterFees, _receiver);\\n\\n        emit Swap(_receiver, _tokenIn, _tokenOut, amountIn, amountOut, amountOutAfterFees, feeBasisPoints);\\n\\n        useSwapPricing = false;\\n        return amountOutAfterFees;\\n    }\\n\\n    function increasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external override nonReentrant {\\n        _validate(isLeverageEnabled, 28);\\n        _validateGasPrice();\\n        _validateRouter(_account);\\n        _validateTokens(_collateralToken, _indexToken, _isLong);\\n        vaultUtils.validateIncreasePosition(_account, _collateralToken, _indexToken, _sizeDelta, _isLong);\\n\\n        updateCumulativeFundingRate(_collateralToken, _indexToken);\\n\\n        bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n        Position storage position = positions[key];\\n\\n        uint256 price = _isLong ? getMaxPrice(_indexToken) : getMinPrice(_indexToken);\\n\\n        if (position.size == 0) {\\n            position.averagePrice = price;\\n        }\\n\\n        if (position.size > 0 && _sizeDelta > 0) {\\n            position.averagePrice = getNextAveragePrice(_indexToken, position.size, position.averagePrice, _isLong, price, _sizeDelta, position.lastIncreasedTime);\\n        }\\n\\n        uint256 fee = _collectMarginFees(_account, _collateralToken, _indexToken, _isLong, _sizeDelta, position.size, position.entryFundingRate);\\n        uint256 collateralDelta = _transferIn(_collateralToken);\\n        uint256 collateralDeltaUsd = tokenToUsdMin(_collateralToken, collateralDelta);\\n\\n        position.collateral = position.collateral.add(collateralDeltaUsd);\\n        _validate(position.collateral >= fee, 29);\\n\\n        position.collateral = position.collateral.sub(fee);\\n        position.entryFundingRate = getEntryFundingRate(_collateralToken, _indexToken, _isLong);\\n        position.size = position.size.add(_sizeDelta);\\n        position.lastIncreasedTime = block.timestamp;\\n\\n        _validate(position.size > 0, 30);\\n        _validatePosition(position.size, position.collateral);\\n        validateLiquidation(_account, _collateralToken, _indexToken, _isLong, true);\\n\\n        // reserve tokens to pay profits on the position\\n        uint256 reserveDelta = usdToTokenMax(_collateralToken, _sizeDelta);\\n        position.reserveAmount = position.reserveAmount.add(reserveDelta);\\n        _increaseReservedAmount(_collateralToken, reserveDelta);\\n\\n        if (_isLong) {\\n            // guaranteedUsd stores the sum of (position.size - position.collateral) for all positions\\n            // if a fee is charged on the collateral then guaranteedUsd should be increased by that fee amount\\n            // since (position.size - position.collateral) would have increased by `fee`\\n            _increaseGuaranteedUsd(_collateralToken, _sizeDelta.add(fee));\\n            _decreaseGuaranteedUsd(_collateralToken, collateralDeltaUsd);\\n            // treat the deposited collateral as part of the pool\\n            _increasePoolAmount(_collateralToken, collateralDelta);\\n            // fees need to be deducted from the pool since fees are deducted from position.collateral\\n            // and collateral is treated as part of the pool\\n            _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, fee));\\n        } else {\\n            if (globalShortSizes[_indexToken] == 0) {\\n                globalShortAveragePrices[_indexToken] = price;\\n            } else {\\n                globalShortAveragePrices[_indexToken] = getNextGlobalShortAveragePrice(_indexToken, price, _sizeDelta);\\n            }\\n\\n            _increaseGlobalShortSize(_indexToken, _sizeDelta);\\n        }\\n\\n        emit IncreasePosition(key, _account, _collateralToken, _indexToken, collateralDeltaUsd, _sizeDelta, _isLong, price, fee);\\n        emit UpdatePosition(key, position.size, position.collateral, position.averagePrice, position.entryFundingRate, position.reserveAmount, position.realisedPnl, price);\\n    }\\n\\n    function decreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external override nonReentrant returns (uint256) {\\n        _validateGasPrice();\\n        _validateRouter(_account);\\n        return _decreasePosition(_account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver);\\n    }\\n\\n    function _decreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) private returns (uint256) {\\n        vaultUtils.validateDecreasePosition(_account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver);\\n        updateCumulativeFundingRate(_collateralToken, _indexToken);\\n\\n        bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n        Position storage position = positions[key];\\n        _validate(position.size > 0, 31);\\n        _validate(position.size >= _sizeDelta, 32);\\n        _validate(position.collateral >= _collateralDelta, 33);\\n\\n        uint256 collateral = position.collateral;\\n        // scrop variables to avoid stack too deep errors\\n        {\\n            uint256 reserveDelta = position.reserveAmount.mul(_sizeDelta).div(position.size);\\n            position.reserveAmount = position.reserveAmount.sub(reserveDelta);\\n            _decreaseReservedAmount(_collateralToken, reserveDelta);\\n        }\\n\\n        (uint256 usdOut, uint256 usdOutAfterFee) = _reduceCollateral(_account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong);\\n\\n        if (position.size != _sizeDelta) {\\n            position.entryFundingRate = getEntryFundingRate(_collateralToken, _indexToken, _isLong);\\n            position.size = position.size.sub(_sizeDelta);\\n\\n            _validatePosition(position.size, position.collateral);\\n            validateLiquidation(_account, _collateralToken, _indexToken, _isLong, true);\\n\\n            if (_isLong) {\\n                _increaseGuaranteedUsd(_collateralToken, collateral.sub(position.collateral));\\n                _decreaseGuaranteedUsd(_collateralToken, _sizeDelta);\\n            }\\n\\n            uint256 price = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n            emit DecreasePosition(key, _account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, price, usdOut.sub(usdOutAfterFee));\\n            emit UpdatePosition(key, position.size, position.collateral, position.averagePrice, position.entryFundingRate, position.reserveAmount, position.realisedPnl, price);\\n        } else {\\n            if (_isLong) {\\n                _increaseGuaranteedUsd(_collateralToken, collateral);\\n                _decreaseGuaranteedUsd(_collateralToken, _sizeDelta);\\n            }\\n\\n            uint256 price = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n            emit DecreasePosition(key, _account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, price, usdOut.sub(usdOutAfterFee));\\n            emit ClosePosition(key, position.size, position.collateral, position.averagePrice, position.entryFundingRate, position.reserveAmount, position.realisedPnl);\\n\\n            delete positions[key];\\n        }\\n\\n        if (!_isLong) {\\n            _decreaseGlobalShortSize(_indexToken, _sizeDelta);\\n        }\\n\\n        if (usdOut > 0) {\\n            if (_isLong) {\\n                _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, usdOut));\\n            }\\n            uint256 amountOutAfterFees = usdToTokenMin(_collateralToken, usdOutAfterFee);\\n            _transferOut(_collateralToken, amountOutAfterFees, _receiver);\\n            return amountOutAfterFees;\\n        }\\n\\n        return 0;\\n    }\\n\\n    function liquidatePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        address _feeReceiver\\n    ) external override nonReentrant {\\n        if (inPrivateLiquidationMode) {\\n            _validate(isLiquidator[msg.sender], 34);\\n        }\\n\\n        // set includeAmmPrice to false to prevent manipulated liquidations\\n        includeAmmPrice = false;\\n\\n        updateCumulativeFundingRate(_collateralToken, _indexToken);\\n\\n        bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n        Position memory position = positions[key];\\n        _validate(position.size > 0, 35);\\n\\n        (uint256 liquidationState, uint256 marginFees) = validateLiquidation(_account, _collateralToken, _indexToken, _isLong, false);\\n        _validate(liquidationState != 0, 36);\\n        if (liquidationState == 2) {\\n            // max leverage exceeded but there is collateral remaining after deducting losses so decreasePosition instead\\n            _decreasePosition(_account, _collateralToken, _indexToken, 0, position.size, _isLong, _account);\\n            includeAmmPrice = true;\\n            return;\\n        }\\n\\n        uint256 feeTokens = usdToTokenMin(_collateralToken, marginFees);\\n        feeReserves[_collateralToken] = feeReserves[_collateralToken].add(feeTokens);\\n        emit CollectMarginFees(_collateralToken, marginFees, feeTokens);\\n\\n        _decreaseReservedAmount(_collateralToken, position.reserveAmount);\\n        if (_isLong) {\\n            _decreaseGuaranteedUsd(_collateralToken, position.size.sub(position.collateral));\\n            _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, marginFees));\\n        }\\n\\n        uint256 markPrice = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n        emit LiquidatePosition(key, _account, _collateralToken, _indexToken, _isLong, position.size, position.collateral, position.reserveAmount, position.realisedPnl, markPrice);\\n\\n        if (!_isLong && marginFees < position.collateral) {\\n            uint256 remainingCollateral = position.collateral.sub(marginFees);\\n            _increasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, remainingCollateral));\\n        }\\n\\n        if (!_isLong) {\\n            _decreaseGlobalShortSize(_indexToken, position.size);\\n        }\\n\\n        delete positions[key];\\n\\n        // pay the fee receiver using the pool, we assume that in general the liquidated amount should be sufficient to cover\\n        // the liquidation fees\\n        _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, liquidationFeeUsd));\\n        _transferOut(_collateralToken, usdToTokenMin(_collateralToken, liquidationFeeUsd), _feeReceiver);\\n\\n        includeAmmPrice = true;\\n    }\\n\\n    // validateLiquidation returns (state, fees)\\n    function validateLiquidation(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        bool _raise\\n    ) public view returns (uint256, uint256) {\\n        return vaultUtils.validateLiquidation(_account, _collateralToken, _indexToken, _isLong, _raise);\\n    }\\n\\n    function getMaxPrice(address _token) public view override returns (uint256) {\\n        return IVaultPriceFeed(priceFeed).getPrice(_token, true, includeAmmPrice, useSwapPricing);\\n    }\\n\\n    function getMinPrice(address _token) public view override returns (uint256) {\\n        return IVaultPriceFeed(priceFeed).getPrice(_token, false, includeAmmPrice, useSwapPricing);\\n    }\\n\\n    function getRedemptionAmount(address _token, uint256 _usdmAmount) public view override returns (uint256) {\\n        uint256 price = getMaxPrice(_token);\\n        uint256 redemptionAmount = _usdmAmount.mul(PRICE_PRECISION).div(price);\\n        return adjustForDecimals(redemptionAmount, usdm, _token);\\n    }\\n\\n    function getRedemptionCollateral(address _token) public view returns (uint256) {\\n        if (stableTokens[_token]) {\\n            return poolAmounts[_token];\\n        }\\n        uint256 collateral = usdToTokenMin(_token, guaranteedUsd[_token]);\\n        return collateral.add(poolAmounts[_token]).sub(reservedAmounts[_token]);\\n    }\\n\\n    function getRedemptionCollateralUsd(address _token) public view returns (uint256) {\\n        return tokenToUsdMin(_token, getRedemptionCollateral(_token));\\n    }\\n\\n    function adjustForDecimals(\\n        uint256 _amount,\\n        address _tokenDiv,\\n        address _tokenMul\\n    ) public view returns (uint256) {\\n        uint256 decimalsDiv = _tokenDiv == usdm ? USDM_DECIMALS : tokenDecimals[_tokenDiv];\\n        uint256 decimalsMul = _tokenMul == usdm ? USDM_DECIMALS : tokenDecimals[_tokenMul];\\n        return _amount.mul(10**decimalsMul).div(10**decimalsDiv);\\n    }\\n\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) public view override returns (uint256) {\\n        if (_tokenAmount == 0) {\\n            return 0;\\n        }\\n        uint256 price = getMinPrice(_token);\\n        uint256 decimals = tokenDecimals[_token];\\n        return _tokenAmount.mul(price).div(10**decimals);\\n    }\\n\\n    function usdToTokenMax(address _token, uint256 _usdAmount) public view returns (uint256) {\\n        if (_usdAmount == 0) {\\n            return 0;\\n        }\\n        return usdToToken(_token, _usdAmount, getMinPrice(_token));\\n    }\\n\\n    function usdToTokenMin(address _token, uint256 _usdAmount) public view returns (uint256) {\\n        if (_usdAmount == 0) {\\n            return 0;\\n        }\\n        return usdToToken(_token, _usdAmount, getMaxPrice(_token));\\n    }\\n\\n    function usdToToken(\\n        address _token,\\n        uint256 _usdAmount,\\n        uint256 _price\\n    ) public view returns (uint256) {\\n        if (_usdAmount == 0) {\\n            return 0;\\n        }\\n        uint256 decimals = tokenDecimals[_token];\\n        return _usdAmount.mul(10**decimals).div(_price);\\n    }\\n\\n    function getPosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    )\\n        public\\n        view\\n        override\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            bool,\\n            uint256\\n        )\\n    {\\n        bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n        Position memory position = positions[key];\\n        uint256 realisedPnl = position.realisedPnl > 0 ? uint256(position.realisedPnl) : uint256(-position.realisedPnl);\\n        return (\\n            position.size, // 0\\n            position.collateral, // 1\\n            position.averagePrice, // 2\\n            position.entryFundingRate, // 3\\n            position.reserveAmount, // 4\\n            realisedPnl, // 5\\n            position.realisedPnl >= 0, // 6\\n            position.lastIncreasedTime // 7\\n        );\\n    }\\n\\n    function getPositionKey(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(_account, _collateralToken, _indexToken, _isLong));\\n    }\\n\\n    function updateCumulativeFundingRate(address _collateralToken, address _indexToken) public {\\n        bool shouldUpdate = vaultUtils.updateCumulativeFundingRate(_collateralToken, _indexToken);\\n        if (!shouldUpdate) {\\n            return;\\n        }\\n\\n        if (lastFundingTimes[_collateralToken] == 0) {\\n            lastFundingTimes[_collateralToken] = block.timestamp.div(fundingInterval).mul(fundingInterval);\\n            return;\\n        }\\n\\n        if (lastFundingTimes[_collateralToken].add(fundingInterval) > block.timestamp) {\\n            return;\\n        }\\n\\n        uint256 fundingRate = getNextFundingRate(_collateralToken);\\n        cumulativeFundingRates[_collateralToken] = cumulativeFundingRates[_collateralToken].add(fundingRate);\\n        lastFundingTimes[_collateralToken] = block.timestamp.div(fundingInterval).mul(fundingInterval);\\n\\n        emit UpdateFundingRate(_collateralToken, cumulativeFundingRates[_collateralToken]);\\n    }\\n\\n    function getNextFundingRate(address _token) public view override returns (uint256) {\\n        if (lastFundingTimes[_token].add(fundingInterval) > block.timestamp) {\\n            return 0;\\n        }\\n\\n        uint256 intervals = block.timestamp.sub(lastFundingTimes[_token]).div(fundingInterval);\\n        uint256 poolAmount = poolAmounts[_token];\\n        if (poolAmount == 0) {\\n            return 0;\\n        }\\n\\n        uint256 _fundingRateFactor = stableTokens[_token] ? stableFundingRateFactor : fundingRateFactor;\\n        return _fundingRateFactor.mul(reservedAmounts[_token]).mul(intervals).div(poolAmount);\\n    }\\n\\n    function getUtilisation(address _token) public view returns (uint256) {\\n        uint256 poolAmount = poolAmounts[_token];\\n        if (poolAmount == 0) {\\n            return 0;\\n        }\\n\\n        return reservedAmounts[_token].mul(FUNDING_RATE_PRECISION).div(poolAmount);\\n    }\\n\\n    function getPositionLeverage(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) public view returns (uint256) {\\n        bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n        Position memory position = positions[key];\\n        _validate(position.collateral > 0, 37);\\n        return position.size.mul(BASIS_POINTS_DIVISOR).div(position.collateral);\\n    }\\n\\n    // for longs: nextAveragePrice = (nextPrice * nextSize)/ (nextSize + delta)\\n    // for shorts: nextAveragePrice = (nextPrice * nextSize) / (nextSize - delta)\\n    function getNextAveragePrice(\\n        address _indexToken,\\n        uint256 _size,\\n        uint256 _averagePrice,\\n        bool _isLong,\\n        uint256 _nextPrice,\\n        uint256 _sizeDelta,\\n        uint256 _lastIncreasedTime\\n    ) public view returns (uint256) {\\n        (bool hasProfit, uint256 delta) = getDelta(_indexToken, _size, _averagePrice, _isLong, _lastIncreasedTime);\\n        uint256 nextSize = _size.add(_sizeDelta);\\n        uint256 divisor;\\n        if (_isLong) {\\n            divisor = hasProfit ? nextSize.add(delta) : nextSize.sub(delta);\\n        } else {\\n            divisor = hasProfit ? nextSize.sub(delta) : nextSize.add(delta);\\n        }\\n        return _nextPrice.mul(nextSize).div(divisor);\\n    }\\n\\n    // for longs: nextAveragePrice = (nextPrice * nextSize)/ (nextSize + delta)\\n    // for shorts: nextAveragePrice = (nextPrice * nextSize) / (nextSize - delta)\\n    function getNextGlobalShortAveragePrice(\\n        address _indexToken,\\n        uint256 _nextPrice,\\n        uint256 _sizeDelta\\n    ) public view returns (uint256) {\\n        uint256 size = globalShortSizes[_indexToken];\\n        uint256 averagePrice = globalShortAveragePrices[_indexToken];\\n        uint256 priceDelta = averagePrice > _nextPrice ? averagePrice.sub(_nextPrice) : _nextPrice.sub(averagePrice);\\n        uint256 delta = size.mul(priceDelta).div(averagePrice);\\n        bool hasProfit = averagePrice > _nextPrice;\\n\\n        uint256 nextSize = size.add(_sizeDelta);\\n        uint256 divisor = hasProfit ? nextSize.sub(delta) : nextSize.add(delta);\\n\\n        return _nextPrice.mul(nextSize).div(divisor);\\n    }\\n\\n    function getGlobalShortDelta(address _token) public view returns (bool, uint256) {\\n        uint256 size = globalShortSizes[_token];\\n        if (size == 0) {\\n            return (false, 0);\\n        }\\n\\n        uint256 nextPrice = getMaxPrice(_token);\\n        uint256 averagePrice = globalShortAveragePrices[_token];\\n        uint256 priceDelta = averagePrice > nextPrice ? averagePrice.sub(nextPrice) : nextPrice.sub(averagePrice);\\n        uint256 delta = size.mul(priceDelta).div(averagePrice);\\n        bool hasProfit = averagePrice > nextPrice;\\n\\n        return (hasProfit, delta);\\n    }\\n\\n    function getPositionDelta(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) public view returns (bool, uint256) {\\n        bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n        Position memory position = positions[key];\\n        return getDelta(_indexToken, position.size, position.averagePrice, _isLong, position.lastIncreasedTime);\\n    }\\n\\n    function getDelta(\\n        address _indexToken,\\n        uint256 _size,\\n        uint256 _averagePrice,\\n        bool _isLong,\\n        uint256 _lastIncreasedTime\\n    ) public view override returns (bool, uint256) {\\n        _validate(_averagePrice > 0, 38);\\n        uint256 price = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n        uint256 priceDelta = _averagePrice > price ? _averagePrice.sub(price) : price.sub(_averagePrice);\\n        uint256 delta = _size.mul(priceDelta).div(_averagePrice);\\n\\n        bool hasProfit;\\n\\n        if (_isLong) {\\n            hasProfit = price > _averagePrice;\\n        } else {\\n            hasProfit = _averagePrice > price;\\n        }\\n\\n        // if the minProfitTime has passed then there will be no min profit threshold\\n        // the min profit threshold helps to prevent front-running issues\\n        uint256 minBps = block.timestamp > _lastIncreasedTime.add(minProfitTime) ? 0 : minProfitBasisPoints[_indexToken];\\n        if (hasProfit && delta.mul(BASIS_POINTS_DIVISOR) <= _size.mul(minBps)) {\\n            delta = 0;\\n        }\\n\\n        return (hasProfit, delta);\\n    }\\n\\n    function getEntryFundingRate(\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) public view returns (uint256) {\\n        return vaultUtils.getEntryFundingRate(_collateralToken, _indexToken, _isLong);\\n    }\\n\\n    function getFundingFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _size,\\n        uint256 _entryFundingRate\\n    ) public view returns (uint256) {\\n        return vaultUtils.getFundingFee(_account, _collateralToken, _indexToken, _isLong, _size, _entryFundingRate);\\n    }\\n\\n    function getPositionFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta\\n    ) public view returns (uint256) {\\n        return vaultUtils.getPositionFee(_account, _collateralToken, _indexToken, _isLong, _sizeDelta);\\n    }\\n\\n    // cases to consider\\n    // 1. initialAmount is far from targetAmount, action increases balance slightly => high rebate\\n    // 2. initialAmount is far from targetAmount, action increases balance largely => high rebate\\n    // 3. initialAmount is close to targetAmount, action increases balance slightly => low rebate\\n    // 4. initialAmount is far from targetAmount, action reduces balance slightly => high tax\\n    // 5. initialAmount is far from targetAmount, action reduces balance largely => high tax\\n    // 6. initialAmount is close to targetAmount, action reduces balance largely => low tax\\n    // 7. initialAmount is above targetAmount, nextAmount is below targetAmount and vice versa\\n    // 8. a large swap should have similar fees as the same trade split into multiple smaller swaps\\n    function getFeeBasisPoints(\\n        address _token,\\n        uint256 _usdmDelta,\\n        uint256 _feeBasisPoints,\\n        uint256 _taxBasisPoints,\\n        bool _increment\\n    ) public view override returns (uint256) {\\n        return vaultUtils.getFeeBasisPoints(_token, _usdmDelta, _feeBasisPoints, _taxBasisPoints, _increment);\\n    }\\n\\n    function getTargetUsdmAmount(address _token) public view override returns (uint256) {\\n        uint256 supply = IERC20(usdm).totalSupply();\\n        if (supply == 0) {\\n            return 0;\\n        }\\n        uint256 weight = tokenWeights[_token];\\n        return weight.mul(supply).div(totalTokenWeights);\\n    }\\n\\n    function _reduceCollateral(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) private returns (uint256, uint256) {\\n        bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n        Position storage position = positions[key];\\n\\n        uint256 fee = _collectMarginFees(_account, _collateralToken, _indexToken, _isLong, _sizeDelta, position.size, position.entryFundingRate);\\n        bool hasProfit;\\n        uint256 adjustedDelta;\\n\\n        // scope variables to avoid stack too deep errors\\n        {\\n            (bool _hasProfit, uint256 delta) = getDelta(_indexToken, position.size, position.averagePrice, _isLong, position.lastIncreasedTime);\\n            hasProfit = _hasProfit;\\n            // get the proportional change in pnl\\n            adjustedDelta = _sizeDelta.mul(delta).div(position.size);\\n        }\\n\\n        uint256 usdOut;\\n        // transfer profits out\\n        if (hasProfit && adjustedDelta > 0) {\\n            usdOut = adjustedDelta;\\n            position.realisedPnl = position.realisedPnl + int256(adjustedDelta);\\n\\n            // pay out realised profits from the pool amount for short positions\\n            if (!_isLong) {\\n                uint256 tokenAmount = usdToTokenMin(_collateralToken, adjustedDelta);\\n                _decreasePoolAmount(_collateralToken, tokenAmount);\\n            }\\n        }\\n\\n        if (!hasProfit && adjustedDelta > 0) {\\n            position.collateral = position.collateral.sub(adjustedDelta);\\n\\n            // transfer realised losses to the pool for short positions\\n            // realised losses for long positions are not transferred here as\\n            // _increasePoolAmount was already called in increasePosition for longs\\n            if (!_isLong) {\\n                uint256 tokenAmount = usdToTokenMin(_collateralToken, adjustedDelta);\\n                _increasePoolAmount(_collateralToken, tokenAmount);\\n            }\\n\\n            position.realisedPnl = position.realisedPnl - int256(adjustedDelta);\\n        }\\n\\n        // reduce the position's collateral by _collateralDelta\\n        // transfer _collateralDelta out\\n        if (_collateralDelta > 0) {\\n            usdOut = usdOut.add(_collateralDelta);\\n            position.collateral = position.collateral.sub(_collateralDelta);\\n        }\\n\\n        // if the position will be closed, then transfer the remaining collateral out\\n        if (position.size == _sizeDelta) {\\n            usdOut = usdOut.add(position.collateral);\\n            position.collateral = 0;\\n        }\\n\\n        // if the usdOut is more than the fee then deduct the fee from the usdOut directly\\n        // else deduct the fee from the position's collateral\\n        uint256 usdOutAfterFee = usdOut;\\n        if (usdOut > fee) {\\n            usdOutAfterFee = usdOut.sub(fee);\\n        } else {\\n            position.collateral = position.collateral.sub(fee);\\n            if (_isLong) {\\n                uint256 feeTokens = usdToTokenMin(_collateralToken, fee);\\n                _decreasePoolAmount(_collateralToken, feeTokens);\\n            }\\n        }\\n\\n        emit UpdatePnl(key, hasProfit, adjustedDelta);\\n\\n        return (usdOut, usdOutAfterFee);\\n    }\\n\\n    function _validatePosition(uint256 _size, uint256 _collateral) private view {\\n        if (_size == 0) {\\n            _validate(_collateral == 0, 39);\\n            return;\\n        }\\n        _validate(_size >= _collateral, 40);\\n    }\\n\\n    function _validateRouter(address _account) private view {\\n        if (msg.sender == _account) {\\n            return;\\n        }\\n        if (msg.sender == router) {\\n            return;\\n        }\\n        _validate(approvedRouters[_account][msg.sender], 41);\\n    }\\n\\n    function _validateTokens(\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) private view {\\n        if (_isLong) {\\n            _validate(_collateralToken == _indexToken, 42);\\n            _validate(whitelistedTokens[_collateralToken], 43);\\n            _validate(!stableTokens[_collateralToken], 44);\\n            return;\\n        }\\n\\n        _validate(whitelistedTokens[_collateralToken], 45);\\n        _validate(stableTokens[_collateralToken], 46);\\n        _validate(!stableTokens[_indexToken], 47);\\n        _validate(shortableTokens[_indexToken], 48);\\n    }\\n\\n    function _collectSwapFees(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _feeBasisPoints\\n    ) private returns (uint256) {\\n        uint256 afterFeeAmount = _amount.mul(BASIS_POINTS_DIVISOR.sub(_feeBasisPoints)).div(BASIS_POINTS_DIVISOR);\\n        uint256 feeAmount = _amount.sub(afterFeeAmount);\\n        feeReserves[_token] = feeReserves[_token].add(feeAmount);\\n        emit CollectSwapFees(_token, tokenToUsdMin(_token, feeAmount), feeAmount);\\n        return afterFeeAmount;\\n    }\\n\\n    function _collectMarginFees(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta,\\n        uint256 _size,\\n        uint256 _entryFundingRate\\n    ) private returns (uint256) {\\n        uint256 feeUsd = getPositionFee(_account, _collateralToken, _indexToken, _isLong, _sizeDelta);\\n\\n        uint256 fundingFee = getFundingFee(_account, _collateralToken, _indexToken, _isLong, _size, _entryFundingRate);\\n        feeUsd = feeUsd.add(fundingFee);\\n\\n        uint256 feeTokens = usdToTokenMin(_collateralToken, feeUsd);\\n        feeReserves[_collateralToken] = feeReserves[_collateralToken].add(feeTokens);\\n\\n        emit CollectMarginFees(_collateralToken, feeUsd, feeTokens);\\n        return feeUsd;\\n    }\\n\\n    function _transferIn(address _token) private returns (uint256) {\\n        uint256 prevBalance = tokenBalances[_token];\\n        uint256 nextBalance = IERC20(_token).balanceOf(address(this));\\n        tokenBalances[_token] = nextBalance;\\n\\n        return nextBalance.sub(prevBalance);\\n    }\\n\\n    function _transferOut(\\n        address _token,\\n        uint256 _amount,\\n        address _receiver\\n    ) private {\\n        IERC20(_token).safeTransfer(_receiver, _amount);\\n        tokenBalances[_token] = IERC20(_token).balanceOf(address(this));\\n    }\\n\\n    function _updateTokenBalance(address _token) private {\\n        uint256 nextBalance = IERC20(_token).balanceOf(address(this));\\n        tokenBalances[_token] = nextBalance;\\n    }\\n\\n    function _increasePoolAmount(address _token, uint256 _amount) private {\\n        poolAmounts[_token] = poolAmounts[_token].add(_amount);\\n        uint256 balance = IERC20(_token).balanceOf(address(this));\\n        _validate(poolAmounts[_token] <= balance, 49);\\n        emit IncreasePoolAmount(_token, _amount);\\n    }\\n\\n    function _decreasePoolAmount(address _token, uint256 _amount) private {\\n        poolAmounts[_token] = poolAmounts[_token].sub(_amount, \\\"Vault: poolAmount exceeded\\\");\\n        _validate(reservedAmounts[_token] <= poolAmounts[_token], 50);\\n        emit DecreasePoolAmount(_token, _amount);\\n    }\\n\\n    function _validateBufferAmount(address _token) private view {\\n        if (poolAmounts[_token] < bufferAmounts[_token]) {\\n            revert(\\\"Vault: poolAmount < buffer\\\");\\n        }\\n    }\\n\\n    function _increaseUsdmAmount(address _token, uint256 _amount) private {\\n        usdmAmounts[_token] = usdmAmounts[_token].add(_amount);\\n        uint256 maxUsdmAmount = maxUsdmAmounts[_token];\\n        if (maxUsdmAmount != 0) {\\n            _validate(usdmAmounts[_token] <= maxUsdmAmount, 51);\\n        }\\n        emit IncreaseUsdmAmount(_token, _amount);\\n    }\\n\\n    function _decreaseUsdmAmount(address _token, uint256 _amount) private {\\n        uint256 value = usdmAmounts[_token];\\n        // since USDM can be minted using multiple assets\\n        // it is possible for the USDM debt for a single asset to be less than zero\\n        // the USDM debt is capped to zero for this case\\n        if (value <= _amount) {\\n            usdmAmounts[_token] = 0;\\n            emit DecreaseUsdmAmount(_token, value);\\n            return;\\n        }\\n        usdmAmounts[_token] = value.sub(_amount);\\n        emit DecreaseUsdmAmount(_token, _amount);\\n    }\\n\\n    function _increaseReservedAmount(address _token, uint256 _amount) private {\\n        reservedAmounts[_token] = reservedAmounts[_token].add(_amount);\\n        _validate(reservedAmounts[_token] <= poolAmounts[_token], 52);\\n        emit IncreaseReservedAmount(_token, _amount);\\n    }\\n\\n    function _decreaseReservedAmount(address _token, uint256 _amount) private {\\n        reservedAmounts[_token] = reservedAmounts[_token].sub(_amount, \\\"Vault: insufficient reserve\\\");\\n        emit DecreaseReservedAmount(_token, _amount);\\n    }\\n\\n    function _increaseGuaranteedUsd(address _token, uint256 _usdAmount) private {\\n        guaranteedUsd[_token] = guaranteedUsd[_token].add(_usdAmount);\\n        emit IncreaseGuaranteedUsd(_token, _usdAmount);\\n    }\\n\\n    function _decreaseGuaranteedUsd(address _token, uint256 _usdAmount) private {\\n        guaranteedUsd[_token] = guaranteedUsd[_token].sub(_usdAmount);\\n        emit DecreaseGuaranteedUsd(_token, _usdAmount);\\n    }\\n\\n    function _increaseGlobalShortSize(address _token, uint256 _amount) private {\\n        globalShortSizes[_token] = globalShortSizes[_token].add(_amount);\\n\\n        uint256 maxSize = maxGlobalShortSizes[_token];\\n        if (maxSize != 0) {\\n            require(globalShortSizes[_token] <= maxSize, \\\"Vault: max shorts exceeded\\\");\\n        }\\n    }\\n\\n    function _decreaseGlobalShortSize(address _token, uint256 _amount) private {\\n        uint256 size = globalShortSizes[_token];\\n        if (_amount > size) {\\n            globalShortSizes[_token] = 0;\\n            return;\\n        }\\n\\n        globalShortSizes[_token] = size.sub(_amount);\\n    }\\n\\n    // we have this validation as a function instead of a modifier to reduce contract size\\n    function _onlyGov() private view {\\n        _validate(msg.sender == gov, 53);\\n    }\\n\\n    // we have this validation as a function instead of a modifier to reduce contract size\\n    function _validateManager() private view {\\n        if (inManagerMode) {\\n            _validate(isManager[msg.sender], 54);\\n        }\\n    }\\n\\n    // we have this validation as a function instead of a modifier to reduce contract size\\n    function _validateGasPrice() private view {\\n        if (maxGasPrice == 0) {\\n            return;\\n        }\\n        _validate(tx.gasprice <= maxGasPrice, 55);\\n    }\\n\\n    function _validate(bool _condition, uint256 _errorCode) private view {\\n        require(_condition, errors[_errorCode]);\\n    }\\n}\\n\",\"keccak256\":\"0x481f9303835bfb812ec6cb1814da104922f6c29662ec3dff7ac0e40e8b764fb0\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IVaultUtils.sol\\\";\\n\\ninterface IVault {\\n    function isInitialized() external view returns (bool);\\n\\n    function isSwapEnabled() external view returns (bool);\\n\\n    function isLeverageEnabled() external view returns (bool);\\n\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n\\n    function router() external view returns (address);\\n\\n    function usdm() external view returns (address);\\n\\n    function gov() external view returns (address);\\n\\n    function whitelistedTokenCount() external view returns (uint256);\\n\\n    function maxLeverage() external view returns (uint256);\\n\\n    function minProfitTime() external view returns (uint256);\\n\\n    function hasDynamicFees() external view returns (bool);\\n\\n    function fundingInterval() external view returns (uint256);\\n\\n    function totalTokenWeights() external view returns (uint256);\\n\\n    function getTargetUsdmAmount(address _token) external view returns (uint256);\\n\\n    function inManagerMode() external view returns (bool);\\n\\n    function inPrivateLiquidationMode() external view returns (bool);\\n\\n    function maxGasPrice() external view returns (uint256);\\n\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n\\n    function isLiquidator(address _account) external view returns (bool);\\n\\n    function isManager(address _account) external view returns (bool);\\n\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n\\n    function tokenBalances(address _token) external view returns (uint256);\\n\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n\\n    function setInManagerMode(bool _inManagerMode) external;\\n\\n    function setManager(address _manager, bool _isManager) external;\\n\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n\\n    function setUsdmAmount(address _token, uint256 _amount) external;\\n\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n\\n    function setFundingRate(\\n        uint256 _fundingInterval,\\n        uint256 _fundingRateFactor,\\n        uint256 _stableFundingRateFactor\\n    ) external;\\n\\n    function setFees(\\n        uint256 _taxBasisPoints,\\n        uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _minProfitTime,\\n        bool _hasDynamicFees\\n    ) external;\\n\\n    function setTokenConfig(\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _redemptionBps,\\n        uint256 _minProfitBps,\\n        uint256 _maxUsdmAmount,\\n        bool _isStable,\\n        bool _isShortable\\n    ) external;\\n\\n    function setPriceFeed(address _priceFeed) external;\\n\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n\\n    function directPoolDeposit(address _token) external;\\n\\n    function buyUSDM(address _token, address _receiver) external returns (uint256);\\n\\n    function sellUSDM(address _token, address _receiver) external returns (uint256);\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function increasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external;\\n\\n    function decreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function liquidatePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        address _feeReceiver\\n    ) external;\\n\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function priceFeed() external view returns (address);\\n\\n    function fundingRateFactor() external view returns (uint256);\\n\\n    function stableFundingRateFactor() external view returns (uint256);\\n\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n\\n    function getFeeBasisPoints(\\n        address _token,\\n        uint256 _usdmDelta,\\n        uint256 _feeBasisPoints,\\n        uint256 _taxBasisPoints,\\n        bool _increment\\n    ) external view returns (uint256);\\n\\n    function liquidationFeeUsd() external view returns (uint256);\\n\\n    function taxBasisPoints() external view returns (uint256);\\n\\n    function stableTaxBasisPoints() external view returns (uint256);\\n\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n\\n    function swapFeeBasisPoints() external view returns (uint256);\\n\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n\\n    function marginFeeBasisPoints() external view returns (uint256);\\n\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n\\n    function whitelistedTokens(address _token) external view returns (bool);\\n\\n    function stableTokens(address _token) external view returns (bool);\\n\\n    function shortableTokens(address _token) external view returns (bool);\\n\\n    function feeReserves(address _token) external view returns (uint256);\\n\\n    function globalShortSizes(address _token) external view returns (uint256);\\n\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n\\n    function tokenDecimals(address _token) external view returns (uint256);\\n\\n    function tokenWeights(address _token) external view returns (uint256);\\n\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n\\n    function poolAmounts(address _token) external view returns (uint256);\\n\\n    function bufferAmounts(address _token) external view returns (uint256);\\n\\n    function reservedAmounts(address _token) external view returns (uint256);\\n\\n    function usdmAmounts(address _token) external view returns (uint256);\\n\\n    function maxUsdmAmounts(address _token) external view returns (uint256);\\n\\n    function getRedemptionAmount(address _token, uint256 _usdmAmount) external view returns (uint256);\\n\\n    function getMaxPrice(address _token) external view returns (uint256);\\n\\n    function getMinPrice(address _token) external view returns (uint256);\\n\\n    function getDelta(\\n        address _indexToken,\\n        uint256 _size,\\n        uint256 _averagePrice,\\n        bool _isLong,\\n        uint256 _lastIncreasedTime\\n    ) external view returns (bool, uint256);\\n\\n    function getPosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    )\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            bool,\\n            uint256\\n        );\\n}\\n\",\"keccak256\":\"0xc247c3dc87351e3bdc8dc14694ca7ee035b9e52ccfd7abcfe0f6e59f1d1598e0\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultPriceFeed {\\n    function adjustmentBasisPoints(address _token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function isAdjustmentAdditive(address _token) external view returns (bool);\\n\\n    function setAdjustment(\\n        address _token,\\n        bool _isAdditive,\\n        uint256 _adjustmentBps\\n    ) external;\\n\\n    function setUseV2Pricing(bool _useV2Pricing) external;\\n\\n    function setIsAmmEnabled(bool _isEnabled) external;\\n\\n    function setIsSecondaryPriceEnabled(bool _isEnabled) external;\\n\\n    function setSpreadBasisPoints(address _token, uint256 _spreadBasisPoints)\\n        external;\\n\\n    function setSpreadThresholdBasisPoints(uint256 _spreadThresholdBasisPoints)\\n        external;\\n\\n    function setFavorPrimaryPrice(bool _favorPrimaryPrice) external;\\n\\n    function setPriceSampleSpace(uint256 _priceSampleSpace) external;\\n\\n    function setMaxStrictPriceDeviation(uint256 _maxStrictPriceDeviation)\\n        external;\\n\\n    function getPrice(\\n        address _token,\\n        bool _maximise,\\n        bool _includeAmmPrice,\\n        bool _useSwapPricing\\n    ) external view returns (uint256);\\n\\n    function getAmmPrice(address _token) external view returns (uint256);\\n\\n    function getPrimaryPrice(address _token, bool _maximise)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function setTokenConfig(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _priceDecimals,\\n        bool _isStrictStable\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcbbd18f389e0f7445399135315b4a7f5e8c5c9f5502fbd1d8747906f4f8f8ee6\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(\\n        address _collateralToken,\\n        address _indexToken\\n    ) external returns (bool);\\n\\n    function validateIncreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external view;\\n\\n    function validateDecreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external view;\\n\\n    function validateLiquidation(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        bool _raise\\n    ) external view returns (uint256, uint256);\\n\\n    function getEntryFundingRate(\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) external view returns (uint256);\\n\\n    function getPositionFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta\\n    ) external view returns (uint256);\\n\\n    function getFundingFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _size,\\n        uint256 _entryFundingRate\\n    ) external view returns (uint256);\\n\\n    function getBuyUsdmFeeBasisPoints(address _token, uint256 _usdmAmount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getSellUsdmFeeBasisPoints(address _token, uint256 _usdmAmount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getSwapFeeBasisPoints(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _usdmAmount\\n    ) external view returns (uint256);\\n\\n    function getFeeBasisPoints(\\n        address _token,\\n        uint256 _usdmDelta,\\n        uint256 _feeBasisPoints,\\n        uint256 _taxBasisPoints,\\n        bool _increment\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xafc12294f1c958c02e178106e3db33710a7f4c904f8ef5f1549ceba151427509\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcd6e686bb83826306dfe5831e369ac9f462705a7afe1a18c3c042940a1d59d8a\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x52455e4835fa0f6e8846c56fcd18484b8012049f38b2f465f4374d9316d557a5\",\"license\":\"MIT\"},\"contracts/libraries/token/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0), \\\"SafeERC20: approve from non-zero to non-zero allowance\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2179c12e4ac50e8a769b1b43f43558f42bf511fcd7236e034c13c6e4450dbe85\",\"license\":\"MIT\"},\"contracts/libraries/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb0ac6523715fd08440082ed1ab1db37b7b5a009f9948c29ce1e63d17171e1ba6\",\"license\":\"MIT\"},\"contracts/libraries/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x223b08d372e9f820805da8b8cbc742bf4c0b7e9fdd1cab8165006ba570ce0b52\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IUSDM.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IUSDM {\\n    function addVault(address _vault) external;\\n\\n    function removeVault(address _vault) external;\\n\\n    function mint(address _account, uint256 _amount) external;\\n\\n    function burn(address _account, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xd3b499a34bea290f0778d93ed046c6b71ad92a34b9e9db1a63497197d13d466f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001805462ff00001961ff00199091166101001716620100001781556207a1206008556032600a9081556014600b55601e600c819055600d556004600e55600f556011805460ff199081169091556170806012556016805463ffffff0019921690921716905534801561007657600080fd5b506001600055600680546001600160a01b03191633179055615fcd806200009e6000396000f3fe608060405234801561001057600080fd5b50600436106106595760003560e01c80638585f4d211610349578063c7e074c3116101bf578063df73a26711610105578063f2555278116100a8578063f255527814611692578063f3ae2415146116c0578063f887ea40146116e6578063fa12dbc0146116ee578063fbfded6d14611720578063fce28c101461174e578063fdaf6ac314611756578063fed1a6061461179a57610659565b8063df73a267146115a8578063e124e6d2146115b0578063e468baf0146115d6578063e67f59a7146115f3578063ee138d0f14611619578063efa10a6e14611621578063f07456ce1461164d578063f07bbf771461167357610659565b8063d8f897c31161016d578063d8f897c314611448578063d9ac42251461146e578063da76524c14611476578063daf9c210146114c0578063db3555fb146114e6578063db97495f1461150c578063dc8f5fac14611558578063de2ea9481461156057610659565b8063c7e074c3146112e7578063cea0c32814611327578063cfad57a21461135d578063d2fa635e14611383578063d3127e63146113a0578063d45200d1146113bd578063d54d5a9f146113e957610659565b80639d7432ca1161028f578063ae3302c211610232578063ae3302c2146111ff578063b06423f314611207578063b136ca491461120f578063b1cc53ab14611235578063b364accb1461126d578063c3c7b9e914611293578063c4f718bf146112b9578063c65bc7b1146112c157610659565b80639d7432ca1461110f5780639f392eb314611141578063a22f239214611149578063a42ab3d214611151578063a5e90eee1461117d578063a93acac2146111ab578063ab08c1c6146111d1578063ab2f3ad4146111d957610659565b80638f7b8404116102f75780638f7b8404146110215780639060b1ca14611047578063933162121461104f57806395082d25146110875780639698d25a1461108f5780639849e412146110b55780639899cd02146110bd5780639acc6b33146110e957610659565b80638585f4d214610f2c57806386284f5f14610f5857806388b1fbdf14610f865780638a27d46814610fac5780638a39735a146107085780638a78daa814610fd55780638ee573ac14610ffb57610659565b806342b60b03116104de5780635f7bc11911610424578063724e78da116103c7578063724e78da14610def578063728cdbca14610e15578063741bef1a14610e5d5780637a210a2b14610e655780637c2eb9f714610e6d57806381a612d614610e8c57806382a0849014610eb257806383867b2d14610f0657610659565b80635f7bc11914610d115780636092219914610d3757806362287a3214610d655780636274980314610d6d5780636abbe0c814610d935780636ae0b15414610d9b5780636be6026b14610dc157806371089f4d14610dc957610659565b80634befe2ca1161048c5780634befe2ca14610bbc5780634d47b30414610bc4578063514ea4bf14610bcc57806351723e8214610c21578063523fba7f14610c5f578063529a356f14610c8557806352f55eed14610cab5780635c07eaab14610cd157610659565b806342b60b0314610a1c5780634453a37414610a4257806345a6f37014610a7057806348d91abf14610ac957806348f35cbb14610b0d5780634a3f088d14610b155780634a993ee914610b9657610659565b806329ff9615116105a3578063351a964d11610551578063351a964d1461090357806337af6e7e1461090b578063392e53cd146109315780633c5a6e35146109395780633de39c11146109875780633e72a2621461098f57806340eb38021461099757806342152873146109e857610659565b806329ff9615146108445780632c668ec11461086a5780632d4b057614610896578063302a8141146108d457806330455ede146108dc578063318bc689146108fb57806334c1557d1461070857610659565b806312d43a511161060b57806312d43a5114610710578063134ca63b14610734578063174d26941461073c578063181e210e146107445780631ce9cb8f1461076057806324b0c04d1461078657806324ca984e146107a757806328e67be5146107cd57610659565b806304fef1db1461065e57806307c58752146106965780630842b0761461069e5780630928a4f8146106a65780630a48d5a9146106d457806310eb56c214610700578063126082cf14610708575b600080fd5b6106846004803603602081101561067457600080fd5b50356001600160a01b031661182c565b60408051918252519081900360200190f35b61068461188f565b6106846118a1565b610684600480360360408110156106bc57600080fd5b506001600160a01b03813581169160200135166118a7565b610684600480360360408110156106ea57600080fd5b506001600160a01b038135169060200135611b3b565b610684611b8e565b610684611b94565b610718611b9a565b604080516001600160a01b039092168252519081900360200190f35b610684611ba9565b610684611baf565b61074c611bb5565b604080519115158252519081900360200190f35b6106846004803603602081101561077657600080fd5b50356001600160a01b0316611bc5565b6107a56004803603602081101561079c57600080fd5b50351515611bd7565b005b6107a5600480360360208110156107bd57600080fd5b50356001600160a01b0316611bfb565b6107a5600480360360408110156107e357600080fd5b8135919081019060408101602082013564010000000081111561080557600080fd5b82018360208201111561081757600080fd5b8035906020019184600183028401116401000000008311171561083957600080fd5b509092509050611c2c565b6106846004803603602081101561085a57600080fd5b50356001600160a01b0316611caa565b6106846004803603604081101561088057600080fd5b506001600160a01b038135169060200135611cbe565b610684600480360360808110156108ac57600080fd5b506001600160a01b038135811691602081013582169160408201351690606001351515611d03565b610684611d5e565b6107a5600480360360208110156108f257600080fd5b50351515611d63565b610684611d85565b61074c611d8b565b6106846004803603602081101561092157600080fd5b50356001600160a01b0316611d99565b61074c611e59565b6107a5600480360360e081101561094f57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a081013515159060c001351515611e62565b610684611fa4565b61074c611faa565b6107a560048036036101208110156109ae57600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c08101359060e08101359061010001351515611fb9565b610684600480360360608110156109fe57600080fd5b508035906001600160a01b0360208201358116916040013516612074565b61074c60048036036020811015610a3257600080fd5b50356001600160a01b0316612116565b6107a560048036036040811015610a5857600080fd5b506001600160a01b038135169060200135151561212b565b610aae60048036036080811015610a8657600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561215e565b60408051921515835260208301919091528051918290030190f35b6107a5600480360360a0811015610adf57600080fd5b506001600160a01b0381358116916020810135821691604082013516906060810135906080013515156121fc565b61071861263b565b610b5360048036036080811015610b2b57600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561264a565b604080519889526020890197909752878701959095526060870193909352608086019190915260a0850152151560c084015260e083015251908190036101000190f35b61068460048036036020811015610bac57600080fd5b50356001600160a01b0316612740565b610684612752565b610684612758565b610be960048036036020811015610be257600080fd5b503561275e565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b61068460048036036080811015610c3757600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561279b565b61068460048036036020811015610c7557600080fd5b50356001600160a01b0316612841565b61074c60048036036020811015610c9b57600080fd5b50356001600160a01b0316612853565b61068460048036036020811015610cc157600080fd5b50356001600160a01b0316612868565b610aae600480360360a0811015610ce757600080fd5b506001600160a01b038135169060208101359060408101359060608101351515906080013561287a565b6107a560048036036020811015610d2757600080fd5b50356001600160a01b0316612972565b61074c60048036036040811015610d4d57600080fd5b506001600160a01b0381358116916020013516612a55565b610684612a75565b61068460048036036020811015610d8357600080fd5b50356001600160a01b0316612a7b565b610718612a8d565b6107a560048036036020811015610db157600080fd5b50356001600160a01b0316612aa3565b610684612ad1565b6107a560048036036020811015610ddf57600080fd5b50356001600160a01b0316612ad8565b6107a560048036036020811015610e0557600080fd5b50356001600160a01b0316612b0c565b6107a5600480360360c0811015610e2b57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a00135612b36565b610718612bad565b610684612bbc565b6107a560048036036020811015610e8357600080fd5b50351515612bc2565b61068460048036036020811015610ea257600080fd5b50356001600160a01b0316612be6565b610684600480360360e0811015610ec857600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516612c91565b61068460048036036020811015610f1c57600080fd5b50356001600160a01b0316612d0f565b6107a560048036036040811015610f4257600080fd5b506001600160a01b038135169060200135612d21565b61068460048036036040811015610f6e57600080fd5b506001600160a01b0381358116916020013516612d45565b61068460048036036020811015610f9c57600080fd5b50356001600160a01b0316613015565b6107a560048036036060811015610fc257600080fd5b5080359060208101359060400135613027565b61068460048036036020811015610feb57600080fd5b50356001600160a01b031661306d565b6106846004803603602081101561101157600080fd5b50356001600160a01b031661307f565b6107a56004803603602081101561103757600080fd5b50356001600160a01b0316613091565b61074c6130bb565b6106846004803603606081101561106557600080fd5b506001600160a01b0381358116916020810135821691604090910135166130ca565b6106846133b2565b610684600480360360208110156110a557600080fd5b50356001600160a01b03166133c2565b6106846133d4565b610684600480360360408110156110d357600080fd5b506001600160a01b0381351690602001356133da565b610684600480360360208110156110ff57600080fd5b50356001600160a01b03166133fc565b6106846004803603606081101561112557600080fd5b506001600160a01b03813516906020810135906040013561340e565b61074c6134b7565b6106846134c0565b6106846004803603604081101561116757600080fd5b506001600160a01b0381351690602001356134c6565b6107a56004803603604081101561119357600080fd5b506001600160a01b03813516906020013515156134e3565b610684600480360360208110156111c157600080fd5b50356001600160a01b0316613516565b61074c613614565b610684600480360360208110156111ef57600080fd5b50356001600160a01b031661361d565b61068461362f565b61074c613635565b6106846004803603602081101561122557600080fd5b50356001600160a01b0316613643565b6106846004803603606081101561124b57600080fd5b506001600160a01b0381358116916020810135909116906040013515156136e4565b610aae6004803603602081101561128357600080fd5b50356001600160a01b031661377f565b610684600480360360208110156112a957600080fd5b50356001600160a01b0316613817565b610684613829565b610684600480360360208110156112d757600080fd5b50356001600160a01b031661382f565b610684600480360360a08110156112fd57600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608001351515613841565b6107a56004803603606081101561133d57600080fd5b506001600160a01b038135811691602081013590911690604001356138eb565b6107a56004803603602081101561137357600080fd5b50356001600160a01b031661390c565b6107a56004803603602081101561139957600080fd5b5035613936565b6107a5600480360360208110156113b657600080fd5b5035613943565b6107a5600480360360408110156113d357600080fd5b506001600160a01b03813516906020013561395f565b61142f600480360360a08110156113ff57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101351515906080013515156139b8565b6040805192835260208301919091528051918290030190f35b6106846004803603602081101561145e57600080fd5b50356001600160a01b0316613a6f565b610684613a81565b610684600480360360c081101561148c57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060808101359060a00135613a87565b61074c600480360360208110156114d657600080fd5b50356001600160a01b0316613b3b565b61074c600480360360208110156114fc57600080fd5b50356001600160a01b0316613b50565b610684600480360360e081101561152257600080fd5b506001600160a01b0381351690602081013590604081013590606081013515159060808101359060a08101359060c00135613b64565b610684613bf5565b6107a5600480360360a081101561157657600080fd5b506001600160a01b03813581169160208101358216916040820135811691606081013515159160809091013516613bfb565b610684613fd3565b610684600480360360208110156115c657600080fd5b50356001600160a01b0316613fd9565b610718600480360360208110156115ec57600080fd5b5035614051565b6107a56004803603602081101561160957600080fd5b50356001600160a01b0316614078565b61071861414b565b6107a56004803603604081101561163757600080fd5b506001600160a01b03813516906020013561415a565b6106846004803603602081101561166357600080fd5b50356001600160a01b031661417e565b6107a56004803603602081101561168957600080fd5b50351515614190565b610684600480360360408110156116a857600080fd5b506001600160a01b03813581169160200135166141b6565b61074c600480360360208110156116d657600080fd5b50356001600160a01b031661420c565b610718614221565b6106846004803603606081101561170457600080fd5b506001600160a01b038135169060208101359060400135614230565b6107a56004803603604081101561173657600080fd5b506001600160a01b038135811691602001351661426a565b610684614443565b610684600480360360a081101561176c57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060800135614449565b6117b7600480360360208110156117b057600080fd5b50356144bf565b6040805160208082528351818301528351919283929083019185019080838360005b838110156117f15781810151838201526020016117d9565b50505050905090810190601f16801561181e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600160a01b0381166000908152602560205260408120548061185457600091505061188a565b6001600160a01b03831660009081526026602052604090205461188690829061188090620f424061455a565b906145b3565b9150505b919050565b6d04ee2d6d415b85acef810000000081565b601b5490565b6000600260005414156118ef576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b60026000556118fc6145f5565b6001600160a01b0383166000908152601c60205260409020546119239060ff166013614626565b6016805461ff00191661010017905560055460009061194a906001600160a01b03166146d2565b905061195a600082116014614626565b611964848561426a565b60006119708583611cbe565b9050611980600082116015614626565b61198a858361477f565b6119948582614861565b60055460408051632770a7eb60e21b81523060048201526024810185905290516001600160a01b0390921691639dc29fac9160448082019260009290919082900301818387803b1580156119e757600080fd5b505af11580156119fb573d6000803e3d6000fd5b5050600554611a1592506001600160a01b03169050614937565b600154604080516310d5486360e21b81526001600160a01b0388811660048301526024820186905291516000936301000000900490921691634355218c91604480820192602092909190829003018186803b158015611a7357600080fd5b505afa158015611a87573d6000803e3d6000fd5b505050506040513d6020811015611a9d57600080fd5b505190506000611aae8784846149d2565b9050611abe600082116016614626565b611ac9878288614a9a565b604080516001600160a01b03808916825289166020820152808201869052606081018390526080810184905290517f52eb5f5cb9a498f7cf35a2e264fbe42a9401185a0fd345d5d2c8932a2a45b1ae9181900360a00190a16016805461ff001916905560016000559695505050505050565b600081611b4a57506000611b88565b6000611b5584612be6565b6001600160a01b0385166000908152601d6020526040902054909150611b83600a82900a611880868561455a565b925050505b92915050565b600b5481565b61271081565b6006546001600160a01b031681565b60145481565b60095481565b6016546301000000900460ff1681565b602c6020526000908152604090205481565b611bdf614b41565b60168054911515620100000262ff000019909216919091179055565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6002546001600160a01b03163314611c8b576040805162461bcd60e51b815260206004820152601e60248201527f5661756c743a20696e76616c6964206572726f72436f6e74726f6c6c65720000604482015290519081900360640190fd5b6000838152603060205260409020611ca4908383615e85565b50505050565b6000611b8882611cb984613643565b611b3b565b600080611cca84613fd9565b90506000611ce8826118808668327cb2734119d3b7a9601e1b61455a565b600554909150611b839082906001600160a01b031687612074565b604080516bffffffffffffffffffffffff19606096871b811660208084019190915295871b811660348301529390951b9092166048850152151560f81b605c8401528051603d818503018152605d9093019052815191012090565b601281565b611d6b614b41565b600180549115156101000261ff0019909216919091179055565b600f5481565b600154610100900460ff1681565b600080600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611dea57600080fd5b505afa158015611dfe573d6000803e3d6000fd5b505050506040513d6020811015611e1457600080fd5b5051905080611e2757600091505061188a565b6001600160a01b038316600090815260226020526040902054601554611e5190611880838561455a565b949350505050565b60015460ff1681565b611e6a614b41565b6001600160a01b0387166000908152601c602052604090205460ff16611ee757600754611e98906001614b5a565b600755601b80546001810182556000919091527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b0319166001600160a01b0389161790555b6015546001600160a01b038816600090815260226020526040902054611f0e908290614bb4565b6001600160a01b0389166000908152601c602090815260408083208054600160ff1991821617909155601d83528184208c9055602283528184208b9055601e83528184208a905560248352818420899055601f83528184208054821689151517905591805290912080549091168415151790559050611f8d8187614b5a565b601555611f9988613fd9565b505050505050505050565b60175481565b60015462010000900460ff1681565b611fc1614b41565b611fd16101f48a11156003614626565b611fe16101f48911156004614626565b611ff16101f48811156005614626565b6120016101f48711156006614626565b6120116101f48611156007614626565b6120216101f48511156008614626565b61203d6d04ee2d6d415b85acef81000000008411156009614626565b600a98909855600b96909655600c94909455600d92909255600e55600f556009556010556011805460ff1916911515919091179055565b60055460009081906001600160a01b038581169116146120ac576001600160a01b0384166000908152601d60205260409020546120af565b60125b6005549091506000906001600160a01b038581169116146120e8576001600160a01b0384166000908152601d60205260409020546120eb565b60125b905061210a82600a0a61188083600a0a8961455a90919063ffffffff16565b925050505b9392505050565b601f6020526000908152604090205460ff1681565b612133614b41565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b600080600061216f87878787611d03565b9050612179615f03565b506000818152602b6020908152604091829020825160e081018452815480825260018301549382019390935260028201549381018490526003820154606082015260048201546080820152600582015460a082015260069091015460c0820181905290926121ed928992909190899061287a565b93509350505094509492505050565b60026000541415612242576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b600260005560015461225e9062010000900460ff16601c614626565b612266614bf6565b61226f85614c12565b61227a848483614c75565b60015460408051634eae147d60e11b81526001600160a01b038881166004830152878116602483015286811660448301526064820186905284151560848301529151630100000090930490911691639d5c28fa9160a480820192600092909190829003018186803b1580156122ee57600080fd5b505afa158015612302573d6000803e3d6000fd5b50505050612310848461426a565b600061231e86868685611d03565b6000818152602b60205260408120919250836123425761233d86612be6565b61234b565b61234b86613fd9565b825490915061235c57600282018190555b81541580159061236c5750600085115b156123925761238c868360000154846002015487858a8860060154613b64565b60028301555b60006123ab898989888a88600001548960030154614d8a565b905060006123b8896146d2565b905060006123c68a83611b3b565b60018601549091506123d89082614b5a565b600186018190556123ed90841115601d614626565b60018501546123fc9084614bb4565b600186015561240c8a8a896136e4565b6003860155845461241d9089614b5a565b808655426006870155612433901515601e614626565b61244585600001548660010154614e58565b6124538b8b8b8a60016139b8565b505060006124618b8a6134c6565b60048701549091506124739082614b5a565b60048701556124828b82614e7c565b87156124c75761249b8b6124968b87614b5a565b614f1c565b6124a58b83614f9b565b6124af8b8461501a565b6124c28b6124bd8d876133da565b614861565b612533565b6001600160a01b038a166000908152602d6020526040902054612504576001600160a01b038a166000908152602e60205260409020859055612529565b61250f8a868b61340e565b6001600160a01b038b166000908152602e60205260409020555b6125338a8a615132565b604080518881526001600160a01b03808f166020830152808e16828401528c1660608201526080810184905260a081018b905289151560c082015260e08101879052610100810186905290517f2fe68525253654c21998f35787a8d0f361905ef647c854092430ab65f2f15022918190036101200190a1855460018701546002880154600389015460048a015460058b0154604080518e81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201879052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a15050600160005550505050505050505050565b6002546001600160a01b031681565b60008060008060008060008060006126648d8d8d8d611d03565b905061266e615f03565b602b60008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000808260a00151136126ee578160a001516000036126f4565b8160a001515b9050816000015182602001518360400151846060015185608001518560008860a0015112158860c001519a509a509a509a509a509a509a509a5050505094995094995094999196509450565b60276020526000908152604090205481565b6101f481565b600c5481565b602b602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949593949293919290919087565b6000806127aa86868686611d03565b90506127b4615f03565b506000818152602b6020908152604091829020825160e0810184528154815260018201549281018390526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c083015261281e9015156025614626565b6020810151815161283691906118809061271061455a565b979650505050505050565b60216020526000908152604090205481565b60196020526000908152604090205460ff1681565b60256020526000908152604090205481565b60008061288b600086116026614626565b6000846128a05761289b88613fd9565b6128a9565b6128a988612be6565b905060008187116128c3576128be8288614bb4565b6128cd565b6128cd8783614bb4565b905060006128df886118808b8561455a565b9050600087156128f257508783116128f7565b508288115b600061290e60105489614b5a90919063ffffffff16565b4211612932576001600160a01b038c166000908152601e6020526040902054612935565b60005b905081801561295857506129498b8261455a565b6129558461271061455a565b11155b1561296257600092505b509a909950975050505050505050565b600260005414156129b8576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b600260009081556001600160a01b0382168152601c60205260409020546129e39060ff16600e614626565b60006129ee826146d2565b90506129fe60008211600f614626565b612a08828261501a565b604080516001600160a01b03841681526020810183905281517fa5a389190ebf6170a133bda5c769b77f4d6715b8aa172ec0ddf8473d0b4944bd929181900390910190a150506001600055565b601860209081526000928352604080842090915290825290205460ff1681565b60075481565b602e6020526000908152604090205481565b600154630100000090046001600160a01b031681565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b620f424081565b612ae0614b41565b600180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b612b14614b41565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b612b3e614b41565b60018054612b529160ff9091161590614626565b6001805460ff191681179055600380546001600160a01b03199081166001600160a01b039889161790915560058054821696881696909617909555600480549095169390951692909217909255600991909155601355601455565b6004546001600160a01b031681565b600a5481565b612bca614b41565b60018054911515620100000262ff000019909216919091179055565b60048054601654604080516317e1d38560e11b81526001600160a01b038681169582019590955260006024820181905260ff80851615156044840152610100909404909316151560648201529051919390921691632fc3a70a916084808301926020929190829003018186803b158015612c5f57600080fd5b505afa158015612c73573d6000803e3d6000fd5b505050506040513d6020811015612c8957600080fd5b505192915050565b600060026000541415612cd9576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b6002600055612ce6614bf6565b612cef88614c12565b612cfe888888888888886151ed565b600160005598975050505050505050565b60236020526000908152604090205481565b612d29614b41565b6001600160a01b03909116600090815260276020526040902055565b600060026000541415612d8d576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b6002600055612d9a6145f5565b6001600160a01b0383166000908152601c6020526040902054612dc19060ff166010614626565b6016805461ff0019166101001790556000612ddb846146d2565b9050612deb600082116011614626565b612df5848561426a565b6000612e0085612be6565b90506000612e1e68327cb2734119d3b7a9601e1b611880858561455a565b600554909150612e3a90829088906001600160a01b0316612074565b9050612e4a600082116012614626565b60015460408051630f1e2bb760e31b81526001600160a01b03898116600483015260248201859052915160009363010000009004909216916378f15db891604480820192602092909190829003018186803b158015612ea857600080fd5b505afa158015612ebc573d6000803e3d6000fd5b505050506040513d6020811015612ed257600080fd5b505190506000612ee38886846149d2565b90506000612f0168327cb2734119d3b7a9601e1b611880848861455a565b600554909150612f1d9082908b906001600160a01b0316612074565b9050612f2989826156b0565b612f33898361501a565b600554604080516340c10f1960e01b81526001600160a01b038b8116600483015260248201859052915191909216916340c10f1991604480830192600092919082900301818387803b158015612f8857600080fd5b505af1158015612f9c573d6000803e3d6000fd5b5050604080516001600160a01b03808d1682528d1660208201528082018a9052606081018590526080810187905290517f2de7e0046c51567d81afaeb29981b87a4470ca1496850cdae633a300d1f9be5193509081900360a0019150a16016805461ff0019169055600160005598975050505050505050565b601e6020526000908152604090205481565b61302f614b41565b61303f610e10841015600a614626565b61304f612710831115600b614626565b61305f612710821115600c614626565b601292909255601355601455565b602d6020526000908152604090205481565b601d6020526000908152604090205481565b613099614b41565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60165462010000900460ff1681565b600060026000541415613112576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b600260005560015461312d90610100900460ff166017614626565b6001600160a01b0384166000908152601c60205260409020546131549060ff166018614626565b6001600160a01b0383166000908152601c602052604090205461317b9060ff166019614626565b61319b836001600160a01b0316856001600160a01b03161415601a614626565b6016805461ff0019166101001790556131b4848061426a565b6131be838461426a565b60006131c9856146d2565b90506131d960008211601b614626565b60006131e486612be6565b905060006131f186613fd9565b9050600061320382611880868661455a565b9050613210818989612074565b9050600061322e68327cb2734119d3b7a9601e1b611880878761455a565b60055490915061324a9082908b906001600160a01b0316612074565b60015460408051636d099c0b60e11b81526001600160a01b038d811660048301528c8116602483015260448201859052915193945060009363010000009093049091169163da13381691606480820192602092909190829003018186803b1580156132b457600080fd5b505afa1580156132c8573d6000803e3d6000fd5b505050506040513d60208110156132de57600080fd5b5051905060006132ef8a85846149d2565b90506132fb8b846156b0565b6133058a8461477f565b61330f8b8861501a565b6133198a85614861565b6133228a61576e565b61332d8a828b614a9a565b604080516001600160a01b03808c168252808e1660208301528c1681830152606081018990526080810186905260a0810183905260c0810184905290517f0874b2d545cb271cdbda4e093020c452328b24af12382ed62c4d00f5c26709db9181900360e00190a16016805461ff001916905560016000559a9950505050505050505050565b68327cb2734119d3b7a9601e1b81565b602f6020526000908152604090205481565b60125481565b6000816133e957506000611b88565b61210f83836133f786613fd9565b614230565b60246020526000908152604090205481565b6001600160a01b0383166000908152602d6020908152604080832054602e90925282205482858211613449576134448683614bb4565b613453565b6134538287614bb4565b9050600061346583611880868561455a565b905086831160006134768689614b5a565b905060008261348e576134898285614b5a565b613498565b6134988285614bb4565b90506134a8816118808c8561455a565b9b9a5050505050505050505050565b60115460ff1681565b600d5481565b6000816134d557506000611b88565b61210f83836133f786612be6565b6134eb614b41565b6001600160a01b03919091166000908152601a60205260409020805460ff1916911515919091179055565b6012546001600160a01b0382166000908152602a60205260408120549091429161353f91614b5a565b111561354d5750600061188a565b6012546001600160a01b0383166000908152602a6020526040812054909161357a91611880904290614bb4565b6001600160a01b038416600090815260256020526040902054909150806135a65760009250505061188a565b6001600160a01b0384166000908152601f602052604081205460ff166135ce576013546135d2565b6014545b6001600160a01b03861660009081526026602052604090205490915061360b90839061188090869061360590869061455a565b9061455a565b95945050505050565b60165460ff1681565b60226020526000908152604090205481565b60085481565b601654610100900460ff1681565b6001600160a01b0381166000908152601f602052604081205460ff161561368357506001600160a01b03811660009081526025602052604090205461188a565b6001600160a01b0382166000908152602860205260408120546136a79084906133da565b6001600160a01b038416600090815260266020908152604080832054602590925290912054919250611886916136de908490614b5a565b90614bb4565b6001546040805163b1cc53ab60e01b81526001600160a01b038681166004830152858116602483015284151560448301529151600093630100000090049092169163b1cc53ab91606480820192602092909190829003018186803b15801561374b57600080fd5b505afa15801561375f573d6000803e3d6000fd5b505050506040513d602081101561377557600080fd5b5051949350505050565b6001600160a01b0381166000908152602d60205260408120548190806137ac576000809250925050613812565b60006137b785613fd9565b6001600160a01b0386166000908152602e60205260408120549192508282116137e9576137e48383614bb4565b6137f3565b6137f38284614bb4565b9050600061380583611880878561455a565b9390921195509193505050505b915091565b60266020526000908152604090205481565b60135481565b60296020526000908152604090205481565b6001546040805163c7e074c360e01b81526001600160a01b03888116600483015260248201889052604482018790526064820186905284151560848301529151600093630100000090049092169163c7e074c39160a480820192602092909190829003018186803b1580156138b557600080fd5b505afa1580156138c9573d6000803e3d6000fd5b505050506040513d60208110156138df57600080fd5b50519695505050505050565b6138f3614b41565b6139076001600160a01b03831684836157e6565b505050565b613914614b41565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61393e614b41565b601755565b61394b614b41565b61395a61271082116002614626565b600855565b613967614b41565b6001600160a01b038216600090815260236020526040902054808211156139a15761399b836139968484614bb4565b6156b0565b506139b4565b613907836139af8385614bb4565b61477f565b5050565b6001546040805163d54d5a9f60e01b81526001600160a01b03888116600483015287811660248301528681166044830152851515606483015284151560848301528251600094859463010000009091049092169263d54d5a9f9260a4808301939192829003018186803b158015613a2e57600080fd5b505afa158015613a42573d6000803e3d6000fd5b505050506040513d6040811015613a5857600080fd5b508051602090910151909890975095505050505050565b602a6020526000908152604090205481565b60105481565b6001546040805163369d949360e21b81526001600160a01b0389811660048301528881166024830152878116604483015286151560648301526084820186905260a482018590529151600093630100000090049092169163da76524c9160c480820192602092909190829003018186803b158015613b0457600080fd5b505afa158015613b18573d6000803e3d6000fd5b505050506040513d6020811015613b2e57600080fd5b5051979650505050505050565b601c6020526000908152604090205460ff1681565b602080526000908152604090205460ff1681565b6000806000613b768a8a8a8a8861287a565b90925090506000613b878a87614b5a565b905060008815613bb65783613ba557613ba08284614bb4565b613baf565b613baf8284614b5a565b9050613bd7565b83613bca57613bc58284614b5a565b613bd4565b613bd48284614bb4565b90505b613be5816118808a8561455a565b9c9b505050505050505050505050565b60155481565b60026000541415613c41576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b60026000556016546301000000900460ff1615613c765733600090815260196020526040902054613c769060ff166022614626565b6016805460ff19169055613c8a848461426a565b6000613c9886868686611d03565b9050613ca2615f03565b506000818152602b6020908152604091829020825160e08101845281548082526001830154938201939093526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c0830152613d0e9015156023614626565b600080613d1f8989898960006139b8565b91509150613d3282600014156024614626565b8160021415613d6757613d4f898989600087600001518b8f6151ed565b50506016805460ff1916600117905550613fc7915050565b6000613d7389836133da565b6001600160a01b038a166000908152602c6020526040902054909150613d999082614b5a565b6001600160a01b038a166000818152602c602090815260409182902093909355805191825291810184905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a1613e04898560800151615838565b8615613e335760208401518451613e25918b91613e2091614bb4565b614f9b565b613e33896124bd8b856133da565b600087613e4857613e4389613fd9565b613e51565b613e5189612be6565b90507f2e1f85a64a2f22cf2f0c42584e7c919ed4abe8d53675cff0f62bf1e95a1c676f868c8c8c8c8a600001518b602001518c608001518d60a001518a604051808b81526020018a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b0316815260200187151581526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a187158015613f105750846020015183105b15613f3e576020850151600090613f279085614bb4565b9050613f3c8b613f378d846133da565b61501a565b505b87613f5157613f518986600001516158ef565b6000868152602b60205260408120818155600181018290556002810182905560038101829055600481018290556005810182905560060155600954613f9d908b906124bd9082906133da565b613fb38a613fad8c6009546133da565b89614a9a565b50506016805460ff19166001179055505050505b50506001600055505050565b600e5481565b60048054601654604080516317e1d38560e11b81526001600160a01b03868116958201959095526001602482015260ff80841615156044830152610100909304909216151560648301525160009390921691632fc3a70a91608480820192602092909190829003018186803b158015612c5f57600080fd5b601b818154811061405e57fe5b6000918252602090912001546001600160a01b0316905081565b614080614b41565b6001600160a01b0381166000908152601c60205260409020546140a79060ff16600d614626565b6001600160a01b0381166000908152602260205260409020546015546140cc91614bb4565b6015556001600160a01b0381166000908152601c60209081526040808320805460ff19908116909155601d835281842084905560228352818420849055601e835281842084905560248352818420849055601f835281842080548216905591805290912080549091169055600754614145906001614bb4565b60075550565b6005546001600160a01b031681565b614162614b41565b6001600160a01b039091166000908152602f6020526040902055565b60286020526000908152604090205481565b614198614b41565b6016805491151563010000000263ff00000019909216919091179055565b60006141c0614b41565b6001600160a01b0383166000908152602c6020526040902054806141e8576000915050611b88565b6001600160a01b0384166000908152602c602052604081205561210f848285614a9a565b601a6020526000908152604090205460ff1681565b6003546001600160a01b031681565b60008261423f5750600061210f565b6001600160a01b0384166000908152601d602052604090205461360b8361188086600a85900a61455a565b6001546040805163fbfded6d60e01b81526001600160a01b03858116600483015284811660248301529151600093630100000090049092169163fbfded6d9160448082019260209290919082900301818787803b1580156142ca57600080fd5b505af11580156142de573d6000803e3d6000fd5b505050506040513d60208110156142f457600080fd5b505190508061430357506139b4565b6001600160a01b0383166000908152602a6020526040902054614350576012546143319061360542826145b3565b6001600160a01b0384166000908152602a6020526040902055506139b4565b6012546001600160a01b0384166000908152602a602052604090205442916143789190614b5a565b111561438457506139b4565b600061438f84613516565b6001600160a01b0385166000908152602960205260409020549091506143b59082614b5a565b6001600160a01b0385166000908152602960205260409020556012546143df9061360542826145b3565b6001600160a01b0385166000818152602a602090815260408083209490945560298152908390205483519283529082015281517fa146fc154e1913322e9817d49f0d5c37466c24326e15de10e739a948be815eab929181900390910190a150505050565b610e1081565b6001546040805163fdaf6ac360e01b81526001600160a01b038881166004830152878116602483015286811660448301528515156064830152608482018590529151600093630100000090049092169163fdaf6ac39160a480820192602092909190829003018186803b1580156138b557600080fd5b60306020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156145525780601f1061452757610100808354040283529160200191614552565b820191906000526020600020905b81548152906001019060200180831161453557829003601f168201915b505050505081565b60008261456957506000611b88565b8282028284828161457657fe5b041461210f5760405162461bcd60e51b8152600401808060200182810382526021815260200180615f766021913960400191505060405180910390fd5b600061210f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250615957565b60165462010000900460ff161561462457336000908152601a60205260409020546146249060ff166036614626565b565b6000818152603060205260409020826139075760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156146c35780601f10614698576101008083540402835291602001916146c3565b820191906000526020600020905b8154815290600101906020018083116146a657829003601f168201915b50509250505060405180910390fd5b6001600160a01b03811660008181526021602090815260408083205481516370a0823160e01b8152306004820152915193949093859391926370a08231926024808301939192829003018186803b15801561472c57600080fd5b505afa158015614740573d6000803e3d6000fd5b505050506040513d602081101561475657600080fd5b50516001600160a01b03851660009081526021602052604090208190559050611e518183614bb4565b6001600160a01b0382166000908152602360205260409020548181116147fa576001600160a01b0383166000818152602360209081526040808320929092558151928352820183905280517f4cd0095bd565d45488212267145f37c5a223186512b169e04f24bc12a4f6b3079281900390910190a1506139b4565b6148048183614bb4565b6001600160a01b03841660008181526023602090815260409182902093909355805191825291810184905281517f4cd0095bd565d45488212267145f37c5a223186512b169e04f24bc12a4f6b307929181900390910190a1505050565b604080518082018252601a81527f5661756c743a20706f6f6c416d6f756e742065786365656465640000000000006020808301919091526001600160a01b0385166000908152602590915291909120546148bc9183906159f9565b6001600160a01b038316600090815260256020908152604080832084905560269091529020546148ef9110156032614626565b604080516001600160a01b03841681526020810183905281517f112726233fbeaeed0f5b1dba5cb0b2b81883dee49fb35ff99fd98ed9f6d31eb0929181900390910190a15050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561498657600080fd5b505afa15801561499a573d6000803e3d6000fd5b505050506040513d60208110156149b057600080fd5b50516001600160a01b0390921660009081526021602052604090209190915550565b6000806149ef6127106118806149e88287614bb4565b879061455a565b905060006149fd8583614bb4565b6001600160a01b0387166000908152602c6020526040902054909150614a239082614b5a565b6001600160a01b0387166000908152602c60205260409020557f47cd9dda0e50ce30bcaaacd0488452b596221c07ac402a581cfae4d3933cac2b86614a688184611b3b565b604080516001600160a01b0390931683526020830191909152818101849052519081900360600190a150949350505050565b614aae6001600160a01b03841682846157e6565b604080516370a0823160e01b815230600482015290516001600160a01b038516916370a08231916024808301926020929190829003018186803b158015614af457600080fd5b505afa158015614b08573d6000803e3d6000fd5b505050506040513d6020811015614b1e57600080fd5b50516001600160a01b039093166000908152602160205260409020929092555050565b600654614624906001600160a01b031633146035614626565b60008282018381101561210f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061210f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506159f9565b601754614c0257614624565b6146246017543a11156037614626565b336001600160a01b0382161415614c2857614c72565b6003546001600160a01b0316331415614c4057614c72565b6001600160a01b0381166000908152601860209081526040808320338452909152902054614c729060ff166029614626565b50565b8015614cee57614c9a826001600160a01b0316846001600160a01b031614602a614626565b6001600160a01b0383166000908152601c6020526040902054614cc19060ff16602b614626565b6001600160a01b0383166000908152601f6020526040902054614ce99060ff1615602c614626565b613907565b6001600160a01b0383166000908152601c6020526040902054614d159060ff16602d614626565b6001600160a01b0383166000908152601f6020526040902054614d3c9060ff16602e614626565b6001600160a01b0382166000908152601f6020526040902054614d649060ff1615602f614626565b6001600160a01b03821660009081526020805260409020546139079060ff166030614626565b600080614d9a8989898989614449565b90506000614dac8a8a8a8a8989613a87565b9050614db88282614b5a565b91506000614dc68a846133da565b6001600160a01b038b166000908152602c6020526040902054909150614dec9082614b5a565b6001600160a01b038b166000818152602c602090815260409182902093909355805191825291810185905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a150909998505050505050505050565b81614e6e57614e6981156027614626565b6139b4565b6139b4818310156028614626565b6001600160a01b038216600090815260266020526040902054614e9f9082614b5a565b6001600160a01b038316600090815260266020818152604080842085905560258252909220549152614ed49111156034614626565b604080516001600160a01b03841681526020810183905281517faa5649d82f5462be9d19b0f2b31a59b2259950a6076550bac9f3a1c07db9f66d929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614f3f9082614b5a565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517fd9d4761f75e0d0103b5cbeab941eeb443d7a56a35b5baf2a0787c03f03f4e474929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614fbe9082614bb4565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517f34e07158b9db50df5613e591c44ea2ebc82834eff4a4dc3a46e000e608261d68929181900390910190a15050565b6001600160a01b03821660009081526025602052604090205461503d9082614b5a565b6001600160a01b03831660008181526025602090815260408083209490945583516370a0823160e01b8152306004820152935191936370a082319260248083019392829003018186803b15801561509357600080fd5b505afa1580156150a7573d6000803e3d6000fd5b505050506040513d60208110156150bd57600080fd5b50516001600160a01b0384166000908152602560205260409020549091506150e9908210156031614626565b604080516001600160a01b03851681526020810184905281517f976177fbe09a15e5e43f848844963a42b41ef919ef17ff21a17a5421de8f4737929181900390910190a1505050565b6001600160a01b0382166000908152602d60205260409020546151559082614b5a565b6001600160a01b0383166000908152602d6020908152604080832093909355602f905220548015613907576001600160a01b0383166000908152602d6020526040902054811015613907576040805162461bcd60e51b815260206004820152601a60248201527f5661756c743a206d61782073686f727473206578636565646564000000000000604482015290519081900360640190fd5b600154604080516381d11a2360e01b81526001600160a01b038a8116600483015289811660248301528881166044830152606482018890526084820187905285151560a483015284811660c4830152915160009363010000009004909216916381d11a239160e4808201928692909190829003018186803b15801561527157600080fd5b505afa158015615285573d6000803e3d6000fd5b50505050615293878761426a565b60006152a189898987611d03565b6000818152602b602052604090208054919250906152c2901515601f614626565b6152d486826000015410156020614626565b6152e687826001015410156021614626565b60018101548154600483015460009161530391611880908b61455a565b60048401549091506153159082614bb4565b60048401556153248b82615838565b506000806153368d8d8d8d8d8d615a53565b8554919350915089146154da5761534e8c8c8a6136e4565b6003850155835461535f908a614bb4565b80855560018501546153719190614e58565b61537f8d8d8d8b60016139b8565b505087156153ac576153a28c612496866001015486614bb490919063ffffffff16565b6153ac8c8a614f9b565b6000886153c1576153bc8c613fd9565b6153ca565b6153ca8c612be6565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886153ff8c8c614bb4565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201839052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a15061564e565b87156154f4576154ea8c84614f1c565b6154f48c8a614f9b565b600088615509576155048c613fd9565b615512565b6155128c612be6565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886155478c8c614bb4565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c0830152517f73af1d417d82c240fdb6d319b34ad884487c6bf2845d98980cc52ad9171cb4559181900360e00190a1506000858152602b602052604081208181556001810182905560028101829055600381018290556004810182905560058101829055600601555b8761565d5761565d8b8a6158ef565b811561569d578715615677576156778c6124bd8e856133da565b60006156838d836133da565b90506156908d828a614a9a565b9550612836945050505050565b5060009c9b505050505050505050505050565b6001600160a01b0382166000908152602360205260409020546156d39082614b5a565b6001600160a01b0383166000908152602360209081526040808320939093556024905220548015615725576001600160a01b038316600090815260236020526040902054615725908210156033614626565b604080516001600160a01b03851681526020810184905281517f8734a535d62699174c322d74d291c6053308a8caf79759684f44851562dc5cce929181900390910190a1505050565b6001600160a01b0381166000908152602760209081526040808320546025909252909120541015614c72576040805162461bcd60e51b815260206004820152601a60248201527f5661756c743a20706f6f6c416d6f756e74203c20627566666572000000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052613907908490615c4d565b604080518082018252601b81527f5661756c743a20696e73756666696369656e74207265736572766500000000006020808301919091526001600160a01b0385166000908152602690915291909120546158939183906159f9565b6001600160a01b03831660008181526026602090815260409182902093909355805191825291810183905281517f533cb5ed32be6a90284e96b5747a1bfc2d38fdb5768a6b5f67ff7d62144ed67b929181900390910190a15050565b6001600160a01b0382166000908152602d60205260409020548082111561592f57506001600160a01b0382166000908152602d60205260408120556139b4565b6159398183614bb4565b6001600160a01b0384166000908152602d6020526040902055505050565b600081836159e35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156159a8578181015183820152602001615990565b50505050905090810190601f1680156159d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816159ef57fe5b0495945050505050565b60008184841115615a4b5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156159a8578181015183820152602001615990565b505050900390565b6000806000615a6489898987611d03565b6000818152602b60205260408120805460038201549394509092615a91918d918d918d918b918d91614d8a565b9050600080600080615ab28d876000015488600201548d8a6006015461287a565b87549195508593509150615aca906118808d8461455a565b925050506000828015615add5750600082115b15615b0d5750600584018054820190558088615b0d576000615aff8e846133da565b9050615b0b8e82614861565b505b82158015615b1b5750600082115b15615b5f576001850154615b2f9083614bb4565b600186015588615b53576000615b458e846133da565b9050615b518e8261501a565b505b60058501805483900390555b8a15615b8757615b6f818c614b5a565b6001860154909150615b81908c614bb4565b60018601555b84548a1415615baa576001850154615ba0908290614b5a565b6000600187015590505b8084811115615bc457615bbd8286614bb4565b9050615bf8565b6001860154615bd39086614bb4565b60018701558915615bf8576000615bea8f876133da565b9050615bf68f82614861565b505b60408051888152851515602082015280820185905290517f3ff41bdde87755b687ae83d0221a232b6be51a803330ed9661c1b5d0105e0d8a9181900360600190a1909e909d509b505050505050505050505050565b6060615ca2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316615cfe9092919063ffffffff16565b80519091501561390757808060200190516020811015615cc157600080fd5b50516139075760405162461bcd60e51b815260040180806020018281038252602a815260200180615f97602a913960400191505060405180910390fd5b6060611e51848460008585615d1285615e19565b615d63576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310615da25780518252601f199092019160209182019101615d83565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615e04576040519150601f19603f3d011682016040523d82523d6000602084013e615e09565b606091505b5091509150612836828286615e1f565b3b151590565b60608315615e2e57508161210f565b825115615e3e5782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156159a8578181015183820152602001615990565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615ec65782800160ff19823516178555615ef3565b82800160010185558215615ef3579182015b82811115615ef3578235825591602001919060010190615ed8565b50615eff929150615f40565b5090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b5b80821115615eff5760008155600101615f4156fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c634300060c000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106106595760003560e01c80638585f4d211610349578063c7e074c3116101bf578063df73a26711610105578063f2555278116100a8578063f255527814611692578063f3ae2415146116c0578063f887ea40146116e6578063fa12dbc0146116ee578063fbfded6d14611720578063fce28c101461174e578063fdaf6ac314611756578063fed1a6061461179a57610659565b8063df73a267146115a8578063e124e6d2146115b0578063e468baf0146115d6578063e67f59a7146115f3578063ee138d0f14611619578063efa10a6e14611621578063f07456ce1461164d578063f07bbf771461167357610659565b8063d8f897c31161016d578063d8f897c314611448578063d9ac42251461146e578063da76524c14611476578063daf9c210146114c0578063db3555fb146114e6578063db97495f1461150c578063dc8f5fac14611558578063de2ea9481461156057610659565b8063c7e074c3146112e7578063cea0c32814611327578063cfad57a21461135d578063d2fa635e14611383578063d3127e63146113a0578063d45200d1146113bd578063d54d5a9f146113e957610659565b80639d7432ca1161028f578063ae3302c211610232578063ae3302c2146111ff578063b06423f314611207578063b136ca491461120f578063b1cc53ab14611235578063b364accb1461126d578063c3c7b9e914611293578063c4f718bf146112b9578063c65bc7b1146112c157610659565b80639d7432ca1461110f5780639f392eb314611141578063a22f239214611149578063a42ab3d214611151578063a5e90eee1461117d578063a93acac2146111ab578063ab08c1c6146111d1578063ab2f3ad4146111d957610659565b80638f7b8404116102f75780638f7b8404146110215780639060b1ca14611047578063933162121461104f57806395082d25146110875780639698d25a1461108f5780639849e412146110b55780639899cd02146110bd5780639acc6b33146110e957610659565b80638585f4d214610f2c57806386284f5f14610f5857806388b1fbdf14610f865780638a27d46814610fac5780638a39735a146107085780638a78daa814610fd55780638ee573ac14610ffb57610659565b806342b60b03116104de5780635f7bc11911610424578063724e78da116103c7578063724e78da14610def578063728cdbca14610e15578063741bef1a14610e5d5780637a210a2b14610e655780637c2eb9f714610e6d57806381a612d614610e8c57806382a0849014610eb257806383867b2d14610f0657610659565b80635f7bc11914610d115780636092219914610d3757806362287a3214610d655780636274980314610d6d5780636abbe0c814610d935780636ae0b15414610d9b5780636be6026b14610dc157806371089f4d14610dc957610659565b80634befe2ca1161048c5780634befe2ca14610bbc5780634d47b30414610bc4578063514ea4bf14610bcc57806351723e8214610c21578063523fba7f14610c5f578063529a356f14610c8557806352f55eed14610cab5780635c07eaab14610cd157610659565b806342b60b0314610a1c5780634453a37414610a4257806345a6f37014610a7057806348d91abf14610ac957806348f35cbb14610b0d5780634a3f088d14610b155780634a993ee914610b9657610659565b806329ff9615116105a3578063351a964d11610551578063351a964d1461090357806337af6e7e1461090b578063392e53cd146109315780633c5a6e35146109395780633de39c11146109875780633e72a2621461098f57806340eb38021461099757806342152873146109e857610659565b806329ff9615146108445780632c668ec11461086a5780632d4b057614610896578063302a8141146108d457806330455ede146108dc578063318bc689146108fb57806334c1557d1461070857610659565b806312d43a511161060b57806312d43a5114610710578063134ca63b14610734578063174d26941461073c578063181e210e146107445780631ce9cb8f1461076057806324b0c04d1461078657806324ca984e146107a757806328e67be5146107cd57610659565b806304fef1db1461065e57806307c58752146106965780630842b0761461069e5780630928a4f8146106a65780630a48d5a9146106d457806310eb56c214610700578063126082cf14610708575b600080fd5b6106846004803603602081101561067457600080fd5b50356001600160a01b031661182c565b60408051918252519081900360200190f35b61068461188f565b6106846118a1565b610684600480360360408110156106bc57600080fd5b506001600160a01b03813581169160200135166118a7565b610684600480360360408110156106ea57600080fd5b506001600160a01b038135169060200135611b3b565b610684611b8e565b610684611b94565b610718611b9a565b604080516001600160a01b039092168252519081900360200190f35b610684611ba9565b610684611baf565b61074c611bb5565b604080519115158252519081900360200190f35b6106846004803603602081101561077657600080fd5b50356001600160a01b0316611bc5565b6107a56004803603602081101561079c57600080fd5b50351515611bd7565b005b6107a5600480360360208110156107bd57600080fd5b50356001600160a01b0316611bfb565b6107a5600480360360408110156107e357600080fd5b8135919081019060408101602082013564010000000081111561080557600080fd5b82018360208201111561081757600080fd5b8035906020019184600183028401116401000000008311171561083957600080fd5b509092509050611c2c565b6106846004803603602081101561085a57600080fd5b50356001600160a01b0316611caa565b6106846004803603604081101561088057600080fd5b506001600160a01b038135169060200135611cbe565b610684600480360360808110156108ac57600080fd5b506001600160a01b038135811691602081013582169160408201351690606001351515611d03565b610684611d5e565b6107a5600480360360208110156108f257600080fd5b50351515611d63565b610684611d85565b61074c611d8b565b6106846004803603602081101561092157600080fd5b50356001600160a01b0316611d99565b61074c611e59565b6107a5600480360360e081101561094f57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a081013515159060c001351515611e62565b610684611fa4565b61074c611faa565b6107a560048036036101208110156109ae57600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c08101359060e08101359061010001351515611fb9565b610684600480360360608110156109fe57600080fd5b508035906001600160a01b0360208201358116916040013516612074565b61074c60048036036020811015610a3257600080fd5b50356001600160a01b0316612116565b6107a560048036036040811015610a5857600080fd5b506001600160a01b038135169060200135151561212b565b610aae60048036036080811015610a8657600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561215e565b60408051921515835260208301919091528051918290030190f35b6107a5600480360360a0811015610adf57600080fd5b506001600160a01b0381358116916020810135821691604082013516906060810135906080013515156121fc565b61071861263b565b610b5360048036036080811015610b2b57600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561264a565b604080519889526020890197909752878701959095526060870193909352608086019190915260a0850152151560c084015260e083015251908190036101000190f35b61068460048036036020811015610bac57600080fd5b50356001600160a01b0316612740565b610684612752565b610684612758565b610be960048036036020811015610be257600080fd5b503561275e565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b61068460048036036080811015610c3757600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561279b565b61068460048036036020811015610c7557600080fd5b50356001600160a01b0316612841565b61074c60048036036020811015610c9b57600080fd5b50356001600160a01b0316612853565b61068460048036036020811015610cc157600080fd5b50356001600160a01b0316612868565b610aae600480360360a0811015610ce757600080fd5b506001600160a01b038135169060208101359060408101359060608101351515906080013561287a565b6107a560048036036020811015610d2757600080fd5b50356001600160a01b0316612972565b61074c60048036036040811015610d4d57600080fd5b506001600160a01b0381358116916020013516612a55565b610684612a75565b61068460048036036020811015610d8357600080fd5b50356001600160a01b0316612a7b565b610718612a8d565b6107a560048036036020811015610db157600080fd5b50356001600160a01b0316612aa3565b610684612ad1565b6107a560048036036020811015610ddf57600080fd5b50356001600160a01b0316612ad8565b6107a560048036036020811015610e0557600080fd5b50356001600160a01b0316612b0c565b6107a5600480360360c0811015610e2b57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a00135612b36565b610718612bad565b610684612bbc565b6107a560048036036020811015610e8357600080fd5b50351515612bc2565b61068460048036036020811015610ea257600080fd5b50356001600160a01b0316612be6565b610684600480360360e0811015610ec857600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516612c91565b61068460048036036020811015610f1c57600080fd5b50356001600160a01b0316612d0f565b6107a560048036036040811015610f4257600080fd5b506001600160a01b038135169060200135612d21565b61068460048036036040811015610f6e57600080fd5b506001600160a01b0381358116916020013516612d45565b61068460048036036020811015610f9c57600080fd5b50356001600160a01b0316613015565b6107a560048036036060811015610fc257600080fd5b5080359060208101359060400135613027565b61068460048036036020811015610feb57600080fd5b50356001600160a01b031661306d565b6106846004803603602081101561101157600080fd5b50356001600160a01b031661307f565b6107a56004803603602081101561103757600080fd5b50356001600160a01b0316613091565b61074c6130bb565b6106846004803603606081101561106557600080fd5b506001600160a01b0381358116916020810135821691604090910135166130ca565b6106846133b2565b610684600480360360208110156110a557600080fd5b50356001600160a01b03166133c2565b6106846133d4565b610684600480360360408110156110d357600080fd5b506001600160a01b0381351690602001356133da565b610684600480360360208110156110ff57600080fd5b50356001600160a01b03166133fc565b6106846004803603606081101561112557600080fd5b506001600160a01b03813516906020810135906040013561340e565b61074c6134b7565b6106846134c0565b6106846004803603604081101561116757600080fd5b506001600160a01b0381351690602001356134c6565b6107a56004803603604081101561119357600080fd5b506001600160a01b03813516906020013515156134e3565b610684600480360360208110156111c157600080fd5b50356001600160a01b0316613516565b61074c613614565b610684600480360360208110156111ef57600080fd5b50356001600160a01b031661361d565b61068461362f565b61074c613635565b6106846004803603602081101561122557600080fd5b50356001600160a01b0316613643565b6106846004803603606081101561124b57600080fd5b506001600160a01b0381358116916020810135909116906040013515156136e4565b610aae6004803603602081101561128357600080fd5b50356001600160a01b031661377f565b610684600480360360208110156112a957600080fd5b50356001600160a01b0316613817565b610684613829565b610684600480360360208110156112d757600080fd5b50356001600160a01b031661382f565b610684600480360360a08110156112fd57600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608001351515613841565b6107a56004803603606081101561133d57600080fd5b506001600160a01b038135811691602081013590911690604001356138eb565b6107a56004803603602081101561137357600080fd5b50356001600160a01b031661390c565b6107a56004803603602081101561139957600080fd5b5035613936565b6107a5600480360360208110156113b657600080fd5b5035613943565b6107a5600480360360408110156113d357600080fd5b506001600160a01b03813516906020013561395f565b61142f600480360360a08110156113ff57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101351515906080013515156139b8565b6040805192835260208301919091528051918290030190f35b6106846004803603602081101561145e57600080fd5b50356001600160a01b0316613a6f565b610684613a81565b610684600480360360c081101561148c57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060808101359060a00135613a87565b61074c600480360360208110156114d657600080fd5b50356001600160a01b0316613b3b565b61074c600480360360208110156114fc57600080fd5b50356001600160a01b0316613b50565b610684600480360360e081101561152257600080fd5b506001600160a01b0381351690602081013590604081013590606081013515159060808101359060a08101359060c00135613b64565b610684613bf5565b6107a5600480360360a081101561157657600080fd5b506001600160a01b03813581169160208101358216916040820135811691606081013515159160809091013516613bfb565b610684613fd3565b610684600480360360208110156115c657600080fd5b50356001600160a01b0316613fd9565b610718600480360360208110156115ec57600080fd5b5035614051565b6107a56004803603602081101561160957600080fd5b50356001600160a01b0316614078565b61071861414b565b6107a56004803603604081101561163757600080fd5b506001600160a01b03813516906020013561415a565b6106846004803603602081101561166357600080fd5b50356001600160a01b031661417e565b6107a56004803603602081101561168957600080fd5b50351515614190565b610684600480360360408110156116a857600080fd5b506001600160a01b03813581169160200135166141b6565b61074c600480360360208110156116d657600080fd5b50356001600160a01b031661420c565b610718614221565b6106846004803603606081101561170457600080fd5b506001600160a01b038135169060208101359060400135614230565b6107a56004803603604081101561173657600080fd5b506001600160a01b038135811691602001351661426a565b610684614443565b610684600480360360a081101561176c57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060800135614449565b6117b7600480360360208110156117b057600080fd5b50356144bf565b6040805160208082528351818301528351919283929083019185019080838360005b838110156117f15781810151838201526020016117d9565b50505050905090810190601f16801561181e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600160a01b0381166000908152602560205260408120548061185457600091505061188a565b6001600160a01b03831660009081526026602052604090205461188690829061188090620f424061455a565b906145b3565b9150505b919050565b6d04ee2d6d415b85acef810000000081565b601b5490565b6000600260005414156118ef576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b60026000556118fc6145f5565b6001600160a01b0383166000908152601c60205260409020546119239060ff166013614626565b6016805461ff00191661010017905560055460009061194a906001600160a01b03166146d2565b905061195a600082116014614626565b611964848561426a565b60006119708583611cbe565b9050611980600082116015614626565b61198a858361477f565b6119948582614861565b60055460408051632770a7eb60e21b81523060048201526024810185905290516001600160a01b0390921691639dc29fac9160448082019260009290919082900301818387803b1580156119e757600080fd5b505af11580156119fb573d6000803e3d6000fd5b5050600554611a1592506001600160a01b03169050614937565b600154604080516310d5486360e21b81526001600160a01b0388811660048301526024820186905291516000936301000000900490921691634355218c91604480820192602092909190829003018186803b158015611a7357600080fd5b505afa158015611a87573d6000803e3d6000fd5b505050506040513d6020811015611a9d57600080fd5b505190506000611aae8784846149d2565b9050611abe600082116016614626565b611ac9878288614a9a565b604080516001600160a01b03808916825289166020820152808201869052606081018390526080810184905290517f52eb5f5cb9a498f7cf35a2e264fbe42a9401185a0fd345d5d2c8932a2a45b1ae9181900360a00190a16016805461ff001916905560016000559695505050505050565b600081611b4a57506000611b88565b6000611b5584612be6565b6001600160a01b0385166000908152601d6020526040902054909150611b83600a82900a611880868561455a565b925050505b92915050565b600b5481565b61271081565b6006546001600160a01b031681565b60145481565b60095481565b6016546301000000900460ff1681565b602c6020526000908152604090205481565b611bdf614b41565b60168054911515620100000262ff000019909216919091179055565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6002546001600160a01b03163314611c8b576040805162461bcd60e51b815260206004820152601e60248201527f5661756c743a20696e76616c6964206572726f72436f6e74726f6c6c65720000604482015290519081900360640190fd5b6000838152603060205260409020611ca4908383615e85565b50505050565b6000611b8882611cb984613643565b611b3b565b600080611cca84613fd9565b90506000611ce8826118808668327cb2734119d3b7a9601e1b61455a565b600554909150611b839082906001600160a01b031687612074565b604080516bffffffffffffffffffffffff19606096871b811660208084019190915295871b811660348301529390951b9092166048850152151560f81b605c8401528051603d818503018152605d9093019052815191012090565b601281565b611d6b614b41565b600180549115156101000261ff0019909216919091179055565b600f5481565b600154610100900460ff1681565b600080600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611dea57600080fd5b505afa158015611dfe573d6000803e3d6000fd5b505050506040513d6020811015611e1457600080fd5b5051905080611e2757600091505061188a565b6001600160a01b038316600090815260226020526040902054601554611e5190611880838561455a565b949350505050565b60015460ff1681565b611e6a614b41565b6001600160a01b0387166000908152601c602052604090205460ff16611ee757600754611e98906001614b5a565b600755601b80546001810182556000919091527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b0319166001600160a01b0389161790555b6015546001600160a01b038816600090815260226020526040902054611f0e908290614bb4565b6001600160a01b0389166000908152601c602090815260408083208054600160ff1991821617909155601d83528184208c9055602283528184208b9055601e83528184208a905560248352818420899055601f83528184208054821689151517905591805290912080549091168415151790559050611f8d8187614b5a565b601555611f9988613fd9565b505050505050505050565b60175481565b60015462010000900460ff1681565b611fc1614b41565b611fd16101f48a11156003614626565b611fe16101f48911156004614626565b611ff16101f48811156005614626565b6120016101f48711156006614626565b6120116101f48611156007614626565b6120216101f48511156008614626565b61203d6d04ee2d6d415b85acef81000000008411156009614626565b600a98909855600b96909655600c94909455600d92909255600e55600f556009556010556011805460ff1916911515919091179055565b60055460009081906001600160a01b038581169116146120ac576001600160a01b0384166000908152601d60205260409020546120af565b60125b6005549091506000906001600160a01b038581169116146120e8576001600160a01b0384166000908152601d60205260409020546120eb565b60125b905061210a82600a0a61188083600a0a8961455a90919063ffffffff16565b925050505b9392505050565b601f6020526000908152604090205460ff1681565b612133614b41565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b600080600061216f87878787611d03565b9050612179615f03565b506000818152602b6020908152604091829020825160e081018452815480825260018301549382019390935260028201549381018490526003820154606082015260048201546080820152600582015460a082015260069091015460c0820181905290926121ed928992909190899061287a565b93509350505094509492505050565b60026000541415612242576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b600260005560015461225e9062010000900460ff16601c614626565b612266614bf6565b61226f85614c12565b61227a848483614c75565b60015460408051634eae147d60e11b81526001600160a01b038881166004830152878116602483015286811660448301526064820186905284151560848301529151630100000090930490911691639d5c28fa9160a480820192600092909190829003018186803b1580156122ee57600080fd5b505afa158015612302573d6000803e3d6000fd5b50505050612310848461426a565b600061231e86868685611d03565b6000818152602b60205260408120919250836123425761233d86612be6565b61234b565b61234b86613fd9565b825490915061235c57600282018190555b81541580159061236c5750600085115b156123925761238c868360000154846002015487858a8860060154613b64565b60028301555b60006123ab898989888a88600001548960030154614d8a565b905060006123b8896146d2565b905060006123c68a83611b3b565b60018601549091506123d89082614b5a565b600186018190556123ed90841115601d614626565b60018501546123fc9084614bb4565b600186015561240c8a8a896136e4565b6003860155845461241d9089614b5a565b808655426006870155612433901515601e614626565b61244585600001548660010154614e58565b6124538b8b8b8a60016139b8565b505060006124618b8a6134c6565b60048701549091506124739082614b5a565b60048701556124828b82614e7c565b87156124c75761249b8b6124968b87614b5a565b614f1c565b6124a58b83614f9b565b6124af8b8461501a565b6124c28b6124bd8d876133da565b614861565b612533565b6001600160a01b038a166000908152602d6020526040902054612504576001600160a01b038a166000908152602e60205260409020859055612529565b61250f8a868b61340e565b6001600160a01b038b166000908152602e60205260409020555b6125338a8a615132565b604080518881526001600160a01b03808f166020830152808e16828401528c1660608201526080810184905260a081018b905289151560c082015260e08101879052610100810186905290517f2fe68525253654c21998f35787a8d0f361905ef647c854092430ab65f2f15022918190036101200190a1855460018701546002880154600389015460048a015460058b0154604080518e81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201879052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a15050600160005550505050505050505050565b6002546001600160a01b031681565b60008060008060008060008060006126648d8d8d8d611d03565b905061266e615f03565b602b60008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000808260a00151136126ee578160a001516000036126f4565b8160a001515b9050816000015182602001518360400151846060015185608001518560008860a0015112158860c001519a509a509a509a509a509a509a509a5050505094995094995094999196509450565b60276020526000908152604090205481565b6101f481565b600c5481565b602b602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949593949293919290919087565b6000806127aa86868686611d03565b90506127b4615f03565b506000818152602b6020908152604091829020825160e0810184528154815260018201549281018390526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c083015261281e9015156025614626565b6020810151815161283691906118809061271061455a565b979650505050505050565b60216020526000908152604090205481565b60196020526000908152604090205460ff1681565b60256020526000908152604090205481565b60008061288b600086116026614626565b6000846128a05761289b88613fd9565b6128a9565b6128a988612be6565b905060008187116128c3576128be8288614bb4565b6128cd565b6128cd8783614bb4565b905060006128df886118808b8561455a565b9050600087156128f257508783116128f7565b508288115b600061290e60105489614b5a90919063ffffffff16565b4211612932576001600160a01b038c166000908152601e6020526040902054612935565b60005b905081801561295857506129498b8261455a565b6129558461271061455a565b11155b1561296257600092505b509a909950975050505050505050565b600260005414156129b8576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b600260009081556001600160a01b0382168152601c60205260409020546129e39060ff16600e614626565b60006129ee826146d2565b90506129fe60008211600f614626565b612a08828261501a565b604080516001600160a01b03841681526020810183905281517fa5a389190ebf6170a133bda5c769b77f4d6715b8aa172ec0ddf8473d0b4944bd929181900390910190a150506001600055565b601860209081526000928352604080842090915290825290205460ff1681565b60075481565b602e6020526000908152604090205481565b600154630100000090046001600160a01b031681565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b620f424081565b612ae0614b41565b600180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b612b14614b41565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b612b3e614b41565b60018054612b529160ff9091161590614626565b6001805460ff191681179055600380546001600160a01b03199081166001600160a01b039889161790915560058054821696881696909617909555600480549095169390951692909217909255600991909155601355601455565b6004546001600160a01b031681565b600a5481565b612bca614b41565b60018054911515620100000262ff000019909216919091179055565b60048054601654604080516317e1d38560e11b81526001600160a01b038681169582019590955260006024820181905260ff80851615156044840152610100909404909316151560648201529051919390921691632fc3a70a916084808301926020929190829003018186803b158015612c5f57600080fd5b505afa158015612c73573d6000803e3d6000fd5b505050506040513d6020811015612c8957600080fd5b505192915050565b600060026000541415612cd9576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b6002600055612ce6614bf6565b612cef88614c12565b612cfe888888888888886151ed565b600160005598975050505050505050565b60236020526000908152604090205481565b612d29614b41565b6001600160a01b03909116600090815260276020526040902055565b600060026000541415612d8d576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b6002600055612d9a6145f5565b6001600160a01b0383166000908152601c6020526040902054612dc19060ff166010614626565b6016805461ff0019166101001790556000612ddb846146d2565b9050612deb600082116011614626565b612df5848561426a565b6000612e0085612be6565b90506000612e1e68327cb2734119d3b7a9601e1b611880858561455a565b600554909150612e3a90829088906001600160a01b0316612074565b9050612e4a600082116012614626565b60015460408051630f1e2bb760e31b81526001600160a01b03898116600483015260248201859052915160009363010000009004909216916378f15db891604480820192602092909190829003018186803b158015612ea857600080fd5b505afa158015612ebc573d6000803e3d6000fd5b505050506040513d6020811015612ed257600080fd5b505190506000612ee38886846149d2565b90506000612f0168327cb2734119d3b7a9601e1b611880848861455a565b600554909150612f1d9082908b906001600160a01b0316612074565b9050612f2989826156b0565b612f33898361501a565b600554604080516340c10f1960e01b81526001600160a01b038b8116600483015260248201859052915191909216916340c10f1991604480830192600092919082900301818387803b158015612f8857600080fd5b505af1158015612f9c573d6000803e3d6000fd5b5050604080516001600160a01b03808d1682528d1660208201528082018a9052606081018590526080810187905290517f2de7e0046c51567d81afaeb29981b87a4470ca1496850cdae633a300d1f9be5193509081900360a0019150a16016805461ff0019169055600160005598975050505050505050565b601e6020526000908152604090205481565b61302f614b41565b61303f610e10841015600a614626565b61304f612710831115600b614626565b61305f612710821115600c614626565b601292909255601355601455565b602d6020526000908152604090205481565b601d6020526000908152604090205481565b613099614b41565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60165462010000900460ff1681565b600060026000541415613112576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b600260005560015461312d90610100900460ff166017614626565b6001600160a01b0384166000908152601c60205260409020546131549060ff166018614626565b6001600160a01b0383166000908152601c602052604090205461317b9060ff166019614626565b61319b836001600160a01b0316856001600160a01b03161415601a614626565b6016805461ff0019166101001790556131b4848061426a565b6131be838461426a565b60006131c9856146d2565b90506131d960008211601b614626565b60006131e486612be6565b905060006131f186613fd9565b9050600061320382611880868661455a565b9050613210818989612074565b9050600061322e68327cb2734119d3b7a9601e1b611880878761455a565b60055490915061324a9082908b906001600160a01b0316612074565b60015460408051636d099c0b60e11b81526001600160a01b038d811660048301528c8116602483015260448201859052915193945060009363010000009093049091169163da13381691606480820192602092909190829003018186803b1580156132b457600080fd5b505afa1580156132c8573d6000803e3d6000fd5b505050506040513d60208110156132de57600080fd5b5051905060006132ef8a85846149d2565b90506132fb8b846156b0565b6133058a8461477f565b61330f8b8861501a565b6133198a85614861565b6133228a61576e565b61332d8a828b614a9a565b604080516001600160a01b03808c168252808e1660208301528c1681830152606081018990526080810186905260a0810183905260c0810184905290517f0874b2d545cb271cdbda4e093020c452328b24af12382ed62c4d00f5c26709db9181900360e00190a16016805461ff001916905560016000559a9950505050505050505050565b68327cb2734119d3b7a9601e1b81565b602f6020526000908152604090205481565b60125481565b6000816133e957506000611b88565b61210f83836133f786613fd9565b614230565b60246020526000908152604090205481565b6001600160a01b0383166000908152602d6020908152604080832054602e90925282205482858211613449576134448683614bb4565b613453565b6134538287614bb4565b9050600061346583611880868561455a565b905086831160006134768689614b5a565b905060008261348e576134898285614b5a565b613498565b6134988285614bb4565b90506134a8816118808c8561455a565b9b9a5050505050505050505050565b60115460ff1681565b600d5481565b6000816134d557506000611b88565b61210f83836133f786612be6565b6134eb614b41565b6001600160a01b03919091166000908152601a60205260409020805460ff1916911515919091179055565b6012546001600160a01b0382166000908152602a60205260408120549091429161353f91614b5a565b111561354d5750600061188a565b6012546001600160a01b0383166000908152602a6020526040812054909161357a91611880904290614bb4565b6001600160a01b038416600090815260256020526040902054909150806135a65760009250505061188a565b6001600160a01b0384166000908152601f602052604081205460ff166135ce576013546135d2565b6014545b6001600160a01b03861660009081526026602052604090205490915061360b90839061188090869061360590869061455a565b9061455a565b95945050505050565b60165460ff1681565b60226020526000908152604090205481565b60085481565b601654610100900460ff1681565b6001600160a01b0381166000908152601f602052604081205460ff161561368357506001600160a01b03811660009081526025602052604090205461188a565b6001600160a01b0382166000908152602860205260408120546136a79084906133da565b6001600160a01b038416600090815260266020908152604080832054602590925290912054919250611886916136de908490614b5a565b90614bb4565b6001546040805163b1cc53ab60e01b81526001600160a01b038681166004830152858116602483015284151560448301529151600093630100000090049092169163b1cc53ab91606480820192602092909190829003018186803b15801561374b57600080fd5b505afa15801561375f573d6000803e3d6000fd5b505050506040513d602081101561377557600080fd5b5051949350505050565b6001600160a01b0381166000908152602d60205260408120548190806137ac576000809250925050613812565b60006137b785613fd9565b6001600160a01b0386166000908152602e60205260408120549192508282116137e9576137e48383614bb4565b6137f3565b6137f38284614bb4565b9050600061380583611880878561455a565b9390921195509193505050505b915091565b60266020526000908152604090205481565b60135481565b60296020526000908152604090205481565b6001546040805163c7e074c360e01b81526001600160a01b03888116600483015260248201889052604482018790526064820186905284151560848301529151600093630100000090049092169163c7e074c39160a480820192602092909190829003018186803b1580156138b557600080fd5b505afa1580156138c9573d6000803e3d6000fd5b505050506040513d60208110156138df57600080fd5b50519695505050505050565b6138f3614b41565b6139076001600160a01b03831684836157e6565b505050565b613914614b41565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61393e614b41565b601755565b61394b614b41565b61395a61271082116002614626565b600855565b613967614b41565b6001600160a01b038216600090815260236020526040902054808211156139a15761399b836139968484614bb4565b6156b0565b506139b4565b613907836139af8385614bb4565b61477f565b5050565b6001546040805163d54d5a9f60e01b81526001600160a01b03888116600483015287811660248301528681166044830152851515606483015284151560848301528251600094859463010000009091049092169263d54d5a9f9260a4808301939192829003018186803b158015613a2e57600080fd5b505afa158015613a42573d6000803e3d6000fd5b505050506040513d6040811015613a5857600080fd5b508051602090910151909890975095505050505050565b602a6020526000908152604090205481565b60105481565b6001546040805163369d949360e21b81526001600160a01b0389811660048301528881166024830152878116604483015286151560648301526084820186905260a482018590529151600093630100000090049092169163da76524c9160c480820192602092909190829003018186803b158015613b0457600080fd5b505afa158015613b18573d6000803e3d6000fd5b505050506040513d6020811015613b2e57600080fd5b5051979650505050505050565b601c6020526000908152604090205460ff1681565b602080526000908152604090205460ff1681565b6000806000613b768a8a8a8a8861287a565b90925090506000613b878a87614b5a565b905060008815613bb65783613ba557613ba08284614bb4565b613baf565b613baf8284614b5a565b9050613bd7565b83613bca57613bc58284614b5a565b613bd4565b613bd48284614bb4565b90505b613be5816118808a8561455a565b9c9b505050505050505050505050565b60155481565b60026000541415613c41576040805162461bcd60e51b815260206004820152601f6024820152600080516020615f56833981519152604482015290519081900360640190fd5b60026000556016546301000000900460ff1615613c765733600090815260196020526040902054613c769060ff166022614626565b6016805460ff19169055613c8a848461426a565b6000613c9886868686611d03565b9050613ca2615f03565b506000818152602b6020908152604091829020825160e08101845281548082526001830154938201939093526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c0830152613d0e9015156023614626565b600080613d1f8989898960006139b8565b91509150613d3282600014156024614626565b8160021415613d6757613d4f898989600087600001518b8f6151ed565b50506016805460ff1916600117905550613fc7915050565b6000613d7389836133da565b6001600160a01b038a166000908152602c6020526040902054909150613d999082614b5a565b6001600160a01b038a166000818152602c602090815260409182902093909355805191825291810184905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a1613e04898560800151615838565b8615613e335760208401518451613e25918b91613e2091614bb4565b614f9b565b613e33896124bd8b856133da565b600087613e4857613e4389613fd9565b613e51565b613e5189612be6565b90507f2e1f85a64a2f22cf2f0c42584e7c919ed4abe8d53675cff0f62bf1e95a1c676f868c8c8c8c8a600001518b602001518c608001518d60a001518a604051808b81526020018a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b0316815260200187151581526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a187158015613f105750846020015183105b15613f3e576020850151600090613f279085614bb4565b9050613f3c8b613f378d846133da565b61501a565b505b87613f5157613f518986600001516158ef565b6000868152602b60205260408120818155600181018290556002810182905560038101829055600481018290556005810182905560060155600954613f9d908b906124bd9082906133da565b613fb38a613fad8c6009546133da565b89614a9a565b50506016805460ff19166001179055505050505b50506001600055505050565b600e5481565b60048054601654604080516317e1d38560e11b81526001600160a01b03868116958201959095526001602482015260ff80841615156044830152610100909304909216151560648301525160009390921691632fc3a70a91608480820192602092909190829003018186803b158015612c5f57600080fd5b601b818154811061405e57fe5b6000918252602090912001546001600160a01b0316905081565b614080614b41565b6001600160a01b0381166000908152601c60205260409020546140a79060ff16600d614626565b6001600160a01b0381166000908152602260205260409020546015546140cc91614bb4565b6015556001600160a01b0381166000908152601c60209081526040808320805460ff19908116909155601d835281842084905560228352818420849055601e835281842084905560248352818420849055601f835281842080548216905591805290912080549091169055600754614145906001614bb4565b60075550565b6005546001600160a01b031681565b614162614b41565b6001600160a01b039091166000908152602f6020526040902055565b60286020526000908152604090205481565b614198614b41565b6016805491151563010000000263ff00000019909216919091179055565b60006141c0614b41565b6001600160a01b0383166000908152602c6020526040902054806141e8576000915050611b88565b6001600160a01b0384166000908152602c602052604081205561210f848285614a9a565b601a6020526000908152604090205460ff1681565b6003546001600160a01b031681565b60008261423f5750600061210f565b6001600160a01b0384166000908152601d602052604090205461360b8361188086600a85900a61455a565b6001546040805163fbfded6d60e01b81526001600160a01b03858116600483015284811660248301529151600093630100000090049092169163fbfded6d9160448082019260209290919082900301818787803b1580156142ca57600080fd5b505af11580156142de573d6000803e3d6000fd5b505050506040513d60208110156142f457600080fd5b505190508061430357506139b4565b6001600160a01b0383166000908152602a6020526040902054614350576012546143319061360542826145b3565b6001600160a01b0384166000908152602a6020526040902055506139b4565b6012546001600160a01b0384166000908152602a602052604090205442916143789190614b5a565b111561438457506139b4565b600061438f84613516565b6001600160a01b0385166000908152602960205260409020549091506143b59082614b5a565b6001600160a01b0385166000908152602960205260409020556012546143df9061360542826145b3565b6001600160a01b0385166000818152602a602090815260408083209490945560298152908390205483519283529082015281517fa146fc154e1913322e9817d49f0d5c37466c24326e15de10e739a948be815eab929181900390910190a150505050565b610e1081565b6001546040805163fdaf6ac360e01b81526001600160a01b038881166004830152878116602483015286811660448301528515156064830152608482018590529151600093630100000090049092169163fdaf6ac39160a480820192602092909190829003018186803b1580156138b557600080fd5b60306020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156145525780601f1061452757610100808354040283529160200191614552565b820191906000526020600020905b81548152906001019060200180831161453557829003601f168201915b505050505081565b60008261456957506000611b88565b8282028284828161457657fe5b041461210f5760405162461bcd60e51b8152600401808060200182810382526021815260200180615f766021913960400191505060405180910390fd5b600061210f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250615957565b60165462010000900460ff161561462457336000908152601a60205260409020546146249060ff166036614626565b565b6000818152603060205260409020826139075760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156146c35780601f10614698576101008083540402835291602001916146c3565b820191906000526020600020905b8154815290600101906020018083116146a657829003601f168201915b50509250505060405180910390fd5b6001600160a01b03811660008181526021602090815260408083205481516370a0823160e01b8152306004820152915193949093859391926370a08231926024808301939192829003018186803b15801561472c57600080fd5b505afa158015614740573d6000803e3d6000fd5b505050506040513d602081101561475657600080fd5b50516001600160a01b03851660009081526021602052604090208190559050611e518183614bb4565b6001600160a01b0382166000908152602360205260409020548181116147fa576001600160a01b0383166000818152602360209081526040808320929092558151928352820183905280517f4cd0095bd565d45488212267145f37c5a223186512b169e04f24bc12a4f6b3079281900390910190a1506139b4565b6148048183614bb4565b6001600160a01b03841660008181526023602090815260409182902093909355805191825291810184905281517f4cd0095bd565d45488212267145f37c5a223186512b169e04f24bc12a4f6b307929181900390910190a1505050565b604080518082018252601a81527f5661756c743a20706f6f6c416d6f756e742065786365656465640000000000006020808301919091526001600160a01b0385166000908152602590915291909120546148bc9183906159f9565b6001600160a01b038316600090815260256020908152604080832084905560269091529020546148ef9110156032614626565b604080516001600160a01b03841681526020810183905281517f112726233fbeaeed0f5b1dba5cb0b2b81883dee49fb35ff99fd98ed9f6d31eb0929181900390910190a15050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561498657600080fd5b505afa15801561499a573d6000803e3d6000fd5b505050506040513d60208110156149b057600080fd5b50516001600160a01b0390921660009081526021602052604090209190915550565b6000806149ef6127106118806149e88287614bb4565b879061455a565b905060006149fd8583614bb4565b6001600160a01b0387166000908152602c6020526040902054909150614a239082614b5a565b6001600160a01b0387166000908152602c60205260409020557f47cd9dda0e50ce30bcaaacd0488452b596221c07ac402a581cfae4d3933cac2b86614a688184611b3b565b604080516001600160a01b0390931683526020830191909152818101849052519081900360600190a150949350505050565b614aae6001600160a01b03841682846157e6565b604080516370a0823160e01b815230600482015290516001600160a01b038516916370a08231916024808301926020929190829003018186803b158015614af457600080fd5b505afa158015614b08573d6000803e3d6000fd5b505050506040513d6020811015614b1e57600080fd5b50516001600160a01b039093166000908152602160205260409020929092555050565b600654614624906001600160a01b031633146035614626565b60008282018381101561210f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061210f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506159f9565b601754614c0257614624565b6146246017543a11156037614626565b336001600160a01b0382161415614c2857614c72565b6003546001600160a01b0316331415614c4057614c72565b6001600160a01b0381166000908152601860209081526040808320338452909152902054614c729060ff166029614626565b50565b8015614cee57614c9a826001600160a01b0316846001600160a01b031614602a614626565b6001600160a01b0383166000908152601c6020526040902054614cc19060ff16602b614626565b6001600160a01b0383166000908152601f6020526040902054614ce99060ff1615602c614626565b613907565b6001600160a01b0383166000908152601c6020526040902054614d159060ff16602d614626565b6001600160a01b0383166000908152601f6020526040902054614d3c9060ff16602e614626565b6001600160a01b0382166000908152601f6020526040902054614d649060ff1615602f614626565b6001600160a01b03821660009081526020805260409020546139079060ff166030614626565b600080614d9a8989898989614449565b90506000614dac8a8a8a8a8989613a87565b9050614db88282614b5a565b91506000614dc68a846133da565b6001600160a01b038b166000908152602c6020526040902054909150614dec9082614b5a565b6001600160a01b038b166000818152602c602090815260409182902093909355805191825291810185905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a150909998505050505050505050565b81614e6e57614e6981156027614626565b6139b4565b6139b4818310156028614626565b6001600160a01b038216600090815260266020526040902054614e9f9082614b5a565b6001600160a01b038316600090815260266020818152604080842085905560258252909220549152614ed49111156034614626565b604080516001600160a01b03841681526020810183905281517faa5649d82f5462be9d19b0f2b31a59b2259950a6076550bac9f3a1c07db9f66d929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614f3f9082614b5a565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517fd9d4761f75e0d0103b5cbeab941eeb443d7a56a35b5baf2a0787c03f03f4e474929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614fbe9082614bb4565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517f34e07158b9db50df5613e591c44ea2ebc82834eff4a4dc3a46e000e608261d68929181900390910190a15050565b6001600160a01b03821660009081526025602052604090205461503d9082614b5a565b6001600160a01b03831660008181526025602090815260408083209490945583516370a0823160e01b8152306004820152935191936370a082319260248083019392829003018186803b15801561509357600080fd5b505afa1580156150a7573d6000803e3d6000fd5b505050506040513d60208110156150bd57600080fd5b50516001600160a01b0384166000908152602560205260409020549091506150e9908210156031614626565b604080516001600160a01b03851681526020810184905281517f976177fbe09a15e5e43f848844963a42b41ef919ef17ff21a17a5421de8f4737929181900390910190a1505050565b6001600160a01b0382166000908152602d60205260409020546151559082614b5a565b6001600160a01b0383166000908152602d6020908152604080832093909355602f905220548015613907576001600160a01b0383166000908152602d6020526040902054811015613907576040805162461bcd60e51b815260206004820152601a60248201527f5661756c743a206d61782073686f727473206578636565646564000000000000604482015290519081900360640190fd5b600154604080516381d11a2360e01b81526001600160a01b038a8116600483015289811660248301528881166044830152606482018890526084820187905285151560a483015284811660c4830152915160009363010000009004909216916381d11a239160e4808201928692909190829003018186803b15801561527157600080fd5b505afa158015615285573d6000803e3d6000fd5b50505050615293878761426a565b60006152a189898987611d03565b6000818152602b602052604090208054919250906152c2901515601f614626565b6152d486826000015410156020614626565b6152e687826001015410156021614626565b60018101548154600483015460009161530391611880908b61455a565b60048401549091506153159082614bb4565b60048401556153248b82615838565b506000806153368d8d8d8d8d8d615a53565b8554919350915089146154da5761534e8c8c8a6136e4565b6003850155835461535f908a614bb4565b80855560018501546153719190614e58565b61537f8d8d8d8b60016139b8565b505087156153ac576153a28c612496866001015486614bb490919063ffffffff16565b6153ac8c8a614f9b565b6000886153c1576153bc8c613fd9565b6153ca565b6153ca8c612be6565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886153ff8c8c614bb4565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201839052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a15061564e565b87156154f4576154ea8c84614f1c565b6154f48c8a614f9b565b600088615509576155048c613fd9565b615512565b6155128c612be6565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886155478c8c614bb4565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c0830152517f73af1d417d82c240fdb6d319b34ad884487c6bf2845d98980cc52ad9171cb4559181900360e00190a1506000858152602b602052604081208181556001810182905560028101829055600381018290556004810182905560058101829055600601555b8761565d5761565d8b8a6158ef565b811561569d578715615677576156778c6124bd8e856133da565b60006156838d836133da565b90506156908d828a614a9a565b9550612836945050505050565b5060009c9b505050505050505050505050565b6001600160a01b0382166000908152602360205260409020546156d39082614b5a565b6001600160a01b0383166000908152602360209081526040808320939093556024905220548015615725576001600160a01b038316600090815260236020526040902054615725908210156033614626565b604080516001600160a01b03851681526020810184905281517f8734a535d62699174c322d74d291c6053308a8caf79759684f44851562dc5cce929181900390910190a1505050565b6001600160a01b0381166000908152602760209081526040808320546025909252909120541015614c72576040805162461bcd60e51b815260206004820152601a60248201527f5661756c743a20706f6f6c416d6f756e74203c20627566666572000000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052613907908490615c4d565b604080518082018252601b81527f5661756c743a20696e73756666696369656e74207265736572766500000000006020808301919091526001600160a01b0385166000908152602690915291909120546158939183906159f9565b6001600160a01b03831660008181526026602090815260409182902093909355805191825291810183905281517f533cb5ed32be6a90284e96b5747a1bfc2d38fdb5768a6b5f67ff7d62144ed67b929181900390910190a15050565b6001600160a01b0382166000908152602d60205260409020548082111561592f57506001600160a01b0382166000908152602d60205260408120556139b4565b6159398183614bb4565b6001600160a01b0384166000908152602d6020526040902055505050565b600081836159e35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156159a8578181015183820152602001615990565b50505050905090810190601f1680156159d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816159ef57fe5b0495945050505050565b60008184841115615a4b5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156159a8578181015183820152602001615990565b505050900390565b6000806000615a6489898987611d03565b6000818152602b60205260408120805460038201549394509092615a91918d918d918d918b918d91614d8a565b9050600080600080615ab28d876000015488600201548d8a6006015461287a565b87549195508593509150615aca906118808d8461455a565b925050506000828015615add5750600082115b15615b0d5750600584018054820190558088615b0d576000615aff8e846133da565b9050615b0b8e82614861565b505b82158015615b1b5750600082115b15615b5f576001850154615b2f9083614bb4565b600186015588615b53576000615b458e846133da565b9050615b518e8261501a565b505b60058501805483900390555b8a15615b8757615b6f818c614b5a565b6001860154909150615b81908c614bb4565b60018601555b84548a1415615baa576001850154615ba0908290614b5a565b6000600187015590505b8084811115615bc457615bbd8286614bb4565b9050615bf8565b6001860154615bd39086614bb4565b60018701558915615bf8576000615bea8f876133da565b9050615bf68f82614861565b505b60408051888152851515602082015280820185905290517f3ff41bdde87755b687ae83d0221a232b6be51a803330ed9661c1b5d0105e0d8a9181900360600190a1909e909d509b505050505050505050505050565b6060615ca2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316615cfe9092919063ffffffff16565b80519091501561390757808060200190516020811015615cc157600080fd5b50516139075760405162461bcd60e51b815260040180806020018281038252602a815260200180615f97602a913960400191505060405180910390fd5b6060611e51848460008585615d1285615e19565b615d63576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310615da25780518252601f199092019160209182019101615d83565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615e04576040519150601f19603f3d011682016040523d82523d6000602084013e615e09565b606091505b5091509150612836828286615e1f565b3b151590565b60608315615e2e57508161210f565b825115615e3e5782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156159a8578181015183820152602001615990565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615ec65782800160ff19823516178555615ef3565b82800160010185558215615ef3579182015b82811115615ef3578235825591602001919060010190615ed8565b50615eff929150615f40565b5090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b5b80821115615eff5760008155600101615f4156fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22261,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 10267,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isInitialized",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 10271,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isSwapEnabled",
        "offset": 1,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 10275,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isLeverageEnabled",
        "offset": 2,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 10277,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "vaultUtils",
        "offset": 3,
        "slot": "1",
        "type": "t_contract(IVaultUtils)18297"
      },
      {
        "astId": 10279,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "errorController",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 10282,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "router",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 10285,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 10288,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "usdm",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 10291,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "gov",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 10294,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "whitelistedTokenCount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 10300,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxLeverage",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 10303,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "liquidationFeeUsd",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 10307,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "taxBasisPoints",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 10311,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableTaxBasisPoints",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 10315,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "mintBurnFeeBasisPoints",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 10319,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "swapFeeBasisPoints",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 10323,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableSwapFeeBasisPoints",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 10327,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "marginFeeBasisPoints",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 10330,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "minProfitTime",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 10334,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "hasDynamicFees",
        "offset": 0,
        "slot": "17",
        "type": "t_bool"
      },
      {
        "astId": 10338,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "fundingInterval",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 10341,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "fundingRateFactor",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 10344,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableFundingRateFactor",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 10347,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "totalTokenWeights",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 10350,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "includeAmmPrice",
        "offset": 0,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10353,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "useSwapPricing",
        "offset": 1,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10357,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "inManagerMode",
        "offset": 2,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10361,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "inPrivateLiquidationMode",
        "offset": 3,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10364,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxGasPrice",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 10371,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "approvedRouters",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 10376,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isLiquidator",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10381,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isManager",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10385,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "allWhitelistedTokens",
        "offset": 0,
        "slot": "27",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 10390,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "whitelistedTokens",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10395,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "tokenDecimals",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10400,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "minProfitBasisPoints",
        "offset": 0,
        "slot": "30",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10405,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableTokens",
        "offset": 0,
        "slot": "31",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10410,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "shortableTokens",
        "offset": 0,
        "slot": "32",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10415,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "tokenBalances",
        "offset": 0,
        "slot": "33",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10420,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "tokenWeights",
        "offset": 0,
        "slot": "34",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10425,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "usdmAmounts",
        "offset": 0,
        "slot": "35",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10430,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxUsdmAmounts",
        "offset": 0,
        "slot": "36",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10435,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "poolAmounts",
        "offset": 0,
        "slot": "37",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10440,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "reservedAmounts",
        "offset": 0,
        "slot": "38",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10445,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "bufferAmounts",
        "offset": 0,
        "slot": "39",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10450,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "guaranteedUsd",
        "offset": 0,
        "slot": "40",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10455,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "cumulativeFundingRates",
        "offset": 0,
        "slot": "41",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10460,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "lastFundingTimes",
        "offset": 0,
        "slot": "42",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10464,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "positions",
        "offset": 0,
        "slot": "43",
        "type": "t_mapping(t_bytes32,t_struct(Position)10233_storage)"
      },
      {
        "astId": 10469,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "feeReserves",
        "offset": 0,
        "slot": "44",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10474,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "globalShortSizes",
        "offset": 0,
        "slot": "45",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10479,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "globalShortAveragePrices",
        "offset": 0,
        "slot": "46",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10484,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxGlobalShortSizes",
        "offset": 0,
        "slot": "47",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10488,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "errors",
        "offset": 0,
        "slot": "48",
        "type": "t_mapping(t_uint256,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IVaultUtils)18297": {
        "encoding": "inplace",
        "label": "contract IVaultUtils",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(Position)10233_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Vault.Position)",
        "numberOfBytes": "32",
        "value": "t_struct(Position)10233_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Position)10233_storage": {
        "encoding": "inplace",
        "label": "struct Vault.Position",
        "members": [
          {
            "astId": 10220,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "size",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 10222,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "collateral",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 10224,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "averagePrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10226,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "entryFundingRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 10228,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "reserveAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 10230,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "realisedPnl",
            "offset": 0,
            "slot": "5",
            "type": "t_int256"
          },
          {
            "astId": 10232,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "lastIncreasedTime",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
