/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { SablierSalary, SablierSalaryInterface } from '../SablierSalary';

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'relayers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'sablier',
    outputs: [
      {
        internalType: 'contract Sablier',
        name: '',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'relayer',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
    ],
    name: 'whitelistRelayer',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'relayer',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
    ],
    name: 'discardRelayer',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'employee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'salary',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'startTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stopTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'senderSharePercentage',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'recipientSharePercentage',
        type: 'uint256',
      },
    ],
    name: 'createCompoundingSalary',
    outputs: [
      {
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'getHubAddr',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'bytes',
        name: 'context',
        type: 'bytes',
      },
    ],
    name: 'preRelayedCall',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
    ],
    name: 'getSalary',
    outputs: [
      {
        internalType: 'address',
        name: 'company',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'employee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'salary',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'startTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stopTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'remainingBalance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rate',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [],
    name: 'initialize',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'address',
        name: 'relay',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'encodedFunction',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'transactionFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasLimit',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'approvalData',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'acceptRelayedCall',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'relayHubVersion',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'ownerAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'signerAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'sablierAddress',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'trustedSigner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
    ],
    name: 'cancelSalary',
    outputs: [
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'employee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'salary',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'startTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stopTime',
        type: 'uint256',
      },
    ],
    name: 'createSalary',
    outputs: [
      {
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'nextSalaryId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'bytes',
        name: 'context',
        type: 'bytes',
      },
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'actualCharge',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'preRetVal',
        type: 'bytes32',
      },
    ],
    name: 'postRelayedCall',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawFromSalary',
    outputs: [
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'streamId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'company',
        type: 'address',
      },
    ],
    name: 'CreateSalary',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'streamId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'company',
        type: 'address',
      },
    ],
    name: 'WithdrawFromSalary',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'salaryId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'streamId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'company',
        type: 'address',
      },
    ],
    name: 'CancelSalary',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldRelayHub',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newRelayHub',
        type: 'address',
      },
    ],
    name: 'RelayHubChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
];

export class SablierSalary__factory {
  static readonly abi = _abi;
  static createInterface(): SablierSalaryInterface {
    return new utils.Interface(_abi) as SablierSalaryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SablierSalary {
    return new Contract(address, _abi, signerOrProvider) as SablierSalary;
  }
}
