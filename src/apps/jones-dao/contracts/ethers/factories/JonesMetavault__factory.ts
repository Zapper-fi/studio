/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { JonesMetavault, JonesMetavaultInterface } from '../JonesMetavault';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_lpToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_storageAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_riskPercentage',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_feePercentage',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_feeReceiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_oneInchRouter',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_vaultCap',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_RDPXETHFarm',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ACTION_FORBIDEN_IN_USER_STATE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ALREADY_BORROWED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ALREADY_WHITELISTED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CANNOT_CANCEL_EXIT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CANNOT_WITHDRAW',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DEPOSITED_THIS_EPOCH',
    type: 'error',
  },
  {
    inputs: [],
    name: 'EMERGENCY_AFTER_SIGNAL',
    type: 'error',
  },
  {
    inputs: [],
    name: 'EMERGENCY_OFF_NOT_PAUSED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'EPOCH_ENDED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FORBIDDEN_SWAP_DESTINATION',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FORBIDDEN_SWAP_RECEIVER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FORBIDDEN_SWAP_SOURCE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HIGH_SLIPPAGE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'INVALID_SWAP',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NON_WHITELISTED_FLIP',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NOT_WHITELISTED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NO_DEPOSITS_FOR_USER',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OPERATION_IN_FUTURE',
    type: 'error',
  },
  {
    inputs: [],
    name: 'STARTING_EPOCH_BEFORE_ENDING_LAST',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TARGET_VAULT_FULL',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TERMINAL_EPOCH_NOT_REACHED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'USER_ALREADY_EXITING',
    type: 'error',
  },
  {
    inputs: [],
    name: 'USER_EXITING',
    type: 'error',
  },
  {
    inputs: [],
    name: 'USER_EXITING_ON_FLIP_VAULT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'USER_FLIPPING',
    type: 'error',
  },
  {
    inputs: [],
    name: 'USER_FLIPPING_ON_FLIP_VAULT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VAULT_FULL',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VAULT_PAUSED',
    type: 'error',
  },
  {
    inputs: [],
    name: 'WRONG_VAULT_ARGS',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZERO_VALUE',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'Borrowed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'CanceledDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'Deposited',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: '_epoch',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_endBalance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_startBalance',
        type: 'uint256',
      },
    ],
    name: 'EpochEnded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: '_epoch',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_startBalance',
        type: 'uint256',
      },
    ],
    name: 'EpochStart',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_vault',
        type: 'address',
      },
    ],
    name: 'Flipped',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'Repayed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_oldRate',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_newRate',
        type: 'uint256',
      },
    ],
    name: 'RiskPercentageUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'UserCancelSignalExit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'UserSignalExit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_epoch',
        type: 'uint256',
      },
    ],
    name: 'VaultPaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'Withdrew',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ACCURACY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'GOVERNOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'KEEPER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'addKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strat',
        type: 'address',
      },
    ],
    name: 'addStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'swapFromIntermediate',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInIntermediateParams[]',
        name: '_intermediateZapSwaps',
        type: 'tuple[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInParams[]',
        name: '_directZapSwaps',
        type: 'tuple[]',
      },
    ],
    name: 'autoCompound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[2]',
        name: '_minTokenOutputs',
        type: 'uint256[2]',
      },
    ],
    name: 'borrow',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'borrowed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_epoch',
        type: 'uint256',
      },
    ],
    name: 'calculateRewardsAtEndOfEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_epoch',
        type: 'uint256',
      },
    ],
    name: 'calculateRewardsAtStartOfEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cancelDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cancelSignalExit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'deposited',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'emergencyWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'swapFromIntermediate',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInIntermediateParams[]',
        name: '_intermediateZapSwaps',
        type: 'tuple[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInParams[]',
        name: '_directZapSwaps',
        type: 'tuple[]',
      },
    ],
    name: 'endEpoch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'epoch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'epochEnded',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'epochs',
    outputs: [
      {
        internalType: 'uint256',
        name: 'startAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'endAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'farm',
    outputs: [
      {
        internalType: 'contract IStakingRewardsV3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feePercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeReceiver',
    outputs: [
      {
        internalType: 'contract IFeeReceiver',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'finalEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'flipUserInfo',
    outputs: [
      {
        internalType: 'uint256',
        name: 'userPercentage',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'destinationVault',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'flipVault',
    outputs: [
      {
        internalType: 'contract ILPVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'getUserStatus',
    outputs: [
      {
        internalType: 'enum ILPVault.UserStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lpStorage',
    outputs: [
      {
        internalType: 'contract UserLPStorage',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'removeKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strat',
        type: 'address',
      },
    ],
    name: 'removeStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minPairTokens',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_inTokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: '_inTokenAmounts',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'caller',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'srcToken',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'dstToken',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'srcReceiver',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'dstReceiver',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'minReturnAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'flags',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'permit',
                type: 'bytes',
              },
            ],
            internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
            name: 'desc',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct OneInchZapLib.SwapParams[]',
        name: '_swapParams',
        type: 'tuple[]',
      },
    ],
    name: 'repay',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'riskPercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_feePercentage',
        type: 'uint256',
      },
    ],
    name: 'setFeePercentage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_feeReceiver',
        type: 'address',
      },
    ],
    name: 'setFeeReceiver',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vault',
        type: 'address',
      },
    ],
    name: 'setFlipVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_riskPercentage',
        type: 'uint256',
      },
    ],
    name: 'setRiskPercentage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newCap',
        type: 'uint256',
      },
    ],
    name: 'setVaultCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'signalExit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'signalFlip',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'swapFromIntermediate',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInIntermediateParams[]',
        name: '_intermediateZapSwaps',
        type: 'tuple[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInParams[]',
        name: '_directZapSwaps',
        type: 'tuple[]',
      },
    ],
    name: 'startEpoch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stopVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalDeposited',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newGovernor',
        type: 'address',
      },
    ],
    name: 'transferGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_farm',
        type: 'address',
      },
    ],
    name: 'updateFarm',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'userDepositPerEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userEpochs',
    outputs: [
      {
        internalType: 'uint256',
        name: 'end',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deposited',
        type: 'uint256',
      },
      {
        internalType: 'enum ILPVault.UserStatus',
        name: 'status',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'exitPercentage',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultType',
    outputs: [
      {
        internalType: 'enum ILPVault.VaultType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'workingBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'swapFromIntermediate',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInIntermediateParams[]',
        name: '_intermediateZapSwaps',
        type: 'tuple[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'caller',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'srcToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstToken',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'srcReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'dstReceiver',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'minReturnAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'flags',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'permit',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct I1inchAggregationRouterV4.SwapDescription',
                name: 'desc',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct OneInchZapLib.SwapParams',
            name: 'toPairTokens',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'pairAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'token0Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minPairTokens',
            type: 'uint256',
          },
        ],
        internalType: 'struct OneInchZapLib.ZapInParams[]',
        name: '_directZapSwaps',
        type: 'tuple[]',
      },
    ],
    name: 'zapToken',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class JonesMetavault__factory {
  static readonly abi = _abi;
  static createInterface(): JonesMetavaultInterface {
    return new utils.Interface(_abi) as JonesMetavaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): JonesMetavault {
    return new Contract(address, _abi, signerOrProvider) as JonesMetavault;
  }
}
